[{"F:\\mern\\projects\\greenbeans\\client\\src\\index.js":"1","F:\\mern\\projects\\greenbeans\\client\\src\\App.js":"2","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js":"3","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js":"4","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js":"5","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js":"6","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js":"7","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js":"8","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js":"9","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js":"10","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js":"11","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js":"12","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js":"13","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js":"14","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js":"15","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js":"16","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js":"17","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js":"18","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js":"19","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js":"20","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js":"21","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js":"22","F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js":"23","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js":"24","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js":"25","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js":"26","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js":"27","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js":"28","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js":"29","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js":"30","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js":"31","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js":"32","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js":"33","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js":"34","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js":"35","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js":"36","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js":"37","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js":"38","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js":"39","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js":"40","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js":"41","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js":"42","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js":"43","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js":"44","F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js":"45","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js":"46","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EditProduct.js":"47","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteProduct.js":"48","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteEmployee.js":"49","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteCustomer.js":"50","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\BarChart.js":"51","F:\\mern\\projects\\greenbeans\\client\\src\\core\\data.js":"52","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\LineChart.js":"53","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\PieChart.js":"54","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Loading.js":"55","F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductDetail.js":"56","F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductListing.js":"57","F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductComponent.js":"58","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\routes-manager\\Routes.js":"59","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\backend-manager\\backend.js":"60","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\store.js":"61","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\reducers\\index.js":"62","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\reducers\\cartReducer.js":"63","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\reducers\\productReducer.js":"64","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\constants\\action-types.js":"65","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\actions\\cartActions.js":"66","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\auth\\index.js":"67","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\auth\\CustomerRoutes.js":"68","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\auth\\AdminRoutes.js":"69","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\auth\\EmployeeRoutes.js":"70","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\context-manager\\Context.js":"71"},{"size":420,"mtime":1658716124916,"results":"72","hashOfConfig":"73"},{"size":401,"mtime":1658764576476,"results":"74","hashOfConfig":"73"},{"size":21393,"mtime":1658767676317,"results":"75","hashOfConfig":"73"},{"size":15952,"mtime":1658767700372,"results":"76","hashOfConfig":"73"},{"size":74,"mtime":1654823535619,"results":"77","hashOfConfig":"73"},{"size":5844,"mtime":1658767687800,"results":"78","hashOfConfig":"73"},{"size":2754,"mtime":1658763506496,"results":"79","hashOfConfig":"73"},{"size":4284,"mtime":1658767792641,"results":"80","hashOfConfig":"73"},{"size":1078,"mtime":1651432461264,"results":"81","hashOfConfig":"82"},{"size":3792,"mtime":1658767640289,"results":"83","hashOfConfig":"73"},{"size":4360,"mtime":1658768624504,"results":"84","hashOfConfig":"73"},{"size":4545,"mtime":1658767681797,"results":"85","hashOfConfig":"73"},{"size":5362,"mtime":1658767693696,"results":"86","hashOfConfig":"73"},{"size":5371,"mtime":1658768631975,"results":"87","hashOfConfig":"73"},{"size":5313,"mtime":1658768627192,"results":"88","hashOfConfig":"73"},{"size":16369,"mtime":1658763496033,"results":"89","hashOfConfig":"73"},{"size":8650,"mtime":1658767627637,"results":"90","hashOfConfig":"73"},{"size":3181,"mtime":1658763521571,"results":"91","hashOfConfig":"73"},{"size":4487,"mtime":1658767664609,"results":"92","hashOfConfig":"73"},{"size":3299,"mtime":1658767614708,"results":"93","hashOfConfig":"73"},{"size":8546,"mtime":1658767633821,"results":"94","hashOfConfig":"73"},{"size":918,"mtime":1658740110051,"results":"95","hashOfConfig":"73"},{"size":6329,"mtime":1658767806702,"results":"96","hashOfConfig":"73"},{"size":5859,"mtime":1658767620769,"results":"97","hashOfConfig":"73"},{"size":9691,"mtime":1658767576897,"results":"98","hashOfConfig":"73"},{"size":14944,"mtime":1658767534576,"results":"99","hashOfConfig":"73"},{"size":9211,"mtime":1658767596240,"results":"100","hashOfConfig":"73"},{"size":5002,"mtime":1658767528085,"results":"101","hashOfConfig":"73"},{"size":4266,"mtime":1658767583031,"results":"102","hashOfConfig":"73"},{"size":6026,"mtime":1658767522469,"results":"103","hashOfConfig":"73"},{"size":4006,"mtime":1658763526512,"results":"104","hashOfConfig":"73"},{"size":7773,"mtime":1658767564636,"results":"105","hashOfConfig":"73"},{"size":2019,"mtime":1658767494071,"results":"106","hashOfConfig":"73"},{"size":5264,"mtime":1658734981341,"results":"107","hashOfConfig":"73"},{"size":5163,"mtime":1658734404202,"results":"108","hashOfConfig":"73"},{"size":11513,"mtime":1658767723708,"results":"109","hashOfConfig":"73"},{"size":5857,"mtime":1658767731227,"results":"110","hashOfConfig":"73"},{"size":3636,"mtime":1658767571290,"results":"111","hashOfConfig":"73"},{"size":6592,"mtime":1658767737665,"results":"112","hashOfConfig":"73"},{"size":4272,"mtime":1655804956610,"results":"113","hashOfConfig":"73"},{"size":4272,"mtime":1658767744153,"results":"114","hashOfConfig":"73"},{"size":2732,"mtime":1658767749899,"results":"115","hashOfConfig":"73"},{"size":2784,"mtime":1658767590412,"results":"116","hashOfConfig":"73"},{"size":5346,"mtime":1658767670076,"results":"117","hashOfConfig":"73"},{"size":351,"mtime":1655957674061,"results":"118","hashOfConfig":"73"},{"size":7822,"mtime":1658767915402,"results":"119","hashOfConfig":"73"},{"size":6824,"mtime":1658767558426,"results":"120","hashOfConfig":"73"},{"size":2885,"mtime":1658767552891,"results":"121","hashOfConfig":"73"},{"size":2876,"mtime":1658767546929,"results":"122","hashOfConfig":"73"},{"size":2873,"mtime":1658767540695,"results":"123","hashOfConfig":"73"},{"size":206,"mtime":1657035303203,"results":"124","hashOfConfig":"73"},{"size":501,"mtime":1657034562427,"results":"125","hashOfConfig":"73"},{"size":210,"mtime":1657036502587,"results":"126","hashOfConfig":"73"},{"size":206,"mtime":1657036687155,"results":"127","hashOfConfig":"73"},{"size":671,"mtime":1658254586066,"results":"128","hashOfConfig":"73"},{"size":1571,"mtime":1658119248708,"results":"129","hashOfConfig":"73"},{"size":926,"mtime":1658033755615,"results":"130","hashOfConfig":"73"},{"size":926,"mtime":1657912678711,"results":"131","hashOfConfig":"73"},{"size":4429,"mtime":1658768646807,"results":"132","hashOfConfig":"73"},{"size":49,"mtime":1650587647917,"results":"133","hashOfConfig":"73"},{"size":331,"mtime":1658024771096,"results":"134","hashOfConfig":"73"},{"size":378,"mtime":1658138960418,"results":"135","hashOfConfig":"73"},{"size":514,"mtime":1658138875222,"results":"136","hashOfConfig":"73"},{"size":781,"mtime":1658033380497,"results":"137","hashOfConfig":"73"},{"size":331,"mtime":1658119131543,"results":"138","hashOfConfig":"73"},{"size":1063,"mtime":1658767273046,"results":"139","hashOfConfig":"73"},{"size":1507,"mtime":1658767423957,"results":"140","hashOfConfig":"73"},{"size":327,"mtime":1658767862304,"results":"141","hashOfConfig":"73"},{"size":356,"mtime":1656060724822,"results":"142","hashOfConfig":"73"},{"size":364,"mtime":1656060630163,"results":"143","hashOfConfig":"73"},{"size":233,"mtime":1656229436706,"results":"144","hashOfConfig":"73"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kpwsys",{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lc3eax",{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"307"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"307"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"307"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"355"},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\mern\\projects\\greenbeans\\client\\src\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\App.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js",["397","398","399"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../setup/auth/index\";\r\nimport { getEmployeeStatus, updateEmployeeStatus } from \"../user/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchCart } from \"../setup/redux-manager/actions/cartActions\";\r\n\r\nconst Nav = () => {\r\n  const cart = useSelector((state) => state.allCart.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const [active, setActive] = useState(false);\r\n  const [toggled, setToggled] = useState(false);\r\n  // const [cartCount, setCartCount] = useState();\r\n\r\n  const [employeeStatus, setEmployeeStatus] = useState();\r\n\r\n  // const { cart, setCart } = useContext(CartContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const showDropDown = () => {\r\n    setActive(true);\r\n  };\r\n\r\n  const hideDropDown = () => {\r\n    setActive(false);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setToggled(!toggled);\r\n  };\r\n\r\n  const loadEmployeeStatus = async () => {\r\n    try {\r\n      const data = await getEmployeeStatus(\r\n        isAuthenticated().user._id,\r\n        isAuthenticated().token\r\n      );\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployeeStatus(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeStatus = async (employeeUserId, token, Estatus) => {\r\n    try {\r\n      const data = await updateEmployeeStatus(employeeUserId, token, Estatus);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return loadEmployeeStatus();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCart());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated() && isAuthenticated().user.role === 1) {\r\n      loadEmployeeStatus(isAuthenticated().user._id, isAuthenticated().token);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"nav-section\">\r\n      <div className=\"wrap nav-wrap\">\r\n        <div className=\"nav-left-sec\">\r\n          <div className=\"nav-logo-sec\">\r\n            <Link className=\"nav-logo\" to=\"/\">\r\n              fresh from farm\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"nav-center-sec\">\r\n          <ul className=\"nav-ul\">\r\n            <li className=\"nav-li\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-li\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Categories\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-li\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                About Us\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-li\">\r\n              <Link className=\"nav-link active\" to=\"/\">\r\n                Contact\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"nav-right-sec\">\r\n          {!isAuthenticated() && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <Link to=\"/signup\">\r\n                  <button className=\"nav-btn\">Sign Up</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-li\">\r\n                <Link to=\"/login\">\r\n                  <button className=\"nav-btn nav-border\">Log In</button>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <Link to={`/cart/${user._id}`}>\r\n                  <div className=\"nav-cart-icon-sec\">\r\n                    <div className=\"nav-cart-icon-value\"><p>{cart.length}</p></div>\r\n                    {/* <img src={CartIcon} alt=\"\" className=\"nav-cart-icon\" /> */}\r\n                    <svg\r\n                      className=\"nav-cart-icon\"\r\n                      strokeWidth=\"0\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      height=\"1em\"\r\n                      width=\"1em\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <path d=\"M21.822 7.431A1 1 0 0 0 21 7H7.333L6.179 4.23A1.994 1.994 0 0 0 4.333 3H2v2h2.333l4.744 11.385A1 1 0 0 0 10 17h8c.417 0 .79-.259.937-.648l3-8a1 1 0 0 0-.115-.921zM17.307 15h-6.64l-2.5-6h11.39l-2.25 6z\"></path>\r\n                      <circle cx=\"10.5\" cy=\"19.5\" r=\"1.5\"></circle>\r\n                      <circle cx=\"17.5\" cy=\"19.5\" r=\"1.5\"></circle>\r\n                    </svg>\r\n                  </div>\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className=\"nav-li nav-border\"\r\n                onMouseOver={showDropDown}\r\n                onMouseLeave={hideDropDown}\r\n              >\r\n                <button className=\"nav-btn\">\r\n                  {isAuthenticated().user.name.length > 6\r\n                    ? isAuthenticated().user.name.substring(0, 6)\r\n                    : isAuthenticated().user.name}\r\n                </button>\r\n                {active && (\r\n                  <ul className=\"nav-drop-ul\" onMouseOver={showDropDown}>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/customerboard/orders/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">My Orders</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/customerboard/accounts/${user._id}`}>\r\n                        {\" \"}\r\n                        <div className=\"nav-drop-li-div\">My Account</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/customerboard/settings/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">My Settings</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() => {\r\n                          logout(() => navigate(\"/login\"));\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n            <ul className=\"nav-ul\">\r\n              <li\r\n                className=\"nav-li nav-border\"\r\n                onMouseOver={showDropDown}\r\n                onMouseLeave={hideDropDown}\r\n              >\r\n                <button className=\"nav-btn\">\r\n                  {isAuthenticated().user.name.length > 6\r\n                    ? isAuthenticated().user.name.substring(0, 6)\r\n                    : isAuthenticated().user.name}\r\n                </button>\r\n                {active && (\r\n                  <ul className=\"nav-drop-ul\" onMouseOver={showDropDown}>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/dashboard/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Dashboard</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/deliveries/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Deliveries</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/accounts/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Account</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/settings/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Settings</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      {employeeStatus === \"Available\" && (\r\n                        <button\r\n                          className=\"nav-drop-btn\"\r\n                          onClick={() =>\r\n                            handleEmployeeStatus(\r\n                              isAuthenticated().user._id,\r\n                              isAuthenticated().token,\r\n                              \"NotAvailable\"\r\n                            )\r\n                          }\r\n                        >\r\n                          Make Not Available\r\n                        </button>\r\n                      )}\r\n                      {employeeStatus === \"NotAvailable\" && (\r\n                        <button\r\n                          className=\"nav-drop-btn\"\r\n                          onClick={() =>\r\n                            handleEmployeeStatus(\r\n                              isAuthenticated().user._id,\r\n                              isAuthenticated().token,\r\n                              \"Available\"\r\n                            )\r\n                          }\r\n                        >\r\n                          Make Available\r\n                        </button>\r\n                      )}\r\n                      {employeeStatus === \"OnDuty\" && (\r\n                        <button className=\"nav-drop-btn button-unclickable\">\r\n                          On Duty\r\n                        </button>\r\n                      )}\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() => {\r\n                          logout(() => navigate(\"/login\"));\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 2 && (\r\n            <ul className=\"nav-ul\">\r\n              <li\r\n                className=\"nav-li nav-border\"\r\n                onMouseOver={showDropDown}\r\n                onMouseLeave={hideDropDown}\r\n              >\r\n                <button className=\"nav-btn\">\r\n                  {isAuthenticated().user.name.length > 6\r\n                    ? isAuthenticated().user.name.substring(0, 6)\r\n                    : isAuthenticated().user.name}\r\n                </button>\r\n                {active && (\r\n                  <ul className=\"nav-drop-ul\" onMouseOver={showDropDown}>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/admindashpanel/dashboard/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Admin Panel</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/adminboard/accounts/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Account</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/adminboard/settings/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Settings</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() => {\r\n                          logout(() => navigate(\"/login\"));\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* nav-mobile section starts */}\r\n\r\n      <div className=\"wrap nav-wrap-mobile\">\r\n        <Link className=\"nav-logo\" to=\"/\">\r\n          fresh from farm\r\n        </Link>\r\n        <div className=\"nav-right-sec-mobile\">\r\n          {!isAuthenticated() && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <Link to=\"/signup\">\r\n                  <button className=\"nav-btn\">Sign Up</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-li nav-border\">\r\n                <Link to=\"/login\">\r\n                  <button className=\"nav-btn\">Log In</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n          {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/cart/${user._id}`}>\r\n                      <button className=\"nav-btn\">Cart</button>\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/customerboard/orders/${user._id}`}>\r\n                      {\" \"}\r\n                      My Orders\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/customerboard/accounts/${user._id}`}>\r\n                      {\" \"}\r\n                      My Account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/customerboard/settings/${user._id}`}>\r\n                      {\" \"}\r\n                      My Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <button\r\n                      className=\"nav-drop-btn\"\r\n                      onClick={() => {\r\n                        logout(() => navigate(\"/login\"));\r\n                        toggle();\r\n                      }}\r\n                    >\r\n                      Log Out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/employeeboard/dashboard/${user._id}`}>\r\n                      {\" \"}\r\n                      Dashboard\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    {\" \"}\r\n                    <Link to={`/employeeboard/deliveries/${user._id}`}>\r\n                      {\" \"}\r\n                      Deliveries\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/employeeboard/accounts/${user._id}`}>\r\n                      {\" \"}\r\n                      Account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/employeeboard/settings/${user._id}`}>\r\n                      {\" \"}\r\n                      Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    {employeeStatus === \"Available\" && (\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() =>\r\n                          handleEmployeeStatus(\r\n                            isAuthenticated().user._id,\r\n                            isAuthenticated().token,\r\n                            \"NotAvailable\"\r\n                          )\r\n                        }\r\n                      >\r\n                        Make Not Available\r\n                      </button>\r\n                    )}\r\n                    {employeeStatus === \"NotAvailable\" && (\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() =>\r\n                          handleEmployeeStatus(\r\n                            isAuthenticated().user._id,\r\n                            isAuthenticated().token,\r\n                            \"Available\"\r\n                          )\r\n                        }\r\n                      >\r\n                        Make Available\r\n                      </button>\r\n                    )}\r\n                    {employeeStatus === \"OnDuty\" && (\r\n                      <button className=\"nav-drop-btn button-unclickable\">\r\n                        On Duty\r\n                      </button>\r\n                    )}\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <button\r\n                      className=\"nav-drop-btn\"\r\n                      onClick={() => {\r\n                        logout(() => navigate(\"/login\"));\r\n                      }}\r\n                    >\r\n                      Log Out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 2 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/admindashpanel/dashboard/${user._id}`}>\r\n                      Admin Panel\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/adminboard/accounts/${user._id}`}>\r\n                      {\" \"}\r\n                      Account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/adminboard/settings/${user._id}`}>\r\n                      {\" \"}\r\n                      Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <button\r\n                      className=\"nav-drop-btn\"\r\n                      onClick={() => {\r\n                        toggle();\r\n                        logout(() => navigate(\"/login\"));\r\n                      }}\r\n                    >\r\n                      Log Out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* nav-mobile section ends */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js",["400","401","402","403"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// importing Authentication function\r\nimport { isAuthenticated } from \"../setup/auth\";\r\n\r\n// importing API\r\nimport { API } from \"../setup/backend-manager/backend\";\r\n\r\n// importing API helper functions\r\nimport { getAllProducts, productSearch } from \"./helper/productDetailHelper\";\r\n\r\n// importing Images and Icons\r\nimport DeliveryBoy from \"../assets/images/deliverboy-green.png\";\r\nimport DeliveryIcon from \"../assets/svg/Shopping/Delivery.svg\";\r\n\r\n// importing loading component\r\nimport Loading from \"./Loading\";\r\n\r\nconst Shop = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchCategory, setSearchCategory] = useState([]);\r\n  const [searchSort, setSearchSort] = useState(\"default\");\r\n  const [searchView, setSearchView] = useState(\"short\");\r\n\r\n  const loadAllProducts = async () => {\r\n    try {\r\n      const data = await getAllProducts(\"all\");\r\n      return setIsLoading(false), setProducts(data);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCategory = (e) => {\r\n    var updatedList = [...searchCategory];\r\n    if (e.target.checked) {\r\n      updatedList = [...searchCategory, e.target.value];\r\n    } else {\r\n      updatedList.splice(searchCategory.indexOf(e.target.value), 1);\r\n    }\r\n    setSearchCategory(updatedList);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    const page = 1;\r\n    const limit = 10;\r\n    const category = searchCategory ? searchCategory.join(\",\") : \"\";\r\n    const search = searchValue;\r\n    const sort = searchSort;\r\n\r\n    try {\r\n      const data = await productSearch(page, limit, category, search, sort);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setIsLoading(false), setProducts(data.products);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProducts();\r\n  }, []);\r\n\r\n  return isLoading ? (\r\n    <Loading />\r\n  ) : (\r\n    <section className=\"shop-section\">\r\n      <div className=\"hero-sec\">\r\n        <div className=\"wrap hero-wrap\">\r\n          <div className=\"hero-left\">\r\n            <div className=\"hero-left-sec\">\r\n              <div className=\"hero-title-sec\">\r\n                {/* <img src={CartIcon} alt=\"\" className=\"hero-title-img\" /> */}\r\n                <h4 className=\"hero-title\">Grocery delivey Services</h4>\r\n              </div>\r\n              <h1 className=\"hero-header\">\r\n                Make healthy life <br /> with{\" \"}\r\n                <span>\r\n                  fresh{\" \"}\r\n                  <svg\r\n                    className=\"hero-header-svg\"\r\n                    viewBox=\"0 0 128 20\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M0.79323 18.2793C57.9285 3.68963 97.7746 -6.22468 126.423 11.2769\"\r\n                      stroke=\"white\"\r\n                      strokeWidth=\"3\"\r\n                    />\r\n                  </svg>\r\n                </span>{\" \"}\r\n                grocery\r\n              </h1>\r\n              <h3 className=\"hero-subheader\">\r\n                Get the best quality and most delicious grocery food <br /> in\r\n                the world, you can get them all use our website.\r\n              </h3>\r\n              <a href=\"#shop-sec\">\r\n                <button className=\"hero-search-btn\">Start My Shopping</button>\r\n              </a>\r\n              {(!isAuthenticated() || isAuthenticated().user.role === 2) && (\r\n                <p className=\"hero-signin-p\">\r\n                  Not yet Member ?{\" \"}\r\n                  <Link to=\"/signup\">\r\n                    <span>Sign Up</span>\r\n                  </Link>{\" \"}\r\n                  Now\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"hero-right\">\r\n            <div className=\"hero-img-sec\">\r\n              <img src={DeliveryBoy} alt=\"\" className=\"hero-img\" />\r\n              <div className=\"hero-img-bg\">\r\n                <div className=\"hero-img-bg-delivery-icon-sec\">\r\n                  <img\r\n                    src={DeliveryIcon}\r\n                    alt=\"\"\r\n                    className=\"hero-img-bg-delivery-icon\"\r\n                  />\r\n                </div>\r\n                <div className=\"hero-img-bg-arrow-icon-sec\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"shop-sec\" id=\"shop-sec\">\r\n        <div className=\"wrap shop-wrap\">\r\n          <div className=\"search-filter-sec\">\r\n            <div className=\"search-filter-category-sec\">\r\n              <h3 className=\"search-filter-category-header\">Category</h3>\r\n              <div className=\"search-filter-category-item\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"searchCategory\"\r\n                  value=\"fruit\"\r\n                  id=\"fruit\"\r\n                  onChange={handleCategory}\r\n                  className=\"search-filter-category-item-checkbox\"\r\n                />\r\n                <label\r\n                  htmlFor=\"fruit\"\r\n                  className=\"search-filter-category-item-label\"\r\n                >\r\n                  Fruits\r\n                </label>\r\n              </div>\r\n              <div className=\"search-filter-category-item\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"searchCategory\"\r\n                  value=\"vegetable\"\r\n                  id=\"vegetable\"\r\n                  onChange={handleCategory}\r\n                  className=\"search-filter-category-item-checkbox\"\r\n                />\r\n                <label\r\n                  htmlFor=\"vegetable\"\r\n                  className=\"search-filter-category-item-label\"\r\n                >\r\n                  Vegetables\r\n                </label>\r\n              </div>\r\n              <div className=\"search-filter-category-item\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"searchCategory\"\r\n                  value=\"meat\"\r\n                  id=\"meat\"\r\n                  onChange={handleCategory}\r\n                  className=\"search-filter-category-item-checkbox\"\r\n                />\r\n                <label\r\n                  htmlFor=\"meat\"\r\n                  className=\"search-filter-category-item-label\"\r\n                >\r\n                  Meat\r\n                </label>\r\n              </div>\r\n              {/* <select name=\"\" id=\"\" className=\"search-filter-category\">\r\n                <option value=\"\" className=\"search-filter-category-item\">\r\n                  Fruits\r\n                </option>\r\n                <option value=\"\" className=\"search-filter-category-item\">\r\n                  Vegetables\r\n                </option>\r\n                <option value=\"\" className=\"search-filter-category-item\">\r\n                  Poultry\r\n                </option>\r\n              </select> */}\r\n            </div>\r\n            <div className=\"search-filter-sort-sec\">\r\n              <h3 className=\"search-filter-sort-header\">Sort by</h3>\r\n              <select\r\n                name=\"searchSort\"\r\n                className=\"search-filter-sort-select\"\r\n                value={searchSort}\r\n                onChange={(e) => setSearchSort(e.target.value)}\r\n              >\r\n                <option value=\"default\" className=\"search-filter-sort-item\">\r\n                  Default\r\n                </option>\r\n                <option value=\"pName\" className=\"search-filter-sort-item\">\r\n                  Name: A -Z\r\n                </option>\r\n                <option value=\"pName,desc\" className=\"search-filter-sort-item\">\r\n                  Name: Z -A\r\n                </option>\r\n                <option value=\"pPrice\" className=\"search-filter-sort-item\">\r\n                  Price: low - high\r\n                </option>\r\n                <option value=\"pPrice,desc\" className=\"search-filter-sort-item\">\r\n                  Price: high to low\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"products-search-sec\">\r\n            <div className=\"search-input-sec\">\r\n              <form className=\"search-input-contain\" onSubmit={onSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"search-input\"\r\n                  placeholder=\"Search products\"\r\n                  value={searchValue}\r\n                  onChange={(e) => setSearchValue(e.target.value)}\r\n                />\r\n                <div className=\"search-icon-sec\" onClick={onSubmit}>\r\n                  <svg\r\n                    className=\"search-icon\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M21.7094 20.29L17.9994 16.61C19.4395 14.8144 20.1369 12.5353 19.9482 10.2413C19.7595 7.9473 18.6991 5.81278 16.9849 4.27664C15.2708 2.7405 13.0332 1.91951 10.7323 1.98247C8.43145 2.04543 6.24214 2.98756 4.61456 4.61514C2.98698 6.24272 2.04485 8.43203 1.98189 10.7329C1.91893 13.0338 2.73992 15.2714 4.27606 16.9855C5.8122 18.6997 7.94672 19.7601 10.2407 19.9488C12.5347 20.1375 14.8138 19.4401 16.6094 18L20.2894 21.68C20.3824 21.7737 20.493 21.8481 20.6148 21.8989C20.7367 21.9497 20.8674 21.9758 20.9994 21.9758C21.1314 21.9758 21.2621 21.9497 21.384 21.8989C21.5059 21.8481 21.6165 21.7737 21.7094 21.68C21.8897 21.4935 21.9904 21.2443 21.9904 20.985C21.9904 20.7257 21.8897 20.4765 21.7094 20.29V20.29ZM10.9994 18C9.61495 18 8.26157 17.5895 7.11042 16.8203C5.95928 16.0511 5.06207 14.9579 4.53226 13.6788C4.00245 12.3997 3.86382 10.9922 4.13392 9.63436C4.40402 8.2765 5.0707 7.02922 6.04967 6.05025C7.02864 5.07128 8.27592 4.4046 9.63378 4.1345C10.9917 3.8644 12.3991 4.00303 13.6782 4.53284C14.9573 5.06265 16.0505 5.95986 16.8197 7.111C17.5889 8.26215 17.9994 9.61553 17.9994 11C17.9994 12.8565 17.2619 14.637 15.9492 15.9497C14.6364 17.2625 12.8559 18 10.9994 18V18Z\"\r\n                      fill=\"black\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </form>\r\n              <div className=\"search-view-sec\">\r\n                <div className=\"search-view-icon-sec search-view-short active\">\r\n                  <svg\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <rect\r\n                      x=\"0.5\"\r\n                      y=\"0.5\"\r\n                      width=\"8\"\r\n                      height=\"8\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                    <rect\r\n                      x=\"0.5\"\r\n                      y=\"11.5\"\r\n                      width=\"8\"\r\n                      height=\"8\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                    <rect\r\n                      x=\"11.5\"\r\n                      y=\"0.5\"\r\n                      width=\"8\"\r\n                      height=\"8\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                    <rect\r\n                      x=\"11.5\"\r\n                      y=\"11.5\"\r\n                      width=\"8\"\r\n                      height=\"8\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"search-view-icon-sec search-view-long\">\r\n                  <svg\r\n                    width=\"21\"\r\n                    height=\"20\"\r\n                    viewBox=\"0 0 21 20\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <rect\r\n                      x=\"0.5\"\r\n                      y=\"0.5\"\r\n                      width=\"6\"\r\n                      height=\"5\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                    <rect\r\n                      x=\"0.5\"\r\n                      y=\"7.5\"\r\n                      width=\"6\"\r\n                      height=\"5\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                    <rect\r\n                      x=\"0.5\"\r\n                      y=\"14.5\"\r\n                      width=\"6\"\r\n                      height=\"5\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                    <rect\r\n                      x=\"9.5\"\r\n                      y=\"0.5\"\r\n                      width=\"11\"\r\n                      height=\"5\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                    <rect\r\n                      x=\"9.5\"\r\n                      y=\"7.5\"\r\n                      width=\"11\"\r\n                      height=\"5\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                    <rect\r\n                      x=\"9.5\"\r\n                      y=\"14.5\"\r\n                      width=\"11\"\r\n                      height=\"5\"\r\n                      rx=\"1.5\"\r\n                      stroke=\"#386745\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"products-sec\">\r\n              {products &&\r\n                products.map((product, index) => {\r\n                  return (\r\n                    <Link to={`/product/${product._id}`} key={index}>\r\n                      <div className=\"product-sec\">\r\n                        {product.pStock === 0 && (\r\n                          <div className=\"outOfStock\">\r\n                            <div className=\"outOfStock-div\">\r\n                              <p className=\"outOfStock-p\">Out Of Stock</p>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        <div\r\n                          className={`product-category-sec ${\r\n                            product.pCategory === \"vegetable\"\r\n                              ? \"color-green\"\r\n                              : \"color-orange\"\r\n                          }`}\r\n                        >\r\n                          <p className=\"product-category\">\r\n                            {product.pCategory === \"vegetable\"\r\n                              ? \"Veg\"\r\n                              : \"Fruit\"}\r\n                          </p>\r\n                        </div>\r\n                        {product && (\r\n                          <img\r\n                            className=\"product-img\"\r\n                            src={`${API}/product/photo/${product.pImg.key}`}\r\n                            alt=\"\"\r\n                            loading=\"lazy\"\r\n                          />\r\n                        )}\r\n\r\n                        <div className=\"product-info\">\r\n                          <h2 className=\"product-name\">{product.pName}</h2>\r\n                          <h3 className=\"product-stock\">\r\n                            {product.pStock} Kg in stock\r\n                          </h3>\r\n                          <h1 className=\"product-price\">{product.pPrice}/Kg</h1>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js",["404","405"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js",["406"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { API } from \"../setup/backend-manager/backend\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getProduct, getAllProducts } from \"./helper/productDetailHelper\";\r\nimport { isAuthenticated } from \"../setup/auth/index\";\r\nimport { addToUserCart } from \"../user\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchCart } from \"../setup/redux-manager/actions/cartActions\";\r\n\r\nconst ProductDetail = () => {\r\n  const [product, setProduct] = useState();\r\n  const [products, setProducts] = useState([]);\r\n  const [quantity, setQuantity] = useState(\"1\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { productId } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const { preLoadCart } = useContext(CartContext);\r\n\r\n  const loadProduct = async (productId) => {\r\n    try {\r\n      const data = await getProduct(productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProduct(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadProducts = async () => {\r\n    try {\r\n      const data = await getAllProducts(product.pCategory);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProducts(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = async (productId, quantity) => {\r\n    try {\r\n      if (isAuthenticated() && user.role === 0) {\r\n        var data = await addToUserCart(user._id, token, {\r\n          productId,\r\n          quantity,\r\n        });\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          // preLoadCart(user._id, token);\r\n          dispatch(fetchCart());\r\n          return navigate(`/cart/${user._id}`);\r\n        }\r\n      } else if (isAuthenticated()) {\r\n        return \"\";\r\n      } else {\r\n        navigate(\"/login\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProduct(productId);\r\n  }, [productId]);\r\n\r\n  useEffect(() => {\r\n    loadProducts(productId);\r\n  }, [product]);\r\n\r\n  return (\r\n    <section className=\"productDetail productDetail-section\">\r\n      {product && (\r\n        <div className=\"wrap productDetail-wrap\">\r\n          <div className=\"productDetail-img-sec\">\r\n            <div className=\"productDetail-img-container\">\r\n              <div\r\n                className={`productDetail-category-sec ${\r\n                  product.pCategory === \"vegetable\"\r\n                    ? \"color-green\"\r\n                    : \"color-orange\"\r\n                }`}\r\n              >\r\n                <p className=\"productDetail-category\">\r\n                  {product.pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                </p>\r\n              </div>\r\n              <img\r\n                className=\"productDetail-img\"\r\n                src={`${API}/product/photo/${product.pImg.key}`}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"productDetail-info\">\r\n            <h1 className=\"productDetail-name\">{product.pName}</h1>\r\n            <h2 className=\"productDetail-price\">\r\n              ₹<span>{product.pPrice + \"/Kg\"}</span>\r\n            </h2>\r\n            <p className=\"productDetail-description\">{product.pDescription}</p>\r\n            <h3 className=\"productDetail-stock\">{product.pStock}kg in stock</h3>\r\n            <div className=\"productDetail-quantity-sec\">\r\n              <p className=\"productDetail-quantity-p\">QTY:</p>{\" \"}\r\n              <input\r\n                type=\"text\"\r\n                className=\"productDetail-quantity\"\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                value={quantity}\r\n              />\r\n              <p className=\"productDetail-quantity-p\">Kg</p>\r\n            </div>\r\n            <button\r\n              className={`productDetail-btn ${\r\n                product.pStock === 0 ? \"button-unclickable\" : \"\"\r\n              }`}\r\n              onClick={() => handleAddToCart(product._id, quantity)}\r\n            >\r\n              Add to Cart\r\n            </button>\r\n            {product.pStock === 0 && (\r\n              <p className=\"productDetail-OOS\">Currently Out of Stock</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {products && (\r\n        <div className=\"wrap products-wrap\">\r\n          {products.map((product, index) => {\r\n            return (\r\n              <Link to={`/product/${product._id}`} key={index}>\r\n                <div className=\"product-sec\">\r\n                  <div\r\n                    className={`product-category-sec ${\r\n                      product.pCategory === \"vegetable\"\r\n                        ? \"color-green\"\r\n                        : \"color-orange\"\r\n                    }`}\r\n                  >\r\n                    <p className=\"product-category\">\r\n                      {product.pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                    </p>\r\n                  </div>\r\n                  <img\r\n                    className=\"product-img\"\r\n                    src={`${API}/product/photo/${product.pImg.key}`}\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"product-info\">\r\n                    <h2 className=\"product-name\">{product.pName}</h2>\r\n                    <h3 className=\"product-stock\">\r\n                      {product.pStock} Kg in stock\r\n                    </h3>\r\n                    <h1 className=\"product-price\">{product.pPrice}/Kg</h1>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js",["407","408","409","410"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { login, authenticate } from \"../setup/auth\";\r\n\r\nconst Login = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { email, password, error, loading, success } = values;\r\n\r\n  const naviagte = useNavigate();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(email && password)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      console.log(\"Please enter a valid email address\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid email\",\r\n      });\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      const data = await login({ email, password });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n      authenticate(data);\r\n\r\n      return naviagte(\"/\");\r\n    } catch (error) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <section className=\"login-section\">\r\n      <div className=\"wrap login-wrap\">\r\n        <div className=\"popup-small-sec login-popup\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec login-head-sec\">\r\n              <h1 className=\"popup-header\">Log In</h1>\r\n              <p className=\"popup-header-p\">\r\n                Don't have an account ?{\" \"}\r\n                <Link to=\"/signup\" className=\"popup-header-link\">\r\n                  Signup\r\n                </Link>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    onChange={handleChange(\"email\")}\r\n                    value={email}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"popup-form-input\"\r\n                    onChange={handleChange(\"password\")}\r\n                    value={password}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"popup-form-btn login-popup-btn\"\r\n                onClick={onSubmit}\r\n              >\r\n                Log In\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js",["411"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../assets/svg/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Orders from \"./Orders\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst CustomerBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n            <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <div className=\"userBoard-user-detail-sec\">\r\n                <h3 className=\"userBoard-user-detail-name\">\r\n                  {name.length > 6 ? name.substring(0, 6) : name}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/orders/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"orders\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  ORDERS\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  ACCOUNT\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  SETTINGS\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"accounts\" && <Accounts userValues={values} />}\r\n          {tabActive === \"orders\" && <Orders userValues={values} />}\r\n          {tabActive === \"settings\" && <Settings userValues={values} />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CustomerBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js",["412","413"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { AccountsContext } from \"../setup/context-manager/Context\";\r\nimport EditIcon from \"../assets/svg/Edit.svg\";\r\nimport EditPersonalInformation from \"./EditPersonalInformation\";\r\nimport EditAddress from \"./EditAddress\";\r\nimport { getUser } from \"../user\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Accounts = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [accountsActive, setAccountsActive] = useState(null);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name, email, phoneNumber, houseName, streetName } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, [accountsActive]);\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <AccountsContext.Provider value={{ accountsActive, setAccountsActive }}>\r\n        <h1 className=\"userBoard-right-header\">Account</h1>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <h2 className=\"userBoard-subHeader\">Personal Information</h2>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editpersonalinformation\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-single-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Email</label>\r\n                  <p className=\"userBoard-right-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Name</label>\r\n                  <p className=\"userBoard-right-value\">{name}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Phone</label>\r\n                  <p className=\"userBoard-right-value\">{phoneNumber}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <div className=\"userBoard-subHeader\">Address</div>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editaddress\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">House Name</label>\r\n                  <p className=\"userBoard-right-value\">{houseName}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Street</label>\r\n                  <p className=\"userBoard-right-value\">{streetName}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {accountsActive === \"editpersonalinformation\" && (\r\n          <EditPersonalInformation />\r\n        )}\r\n        {accountsActive === \"editaddress\" && <EditAddress />}\r\n      </AccountsContext.Provider>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js",["414","415","416"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { getUserOrders } from \"../user\";\r\nimport ViewIcon from \"../assets/svg/view.svg\";\r\nimport moment from \"moment\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\n\r\nconst Orders = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(null);\r\n  const [order, setOrder] = useState();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const getUserOrderDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUserOrders(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserOrderDetails(userId, token);\r\n  }, []);\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Orders</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <table className=\"userBoard-right-customer-order-table\">\r\n          <thead className=\"userBoard-right-customer-order-table-head-sec\">\r\n            <tr>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Status\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Total\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"userBoard-right-customer-order-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"userBoard-right-customer-order-table-body-tr\"\r\n                  >\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      <div\r\n                        className={`userBoard-right-customer-order-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OemployeeId ? order.OemployeeId : \"Not Assigned\"}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-head-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                      <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js",["417","418"],[],"import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../setup/auth\";\r\nimport { changePassword } from \"../user\";\r\n\r\nconst Settings = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { oldPassword, newPassword, confirmPassword, error, loading, success } =\r\n    values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(oldPassword && newPassword && confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      oldPassword.length < 6 ||\r\n      newPassword.length < 6 ||\r\n      confirmPassword < 6\r\n    ) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    if (!(newPassword === confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Password confirmation does not match\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await changePassword(userId, token, {\r\n        oldPassword,\r\n        newPassword,\r\n      });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      console.log(\"Success\");\r\n      setValues({ ...values, success: true, loading: \"\", error: \"\" });\r\n      logout(() => navigate(\"/\"));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, success: false })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Settings</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <div className=\"userBoard-righ-subsec-small\">\r\n          <div className=\"userBoard-right-subHead\">\r\n            <h2 className=\"userBoard-subHeader\">Change Password</h2>\r\n          </div>\r\n          <div className=\"userBoard-right-subInner\">\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">Old Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"oldPassword\")}\r\n                  value={oldPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"newPassword\")}\r\n                  value={newPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"confirmPassword\")}\r\n                  value={confirmPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className=\"userBoard-right-btn\" onClick={onSubmit}>\r\n              Change\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {error && errorMessage()}\r\n      {success && successMessage()}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js",["419","420","421","422"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { AccountsContext } from \"../setup/context-manager/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../assets/svg/cross-black.svg\";\r\n\r\nconst EditPersonalInformation = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n  };\r\n\r\n  const { email, name, phoneNumber, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        name: userDetails.name,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      };\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(name && phoneNumber)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      name === preLoadValues.name &&\r\n      phoneNumber === preLoadValues.phoneNumber\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    if (phoneNumber.length !== 10) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid phone Number\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({ name, phoneNumber }, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      return setAccountsActive(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Personal Information</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={name}\r\n                    onChange={handleChange(\"name\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={phoneNumber}\r\n                    onChange={handleChange(\"phoneNumber\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditPersonalInformation;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js",["423","424","425","426"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { AccountsContext } from \"../setup/context-manager/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../assets/svg/cross-black.svg\";\r\n\r\nconst EditAddress = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  };\r\n\r\n  const { email, houseName, streetName, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName\r\n      }\r\n\r\n      return setValues({\r\n        ...values,\r\n        houseName: userDetails.address.houseName,\r\n        email: userDetails.email,\r\n        streetName: userDetails.address.streetName\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(houseName && streetName)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      houseName === preLoadValues.houseName &&\r\n      streetName === preLoadValues.streetName\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    const address = {\r\n      houseName: houseName,\r\n      streetName: streetName\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({address}, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n\r\n      return setAccountsActive(null);\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Address</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n              <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">House Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={houseName}\r\n                    onChange={handleChange(\"houseName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Street Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={streetName}\r\n                    onChange={handleChange(\"streetName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditAddress;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js",["427","428","429","430","431","432"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport {\r\n  deleteFromCart,\r\n  getUser,\r\n  updateFromUserCart,\r\n} from \"../user\";\r\nimport CartItem from \"./CartItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchCart } from \"../setup/redux-manager/actions/cartActions\";\r\n\r\nconst Cart = () => {\r\n  const cart = useSelector((state) => state.allCart.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const [subTotal_items, setSubTotal_items] = useState(0);\r\n  const [subTotal_value, setSubTotal_value] = useState(0);\r\n  const [shippingAddress_state, setShippingAddress_state] = useState(\"default\");\r\n  const [shippingAddress, setShippingAddress] = useState({\r\n    shippingAddress_houseName: \" \",\r\n    shippingAddress_streetName: \" \",\r\n  });\r\n  const [productDetails, setProductDetails] = useState();\r\n\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { shippingAddress_houseName, shippingAddress_streetName } =\r\n    shippingAddress;\r\n\r\n  const preLoadShippingAddress = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        return setShippingAddress({\r\n          ...shippingAddress,\r\n          shippingAddress_houseName: data.address.houseName,\r\n          shippingAddress_streetName: data.address.streetName,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCart());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    preLoadShippingAddress(userId, token);\r\n  }, []);\r\n\r\n  const loadSubTotal_value = async () => {\r\n    var total = 0;\r\n    cart.map((cartItem) => {\r\n      return (total = total + cartItem.product.pPrice * cartItem.quantity);\r\n    });\r\n\r\n    return setSubTotal_value(total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubTotal_value();\r\n  }, [cart]);\r\n\r\n  useEffect(() => {\r\n    setSubTotal_items(cart.length);\r\n  }, [cart]);\r\n\r\n  // const preLoadCart = async (userId, token) => {\r\n  //   try {\r\n  //     const data = await getUserCart(userId, token);\r\n  //     // return setCart(data.cart);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"reaching here awsome vini\")\r\n  //   preLoadCart(userId, token);\r\n  // }, []);\r\n\r\n  const updateQuantity = async (productId, quantity) => {\r\n    try {\r\n      const data = await updateFromUserCart(userId, token, {\r\n        productId,\r\n        quantity,\r\n      });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        dispatch(fetchCart());\r\n        // return preLoadCart(userId, token);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (productId) => {\r\n    try {\r\n      const data = await deleteFromCart(userId, token, productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        dispatch(fetchCart());\r\n        // return preLoadCart(userId, token);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // const loadCartItems = (cart) => {\r\n  //   console.log(\"cartItem\", cart)\r\n  //   cart.map((cartItem, index) => {\r\n  //     return (\r\n  //       <CartItem\r\n  //         cartItemProductId={cartItem.product._id}\r\n  //         cartItemQuantity={cartItem.quantity}\r\n  //         key={index}\r\n  //         updateQuantity={updateQuantity}\r\n  //         deleteProduct={deleteProduct}\r\n  //       />\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setShippingAddress({ ...shippingAddress, [name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <section className=\"cart-section\">\r\n      <div className=\"wrap cart-wrap\">\r\n        <div className=\"cart-header-sec\">\r\n          <h1 className=\"cart-header\">My Cart </h1>\r\n        </div>\r\n        <div className=\"cart-subsection\">\r\n          <div className=\"cartDetail-sec\">\r\n            {/* <div className=\"cartDetail-sec-hr\"></div> */}\r\n            {cart &&\r\n              cart.map((cartItem, index) => {\r\n                return (\r\n                  <CartItem\r\n                    cartItemProductId={cartItem.product._id}\r\n                    cartItemQuantity={cartItem.quantity}\r\n                    key={index}\r\n                    updateQuantity={updateQuantity}\r\n                    deleteProduct={deleteProduct}\r\n                  />\r\n                );\r\n              })}\r\n            <div className=\"cart-subTotal-sec\">\r\n              <h2 className=\"cart-subTotal-h2\">\r\n                {`Subtotal (${subTotal_items} items)`} :{\" \"}\r\n                <span className=\"cart-subTotal-price\">{`${subTotal_value}`}</span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"cart-placeOrder-sec\">\r\n            <div className=\"cart-subTotal-sec cart-placeOrder-subTotal-sec\">\r\n              <h2 className=\"cart-subTotal-h2\">\r\n                {`Subtotal (${subTotal_items} items)`} :{\" \"}\r\n                <span className=\"cart-subTotal-price\">{`${subTotal_value}`}</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"cart-shippingAddress-sec\">\r\n              <h3 className=\"cart-shippingAddress-header\">Shipping Address</h3>\r\n              {shippingAddress_state === \"default\" && (\r\n                <div className=\"cart-shippingAddress-default-sec\">\r\n                  <div className=\"cart-shippingAddress-default-address-sec\">\r\n                    <p className=\"cart-shippingAddress-default-address cart-shippingAddress-default-HouseName\">\r\n                      {shippingAddress_houseName}\r\n                    </p>\r\n                    <p className=\"cart-shippingAddress-default-address cart-shippingAddress-default-StreetName\">\r\n                      {shippingAddress_streetName}\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    className=\"cart-shippingAddress-edit-btn\"\r\n                    onClick={() => setShippingAddress_state(\"edit\")}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <Link to={`/cart/payment/${userId}`} state={shippingAddress}>\r\n                    <button className=\"cart-shippingAddress-cta-btn\">\r\n                      Deliver to this Address\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n              {shippingAddress_state === \"edit\" && (\r\n                <div className=\"cart-shippingAddress-edit-sec\">\r\n                  <form className=\"cart-shippingAddress-edit-address-form\">\r\n                    <p\r\n                      className=\"cart-shippingAddress-edit-address-default_state\"\r\n                      onClick={() => setShippingAddress_state(\"default\")}\r\n                    >\r\n                      Go back to default address\r\n                    </p>\r\n                    <div className=\"cart-shippingAddress-edit-address-sec\">\r\n                      <p className=\"cart-shippingAddress-edit-address-label\">\r\n                        House Name\r\n                      </p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"cart-shippingAddress-edit-address-input\"\r\n                        value={shippingAddress_houseName || \" \"}\r\n                        onChange={handleChange(\"shippingAddress_houseName\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"cart-shippingAddress-edit-address-sec\">\r\n                      <p className=\"cart-shippingAddress-edit-address-label\">\r\n                        Street Name\r\n                      </p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"cart-shippingAddress-edit-address-input\"\r\n                        value={shippingAddress_streetName || \" \"}\r\n                        onChange={handleChange(\"shippingAddress_streetName\")}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                  <Link\r\n                    to={`/cart/payment/${userId}`}\r\n                    state={{ shippingAddress }}\r\n                  >\r\n                    <button className=\"cart-shippingAddress-cta-btn\">\r\n                      Deliver to this Address\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js",["433","434"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { API } from \"../setup/backend-manager/backend\";\r\nimport Trash from \"../assets/svg/Trash.svg\";\r\nimport { getProduct } from \"./helper/productDetailHelper\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CartItem = ({\r\n  cartItemProductId,\r\n  cartItemQuantity,\r\n  updateQuantity,\r\n  deleteProduct,\r\n}) => {\r\n\r\n  const cart = useSelector((state) => state.allCart.cart);\r\n\r\n  const [product, setProduct] = useState({\r\n    _id: \"\",\r\n    pName: \"\",\r\n    pPrice: \"\",\r\n    pCategory: \"\",\r\n    pImg: \"\",\r\n  });\r\n  const [quantity, setQuantity] = useState(cartItemQuantity);\r\n\r\n  const { _id, pName, pPrice, pCategory, pImg } = product;\r\n\r\n  const getProductDetails = async (productId) => {\r\n    try {\r\n      const data = await getProduct(productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProduct({\r\n          ...product,\r\n          _id: data._id,\r\n          pName: data.pName,\r\n          pPrice: data.pPrice,\r\n          pCategory: data.pCategory,\r\n          pImg: data.pImg,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductDetails(cartItemProductId);\r\n  }, [cart]);\r\n\r\n  useEffect(() => {\r\n    updateQuantity(product._id, quantity);\r\n  }, [quantity]);\r\n    \r\n  return (\r\n    <div className=\"cartItem-item\">\r\n      {pImg !== \"\" && (\r\n        <>\r\n          <div className=\"cartItem-item-left\">\r\n            <div className=\"cartItem-item-img-sec\">\r\n              <img\r\n                src={`${API}/product/photo/${pImg.key}`}\r\n                alt=\"\"\r\n                className=\"cartItem-item-img\"\r\n              />\r\n            </div>\r\n            <div className=\"cartItem-item-info\">\r\n              <h2 className=\"cartItem-item-productName\">{pName}</h2>\r\n              <div\r\n                className={`cartItem-item-category-sec ${\r\n                  pCategory === \"vegetable\" ? \"color-green\" : \"color-orange\"\r\n                }`}\r\n              >\r\n                <p className=\"cartItem-item-category\">\r\n                  {pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"cartItem-item-action\">\r\n              <div className=\"cartItem-item-quantity-sec\">\r\n                <h4 className=\"cartItem-item-quantity-h3\">QTY:</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"cartItem-item-quantity-input\"\r\n                  onChange={(e) => setQuantity(e.target.value)}\r\n                  value={quantity}\r\n                />\r\n                <h4 className=\"cartItem-item-quantity-h3\">Kg</h4>\r\n              </div>\r\n              <img\r\n                src={Trash}\r\n                alt=\"\"\r\n                className=\"cartItem-item-delete-icon\"\r\n                onClick={() => deleteProduct(_id)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"cartItem-item-right\">\r\n            <h2 className=\"cartItem-item-price\">{`${pPrice}/Kg`}</h2>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js",["435"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport Dashboard from \"../employee/Dashboard\";\r\nimport Deliveries from \"../employee/Deliveries\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../assets/svg/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst EmployeeBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n          <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <div className=\"userBoard-user-detail-sec\">\r\n                <h3 className=\"userBoard-user-detail-name\">\r\n                  {name.length > 6 ? name.substring(0, 6) : name}\r\n                </h3>\r\n\r\n                <p className=\"userBoard-user-detail-role\">(Employee)</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/dashboard/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"dashboard\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  DASHBOARD\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/deliveries/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"deliveries\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  DELIVERIES\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  ACCOUNT\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  SETTINGS\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"dashboard\" && <Dashboard />}\r\n          {tabActive === \"deliveries\" && <Deliveries />}\r\n          {tabActive === \"accounts\" && <Accounts userValues={values} />}\r\n          {tabActive === \"settings\" && <Settings userValues={values} />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EmployeeBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js",["436"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../assets/svg/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst AdminBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n            <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <div className=\"userBoard-user-detail-sec\">\r\n                <h3 className=\"userBoard-user-detail-name\">\r\n                  {name.length > 6 ? name.substring(0, 6) : name}\r\n                </h3>\r\n\r\n                <p className=\"userBoard-user-detail-role\">(Admin)</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/adminboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  ACCOUNT\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/adminboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  SETTINGS\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"accounts\" && <Accounts />}\r\n          {/* {tabActive === \"orders\" && <Orders userValues={values} />} */}\r\n          {tabActive === \"settings\" && <Settings />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js",["437","438","439"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport {\r\n  getUserCart,\r\n  createOrder,\r\n  getUser,\r\n  razorPayOrder,\r\n  paymentVerify,\r\n  updateOrderConfirmation,\r\n} from \"../user\";\r\n\r\nexport const CartPayment = () => {\r\n  const { userId } = useParams();\r\n\r\n  const naviagte = useNavigate();\r\n  const location = useLocation();\r\n  const shippingAddress = location.state;\r\n  const [values, setValues] = useState({\r\n    paymentMode: \"RazorPay\",\r\n    total: 10,\r\n    userDetails: \"\",\r\n  });\r\n\r\n  var cart = [];\r\n  var order = \"\";\r\n\r\n  const { paymentMode, total, userDetails } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const isRadioSelected = (value) => {\r\n    if (paymentMode === value) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const preLoadCart = async (userId, token) => {\r\n    try {\r\n      const data = await getUserCart(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        cart = data.cart;\r\n        console.log(cart);\r\n        var tempTotal = 0;\r\n        cart.map(\r\n          (cartItem) =>\r\n            (tempTotal =\r\n              tempTotal + cartItem.product.pPrice * cartItem.quantity)\r\n        );\r\n        setValues({ ...values, total: tempTotal });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const preLoadUser = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        // return (userDetails = data);\r\n        console.log(\"Userdata\", data)\r\n        return setValues({ ...values, userDetails: data });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleOrder = async (userId, token) => {\r\n    try {\r\n      const data = await createOrder(userId, token, {\r\n        shippingAddress,\r\n        paymentMode,\r\n      });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        order = data.order;\r\n        if (paymentMode === \"RazorPay\") {\r\n          await handlePayment(total);\r\n        } else {\r\n          try {\r\n            const data = await updateOrderConfirmation(userId, token, order._id, {\r\n              Ostatus: \"Ordered\",\r\n            });\r\n            if (data.error) {\r\n              return console.log(data.error);\r\n            } else {\r\n              console.log(data);\r\n              naviagte(`/thankyou/${order._id}`);\r\n            }\r\n          } catch (error) {}\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePayment = async (total) => {\r\n    try {\r\n      const data = await razorPayOrder({ total });\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        console.log(data);\r\n        initPayment(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    const options = {\r\n      key: process.env.RAZORPAY_KEY_SECRET,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      name: \"Fruits and Veggies\",\r\n      order_id: data.id,\r\n      prefill: {\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        contact: userDetails.phoneNumber,\r\n      },\r\n      handler: async (response) => {\r\n        try {\r\n          const data = await paymentVerify({ response, order });\r\n          if (data.error) {\r\n            return console.log(data.error);\r\n          }\r\n          console.log(data);\r\n          naviagte(`/thankyou/${order._id}`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp1 = new window.Razorpay(options);\r\n    rzp1.open();\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadCart(userId, token);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    preLoadUser(userId, token);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"cardPayment-section\">\r\n      <div className=\"wrap cardPayment-wrap\">\r\n        <div className=\"cardPayment-info-sec\">\r\n          <div className=\"cardPayment-delivery-details-sec\">\r\n            <h2 className=\"cardpayment-delivery-details-header\">\r\n              Delivery Details\r\n            </h2>\r\n            <div className=\"cardPayment-delivery-details\">\r\n              <div className=\"cardPayment-delivery-details-single-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">{userDetails.name}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Email\r\n                  </label>\r\n                  {/* <p className=\"cardPa yment-delivery-details-value\">{userDetails.email}</p> */}\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Phone\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                  {/* {userDetails.phoneNumber} */}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"cardPayment-delivery-details-subheader\">\r\n                Shipping Address\r\n              </h3>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    House Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                  {/* {userDetails.address.houseName} */}\r\n                  </p>\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Street Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                  {/* {userDetails.address.streetName} */}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"cardPayment-payment-details-sec\">\r\n            <h2 className=\"cardPayment-payment-details-header\">Payment Mode</h2>\r\n            <div className=\"cardPayment-payment-details-form\">\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"RazorPay\"\r\n                  value=\"RazorPay\"\r\n                  checked={isRadioSelected(\"RazorPay\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"RazorPay\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Make Payment Online (RazorPay)\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"CashOnDelivery\"\r\n                  value=\"CashOnDelivery\"\r\n                  checked={isRadioSelected(\"CashOnDelivery\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"CashOnDelivery\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Cash On Delivery\r\n                </label>\r\n              </div>\r\n              <button\r\n                className=\"cardPayment-payment-details-btn\"\r\n                onClick={() => handleOrder(userId, token)}\r\n              >\r\n                Make Payment\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js",["440"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { getUser } from \"./index\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport Cross from \"../assets/svg/cross-black.svg\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.OtotalPrice}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">{order._id}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\"> {order.Ostatus}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OEmployeeId || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Ouser.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Ouser.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Ouser.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js",["441","442"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { getUser } from \"../user\";\r\nimport DashboardIcon from \"../assets/svg/dashboard.svg\";\r\nimport DashboardActiveIcon from \"../assets/svg/dashboardActive.svg\";\r\nimport CartIcon from \"../assets/svg/cart.svg\";\r\nimport CartActiveIcon from \"../assets/svg/cart-active.svg\";\r\nimport ProductIcon from \"../assets/svg/product.svg\";\r\nimport ProductActiveIcon from \"../assets/svg/productActive.svg\";\r\nimport EmployerIcon from \"../assets/svg/employer.svg\";\r\nimport EmployerActiveIcon from \"../assets/svg/employerActive.svg\";\r\nimport CustomerIcon from \"../assets/svg/customer.svg\";\r\nimport CustomerActiveIcon from \"../assets/svg/customerActive.svg\";\r\nimport Dashboard from \"../admin/Dashboard\";\r\nimport Order from \"../admin/Order\";\r\nimport Product from \"../admin/Product\";\r\nimport Employee from \"../admin/Employee\";\r\nimport Customer from \"../admin/Customer\";\r\n\r\nconst AdminDashPanel = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setName(data.name);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preload(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section\">\r\n      <div className=\"wrap adminDashPanel-wrap\">\r\n        <div className=\"adminDashPanel-left\">\r\n          <ul className=\"adminDashPanel-left-ul\">\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/dashboard/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"dashboard\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  {\" \"}\r\n                  <img\r\n                    src={\r\n                      tabActive === \"dashboard\" ? DashboardActiveIcon : DashboardIcon\r\n                    }\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  DASHBOARD\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/order/${user._id}`}\r\n                className=\"adminDashPanel-left-link \"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"order\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"order\" ? CartActiveIcon : CartIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  ORDER\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/product/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"product\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"product\" ? ProductActiveIcon : ProductIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  PRODUCT\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/employee/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"employee\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"employee\" ? EmployerActiveIcon : EmployerIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  EMPLOYEE\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/customer/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"customer\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"customer\" ? CustomerActiveIcon : CustomerIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  CUSTOMER\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"adminDashPanel-right\">\r\n          {tabActive === 'dashboard' && <Dashboard />}\r\n          {tabActive === 'order' && <Order />}\r\n          {tabActive === 'product' && <Product />}\r\n          {tabActive === 'employee' && <Employee />}\r\n          {tabActive === 'customer' && <Customer />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminDashPanel;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js",["443","444","445","446","447"],[],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { getAllOrders } from \"../user\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport ViewIcon from \"../assets/svg/view.svg\";\r\nimport EditIcon from \"../assets/svg/Edit.svg\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport EmployeeUpdate from \"./EmployeeUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Order = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] =\r\n    useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n  const [countValues, setCountValues] = useState({\r\n    all: 0,\r\n    NotConfirmed: 0,\r\n    Ordered: 0,\r\n    Processing: 0,\r\n    PickingUp: 0,\r\n    OutForDelivery: 0,\r\n    Delivered: 0,\r\n    Cancelled: 0,\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const {\r\n    all,\r\n    NotConfirmed,\r\n    Ordered,\r\n    Processing,\r\n    PickingUp,\r\n    OutForDelivery,\r\n    Delivered,\r\n    Cancelled,\r\n  } = countValues;\r\n\r\n  const loadOrders = async (userId, token, status) => {\r\n    try {\r\n      const data = await getAllOrders(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = async (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handleEmployeeAssign = async (order) => {\r\n    return (\r\n      setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order)\r\n    );\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  const filterBtn = (statusState, statusValue, statusBtnValue) => {\r\n    return (\r\n      <button\r\n        className={`orders-filter-btn ${\r\n          status === statusState ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setStatus(statusState)}\r\n      >\r\n        {statusBtnValue} <span className=\"filter-btn-value\">{statusValue}</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const loadCountValues = async (userId, token) => {\r\n    var orders = [];\r\n    try {\r\n      const data = await getAllOrders(userId, token, \"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        orders = data;\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n\r\n    setCountValues({\r\n      ...countValues,\r\n      all: orders.length,\r\n      NotConfirmed: orders.filter((order) => order.Ostatus === \"Not-Confirmed\")\r\n        .length,\r\n      Ordered: orders.filter((order) => order.Ostatus === \"Ordered\").length,\r\n      Processing: orders.filter((order) => order.Ostatus === \"Processing\")\r\n        .length,\r\n      PickingUp: orders.filter((order) => order.Ostatus === \"Picking-Up\")\r\n        .length,\r\n      OutForDelivery: orders.filter(\r\n        (order) => order.Ostatus === \"Out-For-Delivery\"\r\n      ).length,\r\n      Delivered: orders.filter((order) => order.Ostatus === \"Delivered\").length,\r\n      Cancelled: orders.filter((order) => order.Ostatus === \"Cancelled\").length,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadOrders(user._id, token, status);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  useEffect(() => {\r\n    loadCountValues(user._id, token);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-right-section order-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Orders</h1>\r\n      <div className=\"adminDashPanel-right-subsection orders-filter-subSection\">\r\n        {filterBtn(\"all\", all, \"All\")}\r\n        {filterBtn(\"Not-Confirmed\", NotConfirmed, \"Not-Confirmed\")}\r\n        {filterBtn(\"Ordered\", Ordered, \"Ordered\")}\r\n        {filterBtn(\"Processing\", Processing, \"Processing\")}\r\n        {filterBtn(\"Picking-Up\", PickingUp, \"Picking-Up\")}\r\n        {filterBtn(\"Out-For-Delivery\", OutForDelivery, \"Out-For-Delivery\")}\r\n        {filterBtn(\"Delivered\", Delivered, \"Delivered\")}\r\n        {filterBtn(\"Cancelled\", Cancelled, \"Cancelled\")}\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Total</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <div\r\n                        className={`adminDashPanel-right-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentStatus === \"Paid\" ? (\r\n                        order.OpaymentStatus\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handlePaymentStatus(order)}\r\n                        >\r\n                          Pending\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                    {order.Ostatus === \"Not-Confirmed\" ? (\r\n                        \" \"\r\n                      ) : order.OemployeeName ? (\r\n                        order.OemployeeName\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handleEmployeeAssign(order)}\r\n                        >\r\n                          Not Assigned\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && (\r\n        <EmployeeUpdate\r\n          setOrderEmployeeAssignActive={setOrderEmployeeAssignActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js",["448","449","450","451","452","453","454","455","456","457","458"],[],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport CartIcon from \"../assets/svg/cart.svg\";\r\nimport ProductIcon from \"../assets/svg/product.svg\";\r\nimport EmployerIcon from \"../assets/svg/employer.svg\";\r\nimport CustomerIcon from \"../assets/svg/customer.svg\";\r\nimport ViewIcon from \"../assets/svg/view.svg\";\r\nimport EditIcon from \"../assets/svg/Edit.svg\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport {\r\n  getAllOrders,\r\n  getCountCustomers,\r\n  getCountEmployers,\r\n  getCountOrders,\r\n  getCountProducts,\r\n  getEmployees,\r\n} from \"../user\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport EmployeeUpdate from \"./EmployeeUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\nimport BarChart from \"../Charts/BarChart\";\r\nimport { UserData } from \"../core/data\";\r\nimport LineChart from \"../Charts/LineChart\";\r\nimport PieChart from \"../Charts/PieChart\";\r\nimport { getAllProducts } from \"../core/helper/productDetailHelper\";\r\n\r\nconst Dashboard = () => {\r\n  const [statusValues, setStatusValues] = useState({\r\n    orderStatus: \"\",\r\n    productStatus: \"\",\r\n    employerStatus: \"\",\r\n    customerStatus: \"\",\r\n  });\r\n  const [commentValues, setCommentValues] = useState({\r\n    orderCommentValue: 0,\r\n    productCommentValue: 0,\r\n    employeeCommentValue: 0,\r\n    customerCommentValue: 0,\r\n  });\r\n  const [pendingOrders, setPendingOrders] = useState();\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] =\r\n    useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const [userData, setUserData] = useState({\r\n    labels: UserData.map((data) => data.year),\r\n    datasets: [\r\n      {\r\n        label: \"User Gain\",\r\n        data: UserData.map((data) => data.userGain),\r\n        backgroundColor: [\"#9db8d1\"],\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { orderStatus, productStatus, employerStatus, customerStatus } =\r\n    statusValues;\r\n\r\n  const {\r\n    orderCommentValue,\r\n    productCommentValue,\r\n    employeeCommentValue,\r\n    customerCommentValue,\r\n  } = commentValues;\r\n\r\n  const loadStatusValues = async (userId, token) => {\r\n    try {\r\n      const orderStatus = await getCountOrders(userId, token);\r\n      const productStatus = await getCountProducts(userId, token);\r\n      const employerStatus = await getCountEmployers(userId, token);\r\n      const customerStatus = await getCountCustomers(userId, token);\r\n\r\n      if (\r\n        orderStatus.error ||\r\n        productStatus.error ||\r\n        employerStatus.error ||\r\n        customerStatus.error\r\n      ) {\r\n        return console.log(\"status update error occured\");\r\n      } else {\r\n        return setStatusValues({\r\n          ...statusValues,\r\n          orderStatus: orderStatus,\r\n          productStatus: productStatus,\r\n          employerStatus: employerStatus,\r\n          customerStatus: customerStatus,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadCommentValues = async (userId, token) => {\r\n    try {\r\n      const orderCommentArray = await getAllOrders(userId, token, \"all\");\r\n      const productCommentArray = await getAllProducts(\"all\");\r\n      const emploeeCommentArray = await getEmployees(userId, token, \"all\");\r\n      const customerCommentArray = await getAllOrders(userId, token, \"all\");\r\n\r\n      if (\r\n        orderCommentArray.error ||\r\n        productCommentArray.error ||\r\n        emploeeCommentArray.error ||\r\n        customerCommentArray.error\r\n      ) {\r\n        return console.log(\"comment values update error occured\");\r\n      } else {\r\n        return setCommentValues({\r\n          ...commentValues,\r\n          orderCommentValue: orderCommentArray.filter(\r\n            (orderComment) =>\r\n              orderComment.Ostatus === \"Not-Confirmed\" ||\r\n              orderComment.Ostatus === \"Ordered\" ||\r\n              orderComment.Ostatus === \"Processing\" ||\r\n              orderComment.Ostatus === \"Picking-Up\" ||\r\n              orderComment.Ostatus === \"Out-For-Delivery\"\r\n          ).length,\r\n          productCommentValue: productCommentArray.filter(\r\n            (productComment) => productComment.pStock === 0\r\n          ).length,\r\n          employeeCommentValue: emploeeCommentArray.filter(\r\n            (employeeComment) => employeeComment.Estatus === \"Available\"\r\n          ).length,\r\n          customerCommentValue: customerCommentArray.filter(\r\n            (customerComment) =>\r\n              customerComment.Ostatus === \"Not-Confirmed\" ||\r\n              customerComment.Ostatus === \"Ordered\"\r\n          ).length,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadPendingOrders = async (userId, token) => {\r\n    try {\r\n      const data = await getAllOrders(userId, token, \"pending\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setPendingOrders(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  // const loadFromZero = async (value, setState) => {\r\n  //   for (var i = 0; i <= value; i++) {\r\n  //     return i;\r\n  //   }\r\n  // };\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = async (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handleEmployeeAssign = async (order) => {\r\n    return (\r\n      setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order)\r\n    );\r\n  };\r\n\r\n  // const handleEvent = () => {\r\n\r\n  // }\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadStatusValues(user._id, token);\r\n  }, [orderActive, orderUpdateActive, orderEmployeeAssignActive]);\r\n\r\n  useEffect(() => {\r\n    loadCommentValues(user._id, token);\r\n  }, [orderActive, orderUpdateActive, orderEmployeeAssignActive]);\r\n\r\n  useEffect(() => {\r\n    loadPendingOrders(user._id, token);\r\n  }, [orderActive, orderUpdateActive, orderEmployeeAssignActive]);\r\n  return (\r\n    <section className=\"adminDashPanel-right-section dashboard-section\">\r\n      <div className=\"adminDashPanel-right-subsection dashboard-subSection\">\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-orders\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Orders</p>\r\n            <h1 className=\"dashboard-status-value\">{orderStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-orders\">\r\n              {orderCommentValue} orders\r\n              not delivered\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={CartIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-products\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Products</p>\r\n            <h1 className=\"dashboard-status-value\">{productStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-products\">\r\n              {productCommentValue} products out of Stock\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={ProductIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-employers\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Employers</p>\r\n            <h1 className=\"dashboard-status-value\">{employerStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-employers\">\r\n              {employeeCommentValue} Employees available\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={EmployerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-customers\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Customers</p>\r\n\r\n            <h1 className=\"dashboard-status-value\">{customerStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-customers\">\r\n              {customerCommentValue} Customer order pending\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={CustomerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"adminDashPanel-right-subsection\">\r\n        <BarChart chartData= {userData} />\r\n        <LineChart chartData={userData} />\r\n        <PieChart chartData={userData} />\r\n      </div> */}\r\n\r\n      <h1 className=\"adminDashPanel-right-header\">Pending Orders</h1>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Total</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {pendingOrders &&\r\n              pendingOrders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr \"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <div\r\n                        className={`adminDashPanel-right-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentStatus === \"Paid\" ? (\r\n                        order.OpaymentStatus\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handlePaymentStatus(order)}\r\n                        >\r\n                          Pending\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.Ostatus === \"Not-Confirmed\" ? (\r\n                        \" \"\r\n                      ) : order.OemployeeName ? (\r\n                        order.OemployeeName\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handleEmployeeAssign(order)}\r\n                        >\r\n                          Not Assigned\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && (\r\n        <EmployeeUpdate\r\n          setOrderEmployeeAssignActive={setOrderEmployeeAssignActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js",["459","460","461","462","463","464"],[],"import React, { useState, useEffect } from \"react\";\r\nimport ViewIcon from \"../assets/svg/view.svg\";\r\nimport EditIcon from \"../assets/svg/Edit.svg\";\r\nimport AddIcon from \"../assets/svg//add.svg\";\r\nimport TrashIcon from \"../assets/svg/Trash.svg\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { getAllProducts } from \"../core/helper/productDetailHelper\";\r\nimport { API } from \"../setup/backend-manager/backend\";\r\nimport AddProduct from \"./AddProduct\";\r\nimport ProductDetail from \"./ProductDetail\";\r\nimport EditProduct from \"./EditProduct\";\r\nimport DeleteProduct from \"./DeleteProduct\";\r\n\r\nconst Product = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [category, setCategory] = useState(\"all\");\r\n  const [addProductActive, setAddProductActive] = useState(\"\");\r\n  const [editProductActive, setEditProductActive] = useState(\"\");\r\n  const [deleteProductActive, setDeleteProductActive] = useState(\"\");\r\n  const [productDetail, setProductDetail] = useState(\"\");\r\n  const [product, setProduct] = useState();\r\n  const [countValues, setCountValues] = useState({\r\n    all: 0,\r\n    Fruit: 0,\r\n    Vegetable: 0,\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { all, Fruit, Vegetable } = countValues;\r\n\r\n  const loadProducts = async (category) => {\r\n    try {\r\n      const data = await getAllProducts(category);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProducts(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const filterBtn = (CategoryState, CategoryValue, CategoryBtnValue) => {\r\n    return (\r\n      <button\r\n        className={`orders-filter-btn ${\r\n          category === CategoryState ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setCategory(CategoryState)}\r\n      >\r\n        {CategoryBtnValue}{\" \"}\r\n        <span className=\"filter-btn-value\">{CategoryValue}</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const loadCountValues = async () => {\r\n    var products = [];\r\n    try {\r\n      const data = await getAllProducts(\"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        products = data;\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n\r\n    setCountValues({\r\n      ...countValues,\r\n      all: products.length,\r\n      Fruit: products.filter((product) => product.pCategory === \"fruit\").length,\r\n      Vegetable: products.filter((product) => product.pCategory === \"vegetable\")\r\n        .length,\r\n    });\r\n  };\r\n\r\n  // const loadMessage = () => {\r\n  //   set\r\n  // }\r\n\r\n  const handlePreview = (product) => {\r\n    return setProductDetail(\"productDetail\"), setProduct(product);\r\n  };\r\n  const handleEdit = (product) => {\r\n    return setEditProductActive(\"editProduct\"), setProduct(product);\r\n  };\r\n  const handleDelete = async (product) => {\r\n    return setDeleteProductActive(\"deleteProduct\"), setProduct(product);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProducts(category);\r\n  }, [category, addProductActive, editProductActive]);\r\n\r\n  useEffect(() => {\r\n    loadCountValues();\r\n  }, [category, addProductActive, editProductActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section product-section\">\r\n      {/* <div className=\"adminDashPanel-right-delete-Message-sec\">\r\n        <p className=\"adminDashPanel-right-delete-Message\">\r\n          Product Product Name - 99999999999999 was successfully deleted\r\n        </p>\r\n        <div className=\"cross-sec\">\r\n          <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n        </div>\r\n      </div> */}\r\n      <h1 className=\"adminDashPanel-right-header\">Products</h1>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-add-btn-subSection\">\r\n        <button\r\n          className=\"adminDashPanel-product-add-btn\"\r\n          onClick={() => setAddProductActive(\"addProduct\")}\r\n        >\r\n          <img\r\n            src={AddIcon}\r\n            className=\"adminDashPanel-product-add-btn-icon\"\r\n            alt=\"\"\r\n          />\r\n          ADD PRODUCT\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-filter-subSection\">\r\n        {filterBtn(\"all\", all, \"All\")}\r\n        {filterBtn(\"fruit\", Fruit, \"Fruit\")}\r\n        {filterBtn(\"vegetable\", Vegetable, \"Vegetable\")}\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Product Image\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Product Name\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Product ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Description\r\n              </th>\r\n\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Category\r\n              </th>\r\n\r\n              <th className=\"adminDashPanel-right-table-head-value\">Stock</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Price</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {products &&\r\n              products.map((product, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <img\r\n                        className=\"adminDashPanel-product-img\"\r\n                        src={`${API}/product/photo/${product.pImg.key}`}\r\n                        alt=\"\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pDescription}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pCategory}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pStock !== 0\r\n                        ? `${product.pStock} Kg`\r\n                        : \"Out of Stock\"}\r\n                    </td>\r\n\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pPrice}\r\n                    </td>\r\n                    {/* <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(product.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(product.updatedAt).format(\"DD-MMM-yyyy\")}\r\n                    </td> */}\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(product)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(product)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(product)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {addProductActive === \"addProduct\" && (\r\n        <AddProduct setAddProductActive={setAddProductActive} />\r\n      )}\r\n      {editProductActive === \"editProduct\" && (\r\n        <EditProduct\r\n          setEditProductActive={setEditProductActive}\r\n          product={product}\r\n        />\r\n      )}\r\n      {deleteProductActive === \"deleteProduct\" && (\r\n        <DeleteProduct\r\n          setDeleteProductActive={setDeleteProductActive}\r\n          product={product}\r\n        />\r\n      )}\r\n      {productDetail === \"productDetail\" && (\r\n        <ProductDetail setProductDetail={setProductDetail} product={product} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js",["465","466","467"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { getCustomers } from \"../user\";\r\nimport moment from \"moment\";\r\nimport ViewIcon from \"../assets/svg/view.svg\";\r\nimport TrashIcon from \"../assets/svg/Trash.svg\";\r\nimport CustomerDetail from \"./CustomerDetail\";\r\nimport DeleteCustomer from \"./DeleteCustomer\";\r\n\r\nconst Customer = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customerDetail, setCustomerDetail] = useState(\"\");\r\n  const [deleteCustomerActive, setDeleteCustomerActive] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadCustomers = async (userId, token) => {\r\n    try {\r\n      const data = await getCustomers(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setCustomers(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (customer) => {\r\n    return setCustomerDetail(\"customerDetail\"), setCustomer(customer);\r\n  };\r\n\r\n  const handleDelete = async (customer) => {\r\n    return setDeleteCustomerActive(\"deleteCustomer\"), setCustomer(customer);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCustomers(user._id, token);\r\n  }, []);\r\n\r\n  // console.log(\"Customers\", customers);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section customer-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Customers</h1>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Name</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Customer ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Email</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Phone Number\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Address</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Created At\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {customers &&\r\n              customers.map((customer, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.name}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.email}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.phoneNumber}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.address.houseName}\r\n                      <br />\r\n                      {customer.address.streetName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(customer.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(customer)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(customer)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {customerDetail === \"customerDetail\" && (\r\n        <CustomerDetail\r\n          customer={customer}\r\n          setCustomerDetail={setCustomerDetail}\r\n        />\r\n      )}\r\n      {deleteCustomerActive === \"deleteCustomer\" && (\r\n        <DeleteCustomer\r\n          customer={customer}\r\n          setDeleteCustomerActive={setDeleteCustomerActive}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js",["468","469","470","471"],[],"import React, { useState, useEffect } from \"react\";\r\nimport ViewIcon from \"../assets/svg/view.svg\";\r\nimport TrashIcon from \"../assets/svg/Trash.svg\";\r\nimport AddIcon from \"../assets/svg/add.svg\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport moment from \"moment\";\r\nimport AddEmployee from \"./AddEmployee\";\r\nimport EmployeeDetail from \"./EmployeeDetail\";\r\nimport DeleteEmployee from \"./DeleteEmployee\";\r\nimport { getEmployees } from \"../user\";\r\n\r\nconst Employee = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [employee, setEmployee] = useState();\r\n  const [addEmployeeActive, setAddEmployeeActive] = useState(\"\");\r\n  const [deleteEmployeeActive, setDeleteEmployeeActive] = useState(\"\");\r\n  const [employeeDetail, setEmployeeDetail] = useState(\"\");\r\n  const [countValues, setCountValues] = useState({\r\n    all: 0,\r\n    Available: 0,\r\n    NotAvailable: 0,\r\n    OnDuty: 0,\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { all, Available, NotAvailable, OnDuty } = countValues;\r\n\r\n  const loadEmployees = async (userId, token, status) => {\r\n    try {\r\n      const data = await getEmployees(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployees(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const filterBtn = (statusState, statusValue, statusBtnValue) => {\r\n    return (\r\n      <button\r\n        className={`orders-filter-btn ${\r\n          status === statusState ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setStatus(statusState)}\r\n      >\r\n        {statusBtnValue} <span className=\"filter-btn-value\">{statusValue}</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const loadCountValues = async (userId, token) => {\r\n    var employees = [];\r\n    try {\r\n      const data = await getEmployees(userId, token, \"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        employees = data;\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n\r\n    setCountValues({\r\n      ...countValues,\r\n      all: employees.length,\r\n      Available: employees.filter(\r\n        (employee) => employee.Estatus === \"Available\"\r\n      ).length,\r\n      NotAvailable: employees.filter(\r\n        (employee) => employee.Estatus === \"NotAvailable\"\r\n      ).length,\r\n      OnDuty: employees.filter((employee) => employee.Estatus === \"OnDuty\")\r\n        .length,\r\n    });\r\n  };\r\n\r\n  const handlePreview = (employee) => {\r\n    return setEmployeeDetail(\"employeeDetail\"), setEmployee(employee);\r\n  };\r\n\r\n  const handleDelete = async (employee) => {\r\n    return setDeleteEmployeeActive(\"deleteEmployee\"), setEmployee(employee);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees(user._id, token, status);\r\n  }, [status, addEmployeeActive]);\r\n\r\n  useEffect(() => {\r\n    loadCountValues(user._id, token);\r\n  }, [status, addEmployeeActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section employee-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Employees</h1>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-add-btn-subSection\">\r\n        <button\r\n          className=\"adminDashPanel-product-add-btn\"\r\n          onClick={() => setAddEmployeeActive(\"addEmployee\")}\r\n        >\r\n          <img\r\n            src={AddIcon}\r\n            className=\"adminDashPanel-product-add-btn-icon\"\r\n            alt=\"\"\r\n          />\r\n          ADD EMPLOYEE\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-filter-subSection\">\r\n        {filterBtn(\"all\", all, \"All\")}\r\n        {filterBtn(\"Available\", Available, \"Available\")}\r\n        {filterBtn(\"NotAvailable\", NotAvailable, \"NotAvailable\")}\r\n        {filterBtn(\"OnDuty\", OnDuty, \"On-Duty\")}\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Name</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Employee ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Email</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Phone Number\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Address</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Created At\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {employees &&\r\n              employees.map((employee, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.name}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.email}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Estatus}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.phoneNumber}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.address.houseName}\r\n                      <br />\r\n                      {employee.Euser.address.streetName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(employee.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(employee)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(employee)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {addEmployeeActive === \"addEmployee\" && (\r\n        <AddEmployee setAddEmployeeActive={setAddEmployeeActive} />\r\n      )}\r\n      {deleteEmployeeActive === \"deleteEmployee\" && (\r\n        <DeleteEmployee\r\n          setDeleteEmployeeActive={setDeleteEmployeeActive}\r\n          employee={employee}\r\n        />\r\n      )}\r\n      {employeeDetail === \"employeeDetail\" && (\r\n        <EmployeeDetail\r\n          employee={employee}\r\n          setEmployeeDetail={setEmployeeDetail}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js",["472","473","474","475","476"],[],"import React, { useState, useEffect } from \"react\";\r\nimport CartIcon from \"../assets/svg/cart.svg\";\r\nimport ProductIcon from \"../assets/svg/product.svg\";\r\nimport EmployerIcon from \"../assets/svg/employer.svg\";\r\nimport ViewIcon from \"../assets/svg/view.svg\";\r\nimport EditIcon from \"../assets/svg/Edit.svg\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport {\r\n  getAllDeliveries,\r\n  getCountDeliveries,\r\n  getCountNewDeliveries,\r\n  getEmployeeStatus,\r\n} from \"../user\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Dashboard = () => {\r\n  const [statusValues, setStatusValues] = useState({\r\n    totalDeliveries: \"\",\r\n    NewDeliveries: \"\",\r\n    EmployeeStatus: \"\",\r\n  });\r\n  const [newDeliveries, setNewDeliveires] = useState([]);\r\n  const [order, setOrder] = useState({});\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { totalDeliveries, NewDeliveries, EmployeeStatus } = statusValues;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadStatusValues = async (userId, token) => {\r\n    try {\r\n      const totalDeliveries = await getCountDeliveries(userId, token);\r\n      const NewDeliveries = await getCountNewDeliveries(userId, token);\r\n      const EmployeeStatus = await getEmployeeStatus(userId, token);\r\n\r\n      if (\r\n        totalDeliveries.error ||\r\n        NewDeliveries.error ||\r\n        EmployeeStatus.error\r\n      ) {\r\n        return console.log(\"status update error occured\");\r\n      } else {\r\n        return setStatusValues({\r\n          ...statusValues,\r\n          totalDeliveries: totalDeliveries,\r\n          NewDeliveries: NewDeliveries,\r\n          EmployeeStatus: EmployeeStatus,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadNewDelivery = async (userId, token) => {\r\n    try {\r\n      const data = await getAllDeliveries(userId, token, \"pending\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setNewDeliveires(data.Eorders);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadNewDelivery(user._id, token);\r\n  }, [orderUpdateActive, orderUpdatePayment]);\r\n\r\n  useEffect(() => {\r\n    loadStatusValues(user._id, token);\r\n  }, [orderUpdateActive, orderUpdatePayment]);\r\n\r\n  return (\r\n    <section className=\"employeeBoard-section\">\r\n      <div className=\"-right-subsection dashboard-subSection\">\r\n        {/* <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-TotalDeliveries\">\r\n          <p className=\"dashboard-status-tag\">Total Deliveries</p>\r\n          <h1 className=\"dashboard-status-value\">{totalDeliveries}</h1>\r\n          <img src={CartIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-DeliveryStatus\">\r\n          <p className=\"dashboard-status-tag\">New Deliveries</p>\r\n          <h1 className=\"dashboard-status-value\">{NewDeliveries}</h1>\r\n          <img src={ProductIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-EmpoyeeStatus\">\r\n          <p className=\"dashboard-status-tag\">My Status</p>\r\n          <h1 className=\"dashboard-status-value\">{EmployeeStatus}</h1>\r\n          <img src={EmployerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div> */}\r\n\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-TotalDeliveries\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Orders</p>\r\n            <h1 className=\"dashboard-status-value\">{totalDeliveries}</h1>\r\n            {/* <p className=\"dashboard-status-comment dashboard-status-comment-orders\">\r\n              {orderCommentValue} orders\r\n              not delivered\r\n            </p> */}\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={CartIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-DeliveryStatus\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Products</p>\r\n            <h1 className=\"dashboard-status-value\">{NewDeliveries}</h1>\r\n            {/* <p className=\"dashboard-status-comment dashboard-status-comment-products\">\r\n              {productCommentValue} products out of Stock\r\n            </p> */}\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={ProductIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-EmpoyeeStatus\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Employers</p>\r\n            <h1 className=\"dashboard-status-value\">{EmployeeStatus}</h1>\r\n            {/* <p className=\"dashboard-status-comment dashboard-status-comment-employers\">\r\n              {employeeCommentValue} Employees available\r\n            </p> */}\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={EmployerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n \r\n\r\n        {/* <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-customers\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Customers</p>\r\n\r\n            <h1 className=\"dashboard-status-value\">{customerStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-customers\">\r\n              {customerCommentValue} Customer order pending\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={CustomerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n\r\n      <h1 className=\"employeeBoard-right-header\">New Delivery</h1>\r\n\r\n      <div className=\"employeeBoard-right-subsection\">\r\n        <table className=\"employeeBoard-right-table\">\r\n          <thead className=\"employeeBoard-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"employeeBoard-right-table-head-value\">Order ID</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Status</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Total</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Address</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"employeeBoard-right-table-body-sec\">\r\n            {newDeliveries &&\r\n              newDeliveries.map((order, index) => {\r\n                return (\r\n                  order.EorderId.Ostatus !== (\"Delivered\" || \"Cancelled\") && (\r\n                    <tr\r\n                      key={index}\r\n                      className=\"employeeBoard-right-table-body-tr \"\r\n                    >\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId._id}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        <div\r\n                          className={`employeeBoard-right-table-body-div ${order.EorderId.Ostatus}`}\r\n                        >\r\n                          {order.EorderId.Ostatus}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OtotalPrice}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentMode}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentStatus === \"Paid\" ? (\r\n                          order.EorderId.OpaymentStatus\r\n                        ) : (\r\n                          <button\r\n                            className=\"adminDashPanel-right-table-body-value-btn\"\r\n                            onClick={() => handlePaymentStatus(order.EorderId)}\r\n                          >\r\n                            Pending\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderAddress.houseName}\r\n                        <br />\r\n                        {order.EorderAddress.streetName}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        <button onClick={() => handlePreview(order)}>\r\n                          <img\r\n                            src={ViewIcon}\r\n                            alt=\"\"\r\n                            className=\"employeeBoard-right-table-icon vie\"\r\n                          />\r\n                        </button>\r\n                        <button onClick={() => handleEdit(order.EorderId)}>\r\n                          <img\r\n                            src={EditIcon}\r\n                            alt=\"\"\r\n                            className=\"employeeBoard-right-table-icon vie\"\r\n                          />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js",["477","478","479","480"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { getAllDeliveries } from \"../user\";\r\nimport ViewIcon from \"../assets/svg/view.svg\";\r\nimport EditIcon from \"../assets/svg/Edit.svg\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Deliveries = () => {\r\n  const [deliveries, setDeliveires] = useState([]);\r\n  const [order, setOrder] = useState({});\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadDelivery = async (userId, token) => {\r\n    try {\r\n      const data = await getAllDeliveries(userId, token, \"all\");\r\n\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeliveires(data.Eorders);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDelivery(user._id, token);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"employeeBoard-section\">\r\n      <h1 className=\"employeeBoard-right-header\">Deliveries</h1>\r\n\r\n      <div className=\"employeeBoard-right-subsection\">\r\n        <table className=\"employeeBoard-right-table\">\r\n          <thead className=\"employeeBoard-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"employeeBoard-right-table-head-value\">Order ID</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Status</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Total</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Address</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"employeeBoard-right-table-body-sec\">\r\n            {deliveries &&\r\n              deliveries.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"employeeBoard-right-table-body-tr \"\r\n                  >\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId._id}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <div\r\n                        className={`employeeBoard-right-table-body-div ${order.EorderId.Ostatus}`}\r\n                      >\r\n                        {order.EorderId.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentStatus === \"Paid\" ? (\r\n                          order.EorderId.OpaymentStatus\r\n                        ) : (\r\n                          <button\r\n                            className=\"adminDashPanel-right-table-body-value-btn\"\r\n                            onClick={() => handlePaymentStatus(order.EorderId)}\r\n                          >\r\n                            Pending\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderAddress.houseName}\r\n                      <br />\r\n                      {order.EorderAddress.streetName}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order.EorderId)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Deliveries;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js",["481"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport Cross from \"../assets/svg/cross-black.svg\";\r\nimport { addEmployeeOrder, getEmployees } from \"../user\";\r\n\r\nconst EmployeeUpdate = ({ order, setOrderEmployeeAssignActive }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = async (userId, token) => {\r\n    try {\r\n      const data = await getEmployees(userId, token, \"Available\");\r\n      console.log(data);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployees(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeAssign = async (userId, token, orderId, employeeId) => {\r\n    try {\r\n      const data = await addEmployeeOrder(userId, token, orderId, employeeId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderEmployeeAssignActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"employeeUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header employeeUpdate-popup-header\">\r\n                Assign Employee\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderEmployeeAssignActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Employee Name</label>\r\n                  <select\r\n                    name=\"employeeName\"\r\n                    id=\"employeeName\"\r\n                    value={employeeId}\r\n                    onChange={(e) => setEmployeeId(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n                    <option value=\"\">Select an Employee</option>\r\n\r\n                    {employees &&\r\n                      employees.map((employee, index) => {\r\n                        return (\r\n                          <option key={index} value={employee._id}>\r\n                            {employee.Euser.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`popup-form-btn ${\r\n                  employeeId === \"\" ? \"button-unclickable\" : \"\"\r\n                }`}\r\n                onClick={() =>\r\n                  handleEmployeeAssign(user._id, token, order._id, employeeId)\r\n                }\r\n              >\r\n                Assign Employee\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EmployeeUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js",["482"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport Cross from \"../assets/svg/cross-black.svg\";\r\nimport { getUser } from \"../user\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order.EorderId._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.EorderId.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.EorderTotal}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {order.EorderId._id}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ostatus}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OEmployeeName || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {/* {userDetails.name} */}\r\n                      {order.EorderId.Ouser.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js",["483"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js",["484"],[],"import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\nconst ScrollToTop = ({ children }) => {\r\n  const location = useLocation();\r\n  useLayoutEffect(() => {\r\n    document.documentElement.scrollTo(0, 0);\r\n  }, [location.pathname]);\r\n  return children;\r\n};\r\n\r\nexport default ScrollToTop;",[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js",["485","486","487","488"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { signup, login, authenticate } from \"../setup/auth\";\r\n\r\nconst Signup = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const {\r\n    name,\r\n    email,\r\n    phoneNumber,\r\n    password,\r\n    confirmPassword,\r\n    houseName,\r\n    streetName,\r\n    error,\r\n    loading,\r\n    success,\r\n  } = values;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (\r\n      !(\r\n        name &&\r\n        email &&\r\n        phoneNumber &&\r\n        password &&\r\n        confirmPassword &&\r\n        houseName &&\r\n        streetName\r\n      )\r\n    ) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      console.log(\"Please enter a valid email address\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid email\",\r\n      });\r\n    }\r\n\r\n    if (phoneNumber.length !== 10) {\r\n      console.log(\"Please enter a valid phone Number\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid phone Number\",\r\n      });\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    if (!(password === confirmPassword)) {\r\n      console.log(\"Password confirmation does not match\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Password confirmation does not match\",\r\n      });\r\n    }\r\n\r\n    const address = {\r\n      houseName,\r\n      streetName,\r\n    };\r\n\r\n    try {\r\n      var data = await signup({ name, email, phoneNumber, password, address });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n      data = await login({ email, password });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n      authenticate(data);\r\n      return navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"wrap signup-wrap\">\r\n        <div className=\"popup-small-sec signup-popup\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec signup-head-sec\">\r\n              <h1 className=\"popup-header\">Sign Up</h1>\r\n              <p className=\"popup-header-p\">\r\n                Already a member ?{\" \"}\r\n                <Link to=\"/login\" className=\"popup-header-link\">\r\n                  Log In\r\n                </Link>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={name}\r\n                    onChange={handleChange(\"name\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-double-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    value={email}\r\n                    onChange={handleChange(\"email\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={phoneNumber}\r\n                    onChange={handleChange(\"phoneNumber\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-double-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"popup-form-input\"\r\n                    value={password}\r\n                    onChange={handleChange(\"password\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"popup-form-input\"\r\n                    value={confirmPassword}\r\n                    onChange={handleChange(\"confirmPassword\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-sec-group\">\r\n                <h3 className=\"popup-form-sec-group-header\">Address</h3>\r\n                <div className=\"popup-form-double-group\">\r\n                  <div className=\"popup-form-group\">\r\n                    <label className=\"popup-form-label\">House Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"popup-form-input\"\r\n                      value={houseName}\r\n                      onChange={handleChange(\"houseName\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"popup-form-group\">\r\n                    <label className=\"popup-form-label\">Street Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"popup-form-input\"\r\n                      value={streetName}\r\n                      onChange={handleChange(\"streetName\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"popup-form-btn signup-popup-btn\"\r\n                onClick={onSubmit}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EditProduct.js",["489"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport {\r\n  getProduct,\r\n  updateProduct,\r\n  updateProductWithImage,\r\n} from \"../core/helper/productDetailHelper\";\r\nimport CrossIcon from \"../assets/svg/cross-black.svg\";\r\n\r\nconst EditProduct = ({ setEditProductActive, product }) => {\r\n  const [values, setValues] = useState({\r\n    pName: \"\",\r\n    pDescription: \"\",\r\n    pStock: \"\",\r\n    pCategory: \"\",\r\n    pPrice: \"\",\r\n  });\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const { pName, pDescription, pStock, pCategory, pPrice } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n    console.log(\"file\", file);\r\n  };\r\n\r\n  const loadValues = async () => {\r\n    try {\r\n      const data = await getProduct(product._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setValues({\r\n          ...values,\r\n          pName: data.pName,\r\n          pDescription: data.pDescription,\r\n          pStock: data.pStock,\r\n          pCategory: data.pCategory,\r\n          pPrice: data.pPrice,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"pImg\", file);\r\n      formData.append(\"pName\", pName);\r\n      formData.append(\"pDescription\", pDescription);\r\n      formData.append(\"pStock\", pStock);\r\n      formData.append(\"pPrice\", pPrice);\r\n      formData.append(\"pCategory\", pCategory);\r\n      try {\r\n        const data = await updateProductWithImage(\r\n          user._id,\r\n          token,\r\n          product._id,\r\n          formData\r\n        );\r\n        if (data.error) {\r\n          return console.log(data.error);\r\n        } else {\r\n          return setEditProductActive(null);\r\n        }\r\n      } catch (error) {\r\n        return console.log(error);\r\n      }\r\n    } else {\r\n      try {\r\n        const data = await updateProduct(user._id, token, product._id, values);\r\n        if(data.error){\r\n          return console.log(data.error);\r\n        }else{\r\n          return setEditProductActive(null);\r\n        }\r\n      } catch (error) {\r\n        return console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadValues();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"addProduct-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setEditProductActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={pName}\r\n                    onChange={handleChange(\"pName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">\r\n                    Product Description\r\n                  </label>\r\n                  <textarea\r\n                    className=\"popup-form-input adminDashPanel-addproduct-textArea\"\r\n                    name=\"popup-form-input\"\r\n                    id=\"popup-form-input\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    value={pDescription}\r\n                    onChange={handleChange(\"pDescription\")}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-triple-group adminDashPanel-addProducts-triple-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={pPrice}\r\n                    onChange={handleChange(\"pPrice\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Stock</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={pStock}\r\n                    onChange={handleChange(\"pStock\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Category</label>\r\n                  <select\r\n                    name=\"category\"\r\n                    id=\"category\"\r\n                    className=\"popup-form-value\"\r\n                    onChange={handleChange(\"pCategory\")}\r\n                  >\r\n                    <option value=\"fruit\">Select Category</option>\r\n                    <option value=\"fruit\">Fruit</option>\r\n                    <option value=\"vegetable\">Vegetable</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Image</label>\r\n                  <div className=\"popup-form-input-div adminDashPanel-addProducts-input-div\">\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"pImg\"\r\n                      accept=\"image/*\"\r\n                      className=\"popup-form-input\"\r\n                      onChange={handleFileChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className=\"popup-form-btn\" type=\"submit\">\r\n                    Edit Product\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {error && errorMessage()} */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteProduct.js",["490"],[],"import React, { useState } from \"react\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport { deleteProduct } from \"../core/helper/productDetailHelper\";\r\nimport CrossIcon from \"../assets/svg/cross-black.svg\";\r\n\r\nconst DeleteProduct = ({ setDeleteProductActive, product }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const data = await deleteProduct(user._id, token, product._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeleteProductActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"deleteProduct-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Delete Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setDeleteProductActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    This action <b>cannot</b> be undone. This will permanently\r\n                    delete the <b>{product.pName}</b> product from your\r\n                    database.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    Please type <b>{product._id}</b>  to confirm.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className={`popup-form-btn ${product._id == value ? \"\" :\" button-unclickable\" }`} type=\"submit\">\r\n                    Delete Product\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeleteProduct;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteEmployee.js",["491"],[],"import React, { useState } from \"react\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport CrossIcon from \"../assets/svg/cross-black.svg\";\r\nimport { deleteEmployee } from \"../user\";\r\n\r\nconst DeleteEmployee = ({ setDeleteEmployeeActive, employee}) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const data = await deleteEmployee(user._id, token, employee._id)\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeleteEmployeeActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"deleteEmployee-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Delete Employee</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setDeleteEmployeeActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    This action <b>cannot</b> be undone. This will permanently\r\n                    delete the <b>{employee.Euser.name}</b> Employee from your\r\n                    database.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    Please type <b>{employee._id}</b> to confirm.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className={`popup-form-btn ${employee._id == value ? \"\" :\" button-unclickable\" }`} type=\"submit\">\r\n                    Delete Employee\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeleteEmployee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteCustomer.js",["492"],[],"import React, { useState } from \"react\";\r\nimport { isAuthenticated } from \"../setup/auth\";\r\nimport CrossIcon from \"../assets/svg/cross-black.svg\";\r\nimport { deleteCustomer } from \"../user\";\r\n\r\nconst DeleteCustomer = ({ setDeleteCustomerActive, customer }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const data = await deleteCustomer(user._id, token, customer._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeleteCustomerActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"deleteCustomer-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Delete Customer</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setDeleteCustomerActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    This action <b>cannot</b> be undone. This will permanently\r\n                    delete the <b>{customer.name}</b> customer from your\r\n                    database.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    Please type <b>{customer._id}</b>  to confirm.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className={`popup-form-btn ${customer._id == value ? \"\" :\" button-unclickable\" }`} type=\"submit\">\r\n                    Delete Customer\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeleteCustomer;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\BarChart.js",["493"],[],"import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {Chart} from 'chart.js/auto';\r\n\r\nconst BarChart = ({chartData}) => {\r\n  return <Bar data={chartData} />\r\n}\r\n\r\nexport default BarChart","F:\\mern\\projects\\greenbeans\\client\\src\\core\\data.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\LineChart.js",["494"],[],"import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {Chart} from 'chart.js/auto';\r\n\r\nconst LineChart = ({chartData}) => {\r\n  return <Line data={chartData} />\r\n}\r\n\r\nexport default LineChart","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\PieChart.js",["495"],[],"import React from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\nimport {Chart} from 'chart.js/auto';\r\n\r\nconst PieChart = ({chartData}) => {\r\n  return <Pie data={chartData} />\r\n}\r\n\r\nexport default PieChart","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Loading.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductDetail.js",["496","497"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductListing.js",["498"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductComponent.js",[],[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\routes-manager\\Routes.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\backend-manager\\backend.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\store.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\reducers\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\reducers\\cartReducer.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\reducers\\productReducer.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\constants\\action-types.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\redux-manager\\actions\\cartActions.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\auth\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\auth\\CustomerRoutes.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\setup\\auth\\AdminRoutes.js",["499"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 2)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\auth\\EmployeeRoutes.js",["500"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst EmployeeRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 1)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default EmployeeRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\setup\\context-manager\\Context.js",[],[],{"ruleId":"501","severity":1,"message":"502","line":1,"column":27,"nodeType":"503","messageId":"504","endLine":1,"endColumn":37},{"ruleId":"501","severity":1,"message":"505","line":22,"column":17,"nodeType":"503","messageId":"504","endLine":22,"endColumn":22},{"ruleId":"506","severity":1,"message":"507","line":67,"column":6,"nodeType":"508","endLine":67,"endColumn":8,"suggestions":"509"},{"ruleId":"501","severity":1,"message":"510","line":26,"column":10,"nodeType":"503","messageId":"504","endLine":26,"endColumn":20},{"ruleId":"501","severity":1,"message":"511","line":26,"column":22,"nodeType":"503","messageId":"504","endLine":26,"endColumn":35},{"ruleId":"512","severity":1,"message":"513","line":31,"column":33,"nodeType":"514","messageId":"515","endLine":31,"endColumn":34},{"ruleId":"512","severity":1,"message":"513","line":61,"column":35,"nodeType":"514","messageId":"515","endLine":61,"endColumn":36},{"ruleId":"501","severity":1,"message":"516","line":1,"column":9,"nodeType":"503","messageId":"504","endLine":1,"endColumn":12},{"ruleId":"501","severity":1,"message":"517","line":2,"column":7,"nodeType":"503","messageId":"504","endLine":2,"endColumn":12},{"ruleId":"506","severity":1,"message":"518","line":81,"column":6,"nodeType":"508","endLine":81,"endColumn":15,"suggestions":"519"},{"ruleId":"501","severity":1,"message":"520","line":14,"column":35,"nodeType":"503","messageId":"504","endLine":14,"endColumn":42},{"ruleId":"501","severity":1,"message":"521","line":14,"column":44,"nodeType":"503","messageId":"504","endLine":14,"endColumn":51},{"ruleId":"522","severity":1,"message":"523","line":37,"column":17,"nodeType":"524","messageId":"525","endLine":37,"endColumn":18,"suggestions":"526"},{"ruleId":"522","severity":1,"message":"523","line":37,"column":33,"nodeType":"524","messageId":"525","endLine":37,"endColumn":34,"suggestions":"527"},{"ruleId":"506","severity":1,"message":"528","line":44,"column":6,"nodeType":"508","endLine":44,"endColumn":18,"suggestions":"529"},{"ruleId":"501","severity":1,"message":"530","line":24,"column":11,"nodeType":"503","messageId":"504","endLine":24,"endColumn":15},{"ruleId":"506","severity":1,"message":"528","line":45,"column":6,"nodeType":"508","endLine":45,"endColumn":22,"suggestions":"531"},{"ruleId":"501","severity":1,"message":"530","line":16,"column":11,"nodeType":"503","messageId":"504","endLine":16,"endColumn":15},{"ruleId":"506","severity":1,"message":"532","line":31,"column":6,"nodeType":"508","endLine":31,"endColumn":8,"suggestions":"533"},{"ruleId":"512","severity":1,"message":"513","line":34,"column":42,"nodeType":"514","messageId":"515","endLine":34,"endColumn":43},{"ruleId":"501","severity":1,"message":"530","line":9,"column":11,"nodeType":"503","messageId":"504","endLine":9,"endColumn":15},{"ruleId":"501","severity":1,"message":"520","line":22,"column":61,"nodeType":"503","messageId":"504","endLine":22,"endColumn":68},{"ruleId":"501","severity":1,"message":"520","line":27,"column":44,"nodeType":"503","messageId":"504","endLine":27,"endColumn":51},{"ruleId":"501","severity":1,"message":"521","line":27,"column":53,"nodeType":"503","messageId":"504","endLine":27,"endColumn":60},{"ruleId":"501","severity":1,"message":"530","line":29,"column":11,"nodeType":"503","messageId":"504","endLine":29,"endColumn":15},{"ruleId":"506","severity":1,"message":"528","line":53,"column":6,"nodeType":"508","endLine":53,"endColumn":8,"suggestions":"534"},{"ruleId":"501","severity":1,"message":"520","line":27,"column":48,"nodeType":"503","messageId":"504","endLine":27,"endColumn":55},{"ruleId":"501","severity":1,"message":"521","line":27,"column":57,"nodeType":"503","messageId":"504","endLine":27,"endColumn":64},{"ruleId":"501","severity":1,"message":"530","line":29,"column":11,"nodeType":"503","messageId":"504","endLine":29,"endColumn":15},{"ruleId":"506","severity":1,"message":"528","line":53,"column":6,"nodeType":"508","endLine":53,"endColumn":8,"suggestions":"535"},{"ruleId":"501","severity":1,"message":"536","line":24,"column":10,"nodeType":"503","messageId":"504","endLine":24,"endColumn":24},{"ruleId":"501","severity":1,"message":"537","line":24,"column":26,"nodeType":"503","messageId":"504","endLine":24,"endColumn":43},{"ruleId":"501","severity":1,"message":"530","line":28,"column":11,"nodeType":"503","messageId":"504","endLine":28,"endColumn":15},{"ruleId":"506","severity":1,"message":"507","line":52,"column":6,"nodeType":"508","endLine":52,"endColumn":8,"suggestions":"538"},{"ruleId":"506","severity":1,"message":"539","line":56,"column":6,"nodeType":"508","endLine":56,"endColumn":8,"suggestions":"540"},{"ruleId":"506","severity":1,"message":"541","line":69,"column":6,"nodeType":"508","endLine":69,"endColumn":12,"suggestions":"542"},{"ruleId":"506","severity":1,"message":"543","line":49,"column":6,"nodeType":"508","endLine":49,"endColumn":12,"suggestions":"544"},{"ruleId":"506","severity":1,"message":"545","line":53,"column":6,"nodeType":"508","endLine":53,"endColumn":16,"suggestions":"546"},{"ruleId":"506","severity":1,"message":"528","line":45,"column":6,"nodeType":"508","endLine":45,"endColumn":18,"suggestions":"547"},{"ruleId":"506","severity":1,"message":"528","line":43,"column":6,"nodeType":"508","endLine":43,"endColumn":18,"suggestions":"548"},{"ruleId":"501","severity":1,"message":"530","line":30,"column":11,"nodeType":"503","messageId":"504","endLine":30,"endColumn":15},{"ruleId":"506","severity":1,"message":"549","line":155,"column":6,"nodeType":"508","endLine":155,"endColumn":8,"suggestions":"550"},{"ruleId":"506","severity":1,"message":"551","line":159,"column":6,"nodeType":"508","endLine":159,"endColumn":8,"suggestions":"552"},{"ruleId":"506","severity":1,"message":"553","line":25,"column":6,"nodeType":"508","endLine":25,"endColumn":8,"suggestions":"554"},{"ruleId":"501","severity":1,"message":"555","line":24,"column":10,"nodeType":"503","messageId":"504","endLine":24,"endColumn":14},{"ruleId":"506","severity":1,"message":"532","line":44,"column":6,"nodeType":"508","endLine":44,"endColumn":18,"suggestions":"556"},{"ruleId":"512","severity":1,"message":"513","line":59,"column":42,"nodeType":"514","messageId":"515","endLine":59,"endColumn":43},{"ruleId":"512","severity":1,"message":"513","line":63,"column":53,"nodeType":"514","messageId":"515","endLine":63,"endColumn":54},{"ruleId":"512","severity":1,"message":"513","line":73,"column":55,"nodeType":"514","messageId":"515","endLine":73,"endColumn":56},{"ruleId":"506","severity":1,"message":"553","line":122,"column":6,"nodeType":"508","endLine":122,"endColumn":73,"suggestions":"557"},{"ruleId":"506","severity":1,"message":"558","line":126,"column":6,"nodeType":"508","endLine":126,"endColumn":73,"suggestions":"559"},{"ruleId":"501","severity":1,"message":"560","line":22,"column":8,"nodeType":"503","messageId":"504","endLine":22,"endColumn":16},{"ruleId":"501","severity":1,"message":"561","line":24,"column":8,"nodeType":"503","messageId":"504","endLine":24,"endColumn":17},{"ruleId":"501","severity":1,"message":"562","line":25,"column":8,"nodeType":"503","messageId":"504","endLine":25,"endColumn":16},{"ruleId":"501","severity":1,"message":"563","line":49,"column":10,"nodeType":"503","messageId":"504","endLine":49,"endColumn":18},{"ruleId":"501","severity":1,"message":"564","line":49,"column":20,"nodeType":"503","messageId":"504","endLine":49,"endColumn":31},{"ruleId":"512","severity":1,"message":"513","line":165,"column":42,"nodeType":"514","messageId":"515","endLine":165,"endColumn":43},{"ruleId":"512","severity":1,"message":"513","line":169,"column":53,"nodeType":"514","messageId":"515","endLine":169,"endColumn":54},{"ruleId":"512","severity":1,"message":"513","line":183,"column":55,"nodeType":"514","messageId":"515","endLine":183,"endColumn":56},{"ruleId":"506","severity":1,"message":"565","line":188,"column":6,"nodeType":"508","endLine":188,"endColumn":65,"suggestions":"566"},{"ruleId":"506","severity":1,"message":"567","line":192,"column":6,"nodeType":"508","endLine":192,"endColumn":65,"suggestions":"568"},{"ruleId":"506","severity":1,"message":"553","line":196,"column":6,"nodeType":"508","endLine":196,"endColumn":65,"suggestions":"569"},{"ruleId":"501","severity":1,"message":"530","line":28,"column":11,"nodeType":"503","messageId":"504","endLine":28,"endColumn":15},{"ruleId":"501","severity":1,"message":"505","line":28,"column":17,"nodeType":"503","messageId":"504","endLine":28,"endColumn":22},{"ruleId":"512","severity":1,"message":"513","line":86,"column":45,"nodeType":"514","messageId":"515","endLine":86,"endColumn":46},{"ruleId":"512","severity":1,"message":"513","line":89,"column":47,"nodeType":"514","messageId":"515","endLine":89,"endColumn":48},{"ruleId":"512","severity":1,"message":"513","line":92,"column":51,"nodeType":"514","messageId":"515","endLine":92,"endColumn":52},{"ruleId":"506","severity":1,"message":"570","line":101,"column":6,"nodeType":"508","endLine":101,"endColumn":53,"suggestions":"571"},{"ruleId":"512","severity":1,"message":"513","line":32,"column":47,"nodeType":"514","messageId":"515","endLine":32,"endColumn":48},{"ruleId":"512","severity":1,"message":"513","line":36,"column":53,"nodeType":"514","messageId":"515","endLine":36,"endColumn":54},{"ruleId":"506","severity":1,"message":"553","line":41,"column":6,"nodeType":"508","endLine":41,"endColumn":8,"suggestions":"572"},{"ruleId":"512","severity":1,"message":"513","line":84,"column":47,"nodeType":"514","messageId":"515","endLine":84,"endColumn":48},{"ruleId":"512","severity":1,"message":"513","line":88,"column":53,"nodeType":"514","messageId":"515","endLine":88,"endColumn":54},{"ruleId":"506","severity":1,"message":"553","line":93,"column":6,"nodeType":"508","endLine":93,"endColumn":33,"suggestions":"573"},{"ruleId":"506","severity":1,"message":"558","line":97,"column":6,"nodeType":"508","endLine":97,"endColumn":33,"suggestions":"574"},{"ruleId":"512","severity":1,"message":"513","line":73,"column":42,"nodeType":"514","messageId":"515","endLine":73,"endColumn":43},{"ruleId":"512","severity":1,"message":"513","line":77,"column":53,"nodeType":"514","messageId":"515","endLine":77,"endColumn":54},{"ruleId":"512","severity":1,"message":"513","line":81,"column":55,"nodeType":"514","messageId":"515","endLine":81,"endColumn":56},{"ruleId":"506","severity":1,"message":"553","line":86,"column":6,"nodeType":"508","endLine":86,"endColumn":45,"suggestions":"575"},{"ruleId":"506","severity":1,"message":"565","line":90,"column":6,"nodeType":"508","endLine":90,"endColumn":45,"suggestions":"576"},{"ruleId":"512","severity":1,"message":"513","line":34,"column":42,"nodeType":"514","messageId":"515","endLine":34,"endColumn":43},{"ruleId":"512","severity":1,"message":"513","line":38,"column":53,"nodeType":"514","messageId":"515","endLine":38,"endColumn":54},{"ruleId":"512","severity":1,"message":"513","line":42,"column":55,"nodeType":"514","messageId":"515","endLine":42,"endColumn":56},{"ruleId":"506","severity":1,"message":"553","line":47,"column":6,"nodeType":"508","endLine":47,"endColumn":8,"suggestions":"577"},{"ruleId":"506","severity":1,"message":"553","line":41,"column":6,"nodeType":"508","endLine":41,"endColumn":8,"suggestions":"578"},{"ruleId":"506","severity":1,"message":"553","line":25,"column":6,"nodeType":"508","endLine":25,"endColumn":8,"suggestions":"579"},{"ruleId":"501","severity":1,"message":"580","line":1,"column":27,"nodeType":"503","messageId":"504","endLine":1,"endColumn":36},{"ruleId":"501","severity":1,"message":"581","line":1,"column":8,"nodeType":"503","messageId":"504","endLine":1,"endColumn":13},{"ruleId":"501","severity":1,"message":"520","line":28,"column":5,"nodeType":"503","messageId":"504","endLine":28,"endColumn":12},{"ruleId":"501","severity":1,"message":"521","line":29,"column":5,"nodeType":"503","messageId":"504","endLine":29,"endColumn":12},{"ruleId":"522","severity":1,"message":"523","line":62,"column":17,"nodeType":"524","messageId":"525","endLine":62,"endColumn":18,"suggestions":"582"},{"ruleId":"522","severity":1,"message":"523","line":62,"column":33,"nodeType":"524","messageId":"525","endLine":62,"endColumn":34,"suggestions":"583"},{"ruleId":"506","severity":1,"message":"584","line":97,"column":6,"nodeType":"508","endLine":97,"endColumn":8,"suggestions":"585"},{"ruleId":"586","severity":1,"message":"587","line":66,"column":68,"nodeType":"588","messageId":"589","endLine":66,"endColumn":70},{"ruleId":"586","severity":1,"message":"587","line":66,"column":69,"nodeType":"588","messageId":"589","endLine":66,"endColumn":71},{"ruleId":"586","severity":1,"message":"587","line":66,"column":69,"nodeType":"588","messageId":"589","endLine":66,"endColumn":71},{"ruleId":"501","severity":1,"message":"590","line":3,"column":9,"nodeType":"503","messageId":"504","endLine":3,"endColumn":14},{"ruleId":"501","severity":1,"message":"590","line":3,"column":9,"nodeType":"503","messageId":"504","endLine":3,"endColumn":14},{"ruleId":"501","severity":1,"message":"590","line":3,"column":9,"nodeType":"503","messageId":"504","endLine":3,"endColumn":14},{"ruleId":"501","severity":1,"message":"591","line":11,"column":22,"nodeType":"503","messageId":"504","endLine":11,"endColumn":27},{"ruleId":"506","severity":1,"message":"507","line":38,"column":6,"nodeType":"508","endLine":38,"endColumn":17,"suggestions":"592"},{"ruleId":"506","severity":1,"message":"507","line":25,"column":6,"nodeType":"508","endLine":25,"endColumn":8,"suggestions":"593"},{"ruleId":"501","severity":1,"message":"581","line":1,"column":8,"nodeType":"503","messageId":"504","endLine":1,"endColumn":13},{"ruleId":"501","severity":1,"message":"581","line":1,"column":8,"nodeType":"503","messageId":"504","endLine":1,"endColumn":13},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["594"],"'searchView' is assigned a value but never used.","'setSearchView' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'API' is defined but never used.","'axios' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadProducts' and 'productId'. Either include them or remove the dependency array.",["595"],"'loading' is assigned a value but never used.","'success' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["596","597"],["598","599"],"React Hook useEffect has missing dependencies: 'preLoad', 'token', and 'userId'. Either include them or remove the dependency array.",["600"],"'user' is assigned a value but never used.",["601"],"React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["602"],["603"],["604"],"'productDetails' is assigned a value but never used.","'setProductDetails' is assigned a value but never used.",["605"],"React Hook useEffect has missing dependencies: 'preLoadShippingAddress', 'token', and 'userId'. Either include them or remove the dependency array.",["606"],"React Hook useEffect has a missing dependency: 'loadSubTotal_value'. Either include it or remove the dependency array.",["607"],"React Hook useEffect has missing dependencies: 'cartItemProductId' and 'getProductDetails'. Either include them or remove the dependency array.",["608"],"React Hook useEffect has missing dependencies: 'product._id' and 'updateQuantity'. Either include them or remove the dependency array. If 'updateQuantity' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["609"],["610"],["611"],"React Hook useEffect has missing dependencies: 'preLoadCart', 'token', and 'userId'. Either include them or remove the dependency array.",["612"],"React Hook useEffect has missing dependencies: 'preLoadUser', 'token', and 'userId'. Either include them or remove the dependency array.",["613"],"React Hook useEffect has missing dependencies: 'token' and 'user._id'. Either include them or remove the dependency array.",["614"],"'name' is assigned a value but never used.",["615"],["616"],"React Hook useEffect has missing dependencies: 'loadCountValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["617"],"'BarChart' is defined but never used.","'LineChart' is defined but never used.","'PieChart' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadStatusValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["618"],"React Hook useEffect has missing dependencies: 'loadCommentValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["619"],["620"],"React Hook useEffect has a missing dependency: 'loadCountValues'. Either include it or remove the dependency array.",["621"],["622"],["623"],["624"],["625"],["626"],["627"],["628"],["629"],"'useEffect' is defined but never used.","'React' is defined but never used.",["630","631"],["632","633"],"React Hook useEffect has a missing dependency: 'loadValues'. Either include it or remove the dependency array.",["634"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Chart' is defined but never used.","'title' is assigned a value but never used.",["635"],["636"],{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"messageId":"641","fix":"642","desc":"643"},{"messageId":"644","fix":"645","desc":"646"},{"messageId":"641","fix":"647","desc":"643"},{"messageId":"644","fix":"648","desc":"646"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"655","fix":"657"},{"desc":"637","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"649","fix":"667"},{"desc":"649","fix":"668"},{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"673","fix":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"673","fix":"698"},{"desc":"673","fix":"699"},{"desc":"673","fix":"700"},{"messageId":"641","fix":"701","desc":"643"},{"messageId":"644","fix":"702","desc":"646"},{"messageId":"641","fix":"703","desc":"643"},{"messageId":"644","fix":"704","desc":"646"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"637","fix":"709"},"Update the dependencies array to be: [dispatch]",{"range":"710","text":"711"},"Update the dependencies array to be: [loadProducts, product, productId]",{"range":"712","text":"713"},"removeEscape",{"range":"714","text":"715"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"716","text":"717"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"718","text":"715"},{"range":"719","text":"717"},"Update the dependencies array to be: [currentTab, preLoad, token, userId]",{"range":"720","text":"721"},"Update the dependencies array to be: [accountsActive, preLoad, token, userId]",{"range":"722","text":"723"},"Update the dependencies array to be: [token, userId]",{"range":"724","text":"725"},"Update the dependencies array to be: [preLoad, token, userId]",{"range":"726","text":"727"},{"range":"728","text":"727"},{"range":"729","text":"711"},"Update the dependencies array to be: [preLoadShippingAddress, token, userId]",{"range":"730","text":"731"},"Update the dependencies array to be: [cart, loadSubTotal_value]",{"range":"732","text":"733"},"Update the dependencies array to be: [cart, cartItemProductId, getProductDetails]",{"range":"734","text":"735"},"Update the dependencies array to be: [product._id, quantity, updateQuantity]",{"range":"736","text":"737"},{"range":"738","text":"721"},{"range":"739","text":"721"},"Update the dependencies array to be: [preLoadCart, token, userId]",{"range":"740","text":"741"},"Update the dependencies array to be: [preLoadUser, token, userId]",{"range":"742","text":"743"},"Update the dependencies array to be: [token, user._id]",{"range":"744","text":"745"},"Update the dependencies array to be: [currentTab, token, userId]",{"range":"746","text":"747"},"Update the dependencies array to be: [orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",{"range":"748","text":"749"},"Update the dependencies array to be: [orderActive, orderUpdateActive, status, orderEmployeeAssignActive, loadCountValues, user._id, token]",{"range":"750","text":"751"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",{"range":"752","text":"753"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, loadCommentValues, user._id, token]",{"range":"754","text":"755"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",{"range":"756","text":"757"},"Update the dependencies array to be: [category, addProductActive, editProductActive, loadCountValues]",{"range":"758","text":"759"},{"range":"760","text":"745"},"Update the dependencies array to be: [status, addEmployeeActive, user._id, token]",{"range":"761","text":"762"},"Update the dependencies array to be: [status, addEmployeeActive, loadCountValues, user._id, token]",{"range":"763","text":"764"},"Update the dependencies array to be: [orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"765","text":"766"},"Update the dependencies array to be: [loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"767","text":"768"},{"range":"769","text":"745"},{"range":"770","text":"745"},{"range":"771","text":"745"},{"range":"772","text":"715"},{"range":"773","text":"717"},{"range":"774","text":"715"},{"range":"775","text":"717"},"Update the dependencies array to be: [loadValues]",{"range":"776","text":"777"},"Update the dependencies array to be: [dispatch, productId]",{"range":"778","text":"779"},{"range":"780","text":"711"},[1850,1852],"[dispatch]",[2238,2247],"[loadProducts, product, productId]",[908,909],"",[908,908],"\\",[924,925],[924,924],[1243,1255],"[currentTab, preLoad, token, userId]",[1317,1333],"[accountsActive, preLoad, token, userId]",[924,926],"[token, userId]",[1352,1354],"[preLoad, token, userId]",[1397,1399],[1641,1643],[1719,1721],"[preLoadShippingAddress, token, userId]",[2008,2014],"[cart, loadSubTotal_value]",[1252,1258],"[cart, cartItemProductId, getProductDetails]",[1334,1344],"[product._id, quantity, updateQuantity]",[1309,1321],[1208,1220],[3953,3955],"[preLoadCart, token, userId]",[4020,4022],"[preLoadUser, token, userId]",[730,732],"[token, user._id]",[1629,1641],"[currentTab, token, userId]",[3684,3751],"[orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",[3822,3889],"[orderActive, orderUpdateActive, status, orderEmployeeAssignActive, loadCountValues, user._id, token]",[6079,6138],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",[6211,6270],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, loadCommentValues, user._id, token]",[6343,6402],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",[3103,3150],"[category, addProductActive, editProductActive, loadCountValues]",[1313,1315],[2856,2883],"[status, addEmployeeActive, user._id, token]",[2954,2981],"[status, addEmployeeActive, loadCountValues, user._id, token]",[2730,2769],"[orderUpdateActive, orderUpdatePayment, token, user._id]",[2841,2880],"[loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",[1503,1505],[1234,1236],[730,732],[1287,1288],[1287,1287],[1303,1304],[1303,1303],[2533,2535],"[loadValues]",[1127,1138],"[dispatch, productId]",[767,769]]