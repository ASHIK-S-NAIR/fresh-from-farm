[{"F:\\mern\\projects\\greenbeans\\client\\src\\index.js":"1","F:\\mern\\projects\\greenbeans\\client\\src\\App.js":"2","F:\\mern\\projects\\greenbeans\\client\\src\\Routes.js":"3","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js":"4","F:\\mern\\projects\\greenbeans\\client\\src\\backend.js":"5","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\index.js":"6","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js":"7","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js":"8","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js":"9","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js":"10","F:\\mern\\projects\\greenbeans\\client\\src\\context\\Context.js":"11","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js":"12","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\AdminRoutes.js":"13","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\CustomerRoutes.js":"14","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\EmployeeRoutes.js":"15","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js":"16","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js":"17","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js":"18","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js":"19","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js":"20","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js":"21","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js":"22","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js":"23","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js":"24","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js":"25","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js":"26","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js":"27","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js":"28","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js":"29","F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js":"30","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js":"31","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js":"32","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js":"33","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js":"34","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js":"35","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js":"36","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js":"37","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js":"38","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js":"39","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js":"40","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js":"41","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js":"42","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js":"43","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js":"44","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js":"45","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js":"46","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js":"47","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js":"48","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js":"49","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js":"50","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js":"51","F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js":"52","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js":"53","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EditProduct.js":"54"},{"size":118,"mtime":1650340897013,"results":"55","hashOfConfig":"56"},{"size":240,"mtime":1650515144846,"results":"57","hashOfConfig":"56"},{"size":4025,"mtime":1656566119043,"results":"58","hashOfConfig":"56"},{"size":20028,"mtime":1656562383272,"results":"59","hashOfConfig":"56"},{"size":49,"mtime":1650587647917,"results":"60","hashOfConfig":"56"},{"size":1491,"mtime":1656045399326,"results":"61","hashOfConfig":"56"},{"size":2480,"mtime":1656604959520,"results":"62","hashOfConfig":"56"},{"size":74,"mtime":1654823535619,"results":"63","hashOfConfig":"56"},{"size":5657,"mtime":1656584999224,"results":"64","hashOfConfig":"56"},{"size":2288,"mtime":1656601759635,"results":"65","hashOfConfig":"56"},{"size":233,"mtime":1656229436706,"results":"66","hashOfConfig":"56"},{"size":4278,"mtime":1656117863379,"results":"67","hashOfConfig":"56"},{"size":356,"mtime":1656060724822,"results":"68","hashOfConfig":"56"},{"size":490,"mtime":1656060536702,"results":"69","hashOfConfig":"56"},{"size":364,"mtime":1656060630163,"results":"70","hashOfConfig":"56"},{"size":1078,"mtime":1651432461264,"results":"71","hashOfConfig":"72"},{"size":3791,"mtime":1656124941765,"results":"73","hashOfConfig":"56"},{"size":4335,"mtime":1655865571670,"results":"74","hashOfConfig":"56"},{"size":4534,"mtime":1655976986896,"results":"75","hashOfConfig":"56"},{"size":5356,"mtime":1653404673405,"results":"76","hashOfConfig":"56"},{"size":5346,"mtime":1655865708719,"results":"77","hashOfConfig":"56"},{"size":5288,"mtime":1655865834594,"results":"78","hashOfConfig":"56"},{"size":16347,"mtime":1656521767193,"results":"79","hashOfConfig":"56"},{"size":8001,"mtime":1656585395029,"results":"80","hashOfConfig":"56"},{"size":3042,"mtime":1656610360078,"results":"81","hashOfConfig":"56"},{"size":4483,"mtime":1656124998316,"results":"82","hashOfConfig":"56"},{"size":3295,"mtime":1656124789401,"results":"83","hashOfConfig":"56"},{"size":8388,"mtime":1653217028786,"results":"84","hashOfConfig":"56"},{"size":913,"mtime":1653185782697,"results":"85","hashOfConfig":"56"},{"size":6318,"mtime":1654757276660,"results":"86","hashOfConfig":"56"},{"size":5803,"mtime":1656201493633,"results":"87","hashOfConfig":"56"},{"size":8987,"mtime":1655830472663,"results":"88","hashOfConfig":"56"},{"size":11454,"mtime":1656556990379,"results":"89","hashOfConfig":"56"},{"size":7911,"mtime":1656598715108,"results":"90","hashOfConfig":"56"},{"size":4896,"mtime":1655900446802,"results":"91","hashOfConfig":"56"},{"size":4266,"mtime":1655804802407,"results":"92","hashOfConfig":"56"},{"size":6015,"mtime":1656511826974,"results":"93","hashOfConfig":"56"},{"size":3979,"mtime":1656502629508,"results":"94","hashOfConfig":"56"},{"size":6969,"mtime":1656558411447,"results":"95","hashOfConfig":"56"},{"size":2020,"mtime":1655030746252,"results":"96","hashOfConfig":"56"},{"size":5259,"mtime":1655254348856,"results":"97","hashOfConfig":"56"},{"size":5158,"mtime":1655268492591,"results":"98","hashOfConfig":"56"},{"size":8525,"mtime":1655834719005,"results":"99","hashOfConfig":"56"},{"size":5845,"mtime":1655856288485,"results":"100","hashOfConfig":"56"},{"size":3476,"mtime":1656028015909,"results":"101","hashOfConfig":"56"},{"size":6581,"mtime":1655834417190,"results":"102","hashOfConfig":"56"},{"size":4272,"mtime":1655804956610,"results":"103","hashOfConfig":"56"},{"size":4272,"mtime":1655804956610,"results":"104","hashOfConfig":"56"},{"size":2733,"mtime":1655812055343,"results":"105","hashOfConfig":"56"},{"size":2715,"mtime":1655814297103,"results":"106","hashOfConfig":"56"},{"size":5089,"mtime":1656060929561,"results":"107","hashOfConfig":"56"},{"size":351,"mtime":1655957674061,"results":"108","hashOfConfig":"56"},{"size":7816,"mtime":1656118388270,"results":"109","hashOfConfig":"56"},{"size":7043,"mtime":1656601832412,"results":"110","hashOfConfig":"56"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1kpwsys",{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lc3eax",{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"114"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"114"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"114"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"114"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"114"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"114"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"114"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\mern\\projects\\greenbeans\\client\\src\\index.js",[],[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\App.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Routes.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js",["295","296"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\backend.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\auth\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js",["297","298"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js",["299","300"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\context\\Context.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js",["301","302","303","304"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\auth\\AdminRoutes.js",["305"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 2)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\CustomerRoutes.js",["306","307","308"],[],"import React, {useContext} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/Context\";\r\nimport {isAuthenticated} from \"./index\";\r\n\r\nconst CustomerRoutes = ({children}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n  const { authActive, setAuthActive } = useContext(AuthContext);\r\n\r\n  if(!(isAuthenticated() && isAuthenticated().user.role === 0)){\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default CustomerRoutes","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\EmployeeRoutes.js",["309"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst EmployeeRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 1)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default EmployeeRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js",["310"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js",["311","312"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport EditPersonalInformation from \"./EditPersonalInformation\";\r\nimport EditAddress from \"./EditAddress\";\r\nimport { getUser } from \"../user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Accounts = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [accountsActive, setAccountsActive] = useState(null);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name, email, phoneNumber, houseName, streetName } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, [accountsActive]);\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <AccountsContext.Provider value={{ accountsActive, setAccountsActive }}>\r\n        <h1 className=\"userBoard-right-header\">Account</h1>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <h2 className=\"userBoard-subHeader\">Personal Information</h2>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editpersonalinformation\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-single-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Email</label>\r\n                  <p className=\"userBoard-right-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Name</label>\r\n                  <p className=\"userBoard-right-value\">{name}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Phone</label>\r\n                  <p className=\"userBoard-right-value\">{phoneNumber}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <div className=\"userBoard-subHeader\">Address</div>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editaddress\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">House Name</label>\r\n                  <p className=\"userBoard-right-value\">{houseName}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Street</label>\r\n                  <p className=\"userBoard-right-value\">{streetName}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {accountsActive === \"editpersonalinformation\" && (\r\n          <EditPersonalInformation />\r\n        )}\r\n        {accountsActive === \"editaddress\" && <EditAddress />}\r\n      </AccountsContext.Provider>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js",["313","314","315"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUserOrders } from \"../user\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport moment from \"moment\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\n\r\nconst Orders = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(null);\r\n  const [order, setOrder] = useState();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const getUserOrderDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUserOrders(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserOrderDetails(userId, token);\r\n  }, []);\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Orders</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <table className=\"userBoard-right-customer-order-table\">\r\n          <thead className=\"userBoard-right-customer-order-table-head-sec\">\r\n            <tr>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Status\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Total\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"userBoard-right-customer-order-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"userBoard-right-customer-order-table-body-tr\"\r\n                  >\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      <div\r\n                        className={`userBoard-right-customer-order-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OemployeeId ? order.OemployeeId : \"Not Assigned\"}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-head-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                      <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js",["316","317"],[],"import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../auth\";\r\nimport { changePassword } from \"../user\";\r\n\r\nconst Settings = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { oldPassword, newPassword, confirmPassword, error, loading, success } =\r\n    values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(oldPassword && newPassword && confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      oldPassword.length < 6 ||\r\n      newPassword.length < 6 ||\r\n      confirmPassword < 6\r\n    ) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    if (!(newPassword === confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Password confirmation does not match\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await changePassword(userId, token, {\r\n        oldPassword,\r\n        newPassword,\r\n      });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      console.log(\"Success\");\r\n      setValues({ ...values, success: true, loading: \"\", error: \"\" });\r\n      logout(() => navigate(\"/\"));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, success: false })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Settings</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <div className=\"userBoard-righ-subsec-small\">\r\n          <div className=\"userBoard-right-subHead\">\r\n            <h2 className=\"userBoard-subHeader\">Change Password</h2>\r\n          </div>\r\n          <div className=\"userBoard-right-subInner\">\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">Old Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"oldPassword\")}\r\n                  value={oldPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"newPassword\")}\r\n                  value={newPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"confirmPassword\")}\r\n                  value={confirmPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className=\"userBoard-right-btn\" onClick={onSubmit}>\r\n              Change\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {error && errorMessage()}\r\n      {success && successMessage()}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js",["318","319","320","321"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst EditPersonalInformation = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n  };\r\n\r\n  const { email, name, phoneNumber, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        name: userDetails.name,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      };\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(name && phoneNumber)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      name === preLoadValues.name &&\r\n      phoneNumber === preLoadValues.phoneNumber\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    if (phoneNumber.length !== 10) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid phone Number\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({ name, phoneNumber }, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      return setAccountsActive(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Personal Information</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={name}\r\n                    onChange={handleChange(\"name\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={phoneNumber}\r\n                    onChange={handleChange(\"phoneNumber\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditPersonalInformation;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js",["322","323","324","325"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst EditAddress = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  };\r\n\r\n  const { email, houseName, streetName, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName\r\n      }\r\n\r\n      return setValues({\r\n        ...values,\r\n        houseName: userDetails.address.houseName,\r\n        email: userDetails.email,\r\n        streetName: userDetails.address.streetName\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(houseName && streetName)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      houseName === preLoadValues.houseName &&\r\n      streetName === preLoadValues.streetName\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    const address = {\r\n      houseName: houseName,\r\n      streetName: streetName\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({address}, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n\r\n      return setAccountsActive(null);\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Address</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n              <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">House Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={houseName}\r\n                    onChange={handleChange(\"houseName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Street Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={streetName}\r\n                    onChange={handleChange(\"streetName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditAddress;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js",["326","327","328","329","330","331"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js",["332","333"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js",["334"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js",["335"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js",["336","337","338"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getUserCart,\r\n  createOrder,\r\n  getUser,\r\n  razorPayOrder,\r\n  paymentVerify,\r\n  updateOrderConfirmation,\r\n} from \"../user\";\r\n\r\nexport const CartPayment = () => {\r\n  const { userId } = useParams();\r\n\r\n  const naviagte = useNavigate();\r\n  const location = useLocation();\r\n  const shippingAddress = location.state;\r\n  const [values, setValues] = useState({\r\n    paymentMode: \"RazorPay\",\r\n    total: 10,\r\n    userDetails: \"\",\r\n  });\r\n\r\n  var cart = [];\r\n  var order = \"\";\r\n\r\n  const { paymentMode, total, userDetails } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const isRadioSelected = (value) => {\r\n    if (paymentMode === value) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const preLoadCart = async (userId, token) => {\r\n    try {\r\n      const data = await getUserCart(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        cart = data.cart;\r\n        console.log(cart);\r\n        var tempTotal = 0;\r\n        cart.map(\r\n          (cartItem) =>\r\n            (tempTotal =\r\n              tempTotal + cartItem.product.pPrice * cartItem.quantity)\r\n        );\r\n        setValues({ ...values, total: tempTotal });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const preLoadUser = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        // return (userDetails = data);\r\n        return setValues({ ...values, userDetails: data });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadCart(userId, token);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    preLoadUser(userId, token);\r\n  }, []);\r\n\r\n  const handleOrder = async (userId, token) => {\r\n    try {\r\n      const data = await createOrder(userId, token, {\r\n        shippingAddress,\r\n        paymentMode,\r\n      });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        order = data.order;\r\n        if (paymentMode === \"RazorPay\") {\r\n          await handlePayment(total);\r\n        } else {\r\n          try {\r\n            const data = await updateOrderConfirmation(userId, token, order._id, {\r\n              Ostatus: \"Ordered\",\r\n            });\r\n            if (data.error) {\r\n              return console.log(data.error);\r\n            } else {\r\n              console.log(data);\r\n              naviagte(`/thankyou/${order._id}`);\r\n            }\r\n          } catch (error) {}\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePayment = async (total) => {\r\n    try {\r\n      const data = await razorPayOrder({ total });\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        console.log(data);\r\n        initPayment(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    const options = {\r\n      key: process.env.RAZORPAY_KEY_SECRET,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      name: \"Fruits and Veggies\",\r\n      order_id: data.id,\r\n      prefill: {\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        contact: userDetails.phoneNumber,\r\n      },\r\n      handler: async (response) => {\r\n        try {\r\n          const data = await paymentVerify({ response, order });\r\n          if (data.error) {\r\n            return console.log(data.error);\r\n          }\r\n          console.log(data);\r\n          naviagte(`/thankyou/${order._id}`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp1 = new window.Razorpay(options);\r\n    rzp1.open();\r\n  };\r\n\r\n  return (\r\n    <section className=\"cardPayment-section\">\r\n      <div className=\"wrap cardPayment-wrap\">\r\n        <div className=\"cardPayment-info-sec\">\r\n          <div className=\"cardPayment-delivery-details-sec\">\r\n            <h2 className=\"cardpayment-delivery-details-header\">\r\n              Delivery Details\r\n            </h2>\r\n            <div className=\"cardPayment-delivery-details\">\r\n              <div className=\"cardPayment-delivery-details-single-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">name</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Email\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">email</p>\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Phone\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                    phoneNumber\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"cardPayment-delivery-details-subheader\">\r\n                Shipping Address\r\n              </h3>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    House Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                    houseName\r\n                  </p>\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Street Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                    streetName\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"cardPayment-payment-details-sec\">\r\n            <h2 className=\"cardPayment-payment-details-header\">Payment Mode</h2>\r\n            <div className=\"cardPayment-payment-details-form\">\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"RazorPay\"\r\n                  value=\"RazorPay\"\r\n                  checked={isRadioSelected(\"RazorPay\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"RazorPay\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Make Payment Online (RazorPay)\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"CashOnDelivery\"\r\n                  value=\"CashOnDelivery\"\r\n                  checked={isRadioSelected(\"CashOnDelivery\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"CashOnDelivery\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Cash On Delivery\r\n                </label>\r\n              </div>\r\n              <button\r\n                className=\"cardPayment-payment-details-btn\"\r\n                onClick={() => handleOrder(userId, token)}\r\n              >\r\n                Make Payment\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js",["339"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { getUser } from \"./index\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.OtotalPrice}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">{order._id}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\"> {order.Ostatus}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OEmployeeId || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {userDetails.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {userDetails.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {userDetails.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js",["340","341"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js",["342","343","344","345"],[],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { getAllOrders } from \"../user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport EmployeeUpdate from \"./EmployeeUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Order = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] =\r\n    useState(\"\");\r\n    const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOrders = async (userId, token, status) => {\r\n    try {\r\n      const data = await getAllOrders(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = async (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handleEmployeeAssign = async (order) => {\r\n    return (\r\n      setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order)\r\n    );\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    loadOrders(user._id, token, status);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-right-section order-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Orders</h1>\r\n      <div className=\"adminDashPanel-right-subsection orders-filter-subSection\">\r\n        <button\r\n          className={`orders-filter-btn ${status === \"all\" ? \"active\" : \"\"}`}\r\n          onClick={() => setStatus(\"all\")}\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Not-Confirmed\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Not-Confirmed\")}\r\n        >\r\n          Not-Confirmed\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Ordered\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Ordered\")}\r\n        >\r\n          Ordered\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Processing\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Processing\")}\r\n        >\r\n          Processing\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Picking-Up\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Picking-Up\")}\r\n        >\r\n          Picking-Up\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Out-For-Delivery\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Out-For-Delivery\")}\r\n        >\r\n          Out-For-Delivery\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Delivered\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Delivered\")}\r\n        >\r\n          Delivered\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Cancelled\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Cancelled\")}\r\n        >\r\n          Cancelled\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Total</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <div\r\n                        className={`adminDashPanel-right-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentStatus === \"Paid\" ? (\r\n                        order.OpaymentStatus\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handlePaymentStatus(order)}\r\n                        >\r\n                          Pending\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OemployeeName ? (\r\n                        order.OemployeeName\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handleEmployeeAssign(order)}\r\n                        >\r\n                          Not Assigned\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && (\r\n        <EmployeeUpdate\r\n          setOrderEmployeeAssignActive={setOrderEmployeeAssignActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js",["346","347","348","349","350"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js",["351","352"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js",["353","354"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteCustomer, getCustomers } from \"../user\";\r\nimport moment from \"moment\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport TrashIcon from \"../icons/Trash.svg\";\r\nimport CustomerDetail from \"./CustomerDetail\";\r\n\r\nconst Customer = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customerDetail, setCustomerDetail] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadCustomers = async (userId, token) => {\r\n    try {\r\n      const data = await getCustomers(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setCustomers(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (customer) => {\r\n    return setCustomerDetail(\"customerDetail\"), setCustomer(customer);\r\n  };\r\n\r\n  const handleDelete = async (customer) => {\r\n    try {\r\n      const data = await deleteCustomer(user._id, token, customer._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return loadCustomers(user._id, token);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCustomers(user._id, token);\r\n  }, []);\r\n\r\n  // console.log(\"Customers\", customers);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section customer-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Customers</h1>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Name</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Customer ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Email</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Phone Number\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Address</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Created At\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {customers &&\r\n              customers.map((customer, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.name}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.email}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.phoneNumber}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.address.houseName}\r\n                      <br />\r\n                      {customer.address.streetName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(customer.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(customer)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(customer)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {customerDetail === \"customerDetail\" && (\r\n        <CustomerDetail\r\n          customer={customer}\r\n          setCustomerDetail={setCustomerDetail}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js",["355"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { adminUpdateOrderStatus } from \"../user\";\r\n\r\nconst OrderUpdate = ({ setOrderUpdateActive, order }) => {\r\n  const [status, setStatus] = useState(order.Ostatus);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOptions = (orderStatus) => {\r\n    if (orderStatus === \"Not-Confirmed\") {\r\n      return (\r\n        <>\r\n          <option value=\"Not-Confirmed\">Not-Confirmed</option>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Ordered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Processing\") {\r\n      return (\r\n        <>\r\n          <option value=\"Processing\">Processing</option>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Picking-Up\") {\r\n      return (\r\n        <>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Out-For-Delivery\") {\r\n      return (\r\n        <>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Delivered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (userId, token, orderId, status) => {\r\n    try {\r\n      const data = adminUpdateOrderStatus(userId, token, orderId, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderUpdateActive(\"\");\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Order Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdateActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n                    {loadOptions(order.Ostatus)}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`popup-form-btn ${\r\n                  status === order.Ostatus ? \"button-unclickable\" : \"\"\r\n                }`}\r\n                onClick={() => handleUpdate(user._id, token, order._id, status)}\r\n              >\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js",["356","357"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js",["358"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\nimport { createEmployee } from \"../user\";\r\n\r\nconst AddEmployee = ({ setAddEmployeeActive }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n        const data = await createEmployee(user._id, token, email)\r\n        if(data.error){\r\n            return console.log(data.error)\r\n        }else{\r\n            return setAddEmployeeActive(null)\r\n        }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"addEmployee-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Add Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAddEmployeeActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <form className=\"popup-form\" encType=\"multipart/form-data\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n              Add Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {error && errorMessage()} */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js",["359","360","361","362","363"],[],"import React, { useState, useEffect } from \"react\";\r\n// import moment from \"moment\";\r\nimport CartIcon from \"../icons/cart.svg\";\r\nimport ProductIcon from \"../icons/product.svg\";\r\nimport EmployerIcon from \"../icons/employer.svg\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getAllDeliveries,\r\n  getCountDeliveries,\r\n  getCountNewDeliveries,\r\n  getEmployeeStatus,\r\n} from \"../user\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Dashboard = () => {\r\n  const [statusValues, setStatusValues] = useState({\r\n    totalDeliveries: \"\",\r\n    NewDeliveries: \"\",\r\n    EmployeeStatus: \"\",\r\n  });\r\n  const [newDeliveries, setNewDeliveires] = useState([]);\r\n  const [order, setOrder] = useState({});\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { totalDeliveries, NewDeliveries, EmployeeStatus } = statusValues;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadStatusValues = async (userId, token) => {\r\n    try {\r\n      const totalDeliveries = await getCountDeliveries(userId, token);\r\n      const NewDeliveries = await getCountNewDeliveries(userId, token);\r\n      const EmployeeStatus = await getEmployeeStatus(userId, token);\r\n\r\n      if (\r\n        totalDeliveries.error ||\r\n        NewDeliveries.error ||\r\n        EmployeeStatus.error\r\n      ) {\r\n        return console.log(\"status update error occured\");\r\n      } else {\r\n        return setStatusValues({\r\n          ...statusValues,\r\n          totalDeliveries: totalDeliveries,\r\n          NewDeliveries: NewDeliveries,\r\n          EmployeeStatus: EmployeeStatus,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadNewDelivery = async (userId, token) => {\r\n    try {\r\n      const data = await getAllDeliveries(userId, token, \"pending\");\r\n      // console.log(\"data\", data);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setNewDeliveires(data.Eorders);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadNewDelivery(user._id, token);\r\n  }, [orderUpdateActive, orderUpdatePayment]);\r\n\r\n  useEffect(() => {\r\n    loadStatusValues(user._id, token);\r\n  }, [orderUpdateActive, orderUpdatePayment]);\r\n\r\n  return (\r\n    <section className=\"employeeBoard-section\">\r\n      <div className=\"-right-subsection dashboard-subSection\">\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-TotalDeliveries\">\r\n          <p className=\"dashboard-status-tag\">Total Deliveries</p>\r\n          <h1 className=\"dashboard-status-value\">{totalDeliveries}</h1>\r\n          <img src={CartIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-DeliveryStatus\">\r\n          <p className=\"dashboard-status-tag\">New Deliveries</p>\r\n          <h1 className=\"dashboard-status-value\">{NewDeliveries}</h1>\r\n          <img src={ProductIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-EmpoyeeStatus\">\r\n          <p className=\"dashboard-status-tag\">My Status</p>\r\n          <h1 className=\"dashboard-status-value\">{EmployeeStatus}</h1>\r\n          <img src={EmployerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n      </div>\r\n\r\n      <h1 className=\"employeeBoard-right-header\">New Delivery</h1>\r\n\r\n      <div className=\"employeeBoard-right-subsection\">\r\n        <table className=\"employeeBoard-right-table\">\r\n          <thead className=\"employeeBoard-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"employeeBoard-right-table-head-value\">Order ID</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Status</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Total</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Address</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"employeeBoard-right-table-body-sec\">\r\n            {newDeliveries &&\r\n              newDeliveries.map((order, index) => {\r\n                return (\r\n                  order.EorderId.Ostatus !== (\"Delivered\" || \"Cancelled\") && (\r\n                    <tr\r\n                      key={index}\r\n                      className=\"employeeBoard-right-table-body-tr \"\r\n                    >\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId._id}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        <div\r\n                          className={`employeeBoard-right-table-body-div ${order.EorderId.Ostatus}`}\r\n                        >\r\n                          {order.EorderId.Ostatus}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OtotalPrice}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentMode}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentStatus === \"Paid\" ? (\r\n                          order.EorderId.OpaymentStatus\r\n                        ) : (\r\n                          <button\r\n                            className=\"adminDashPanel-right-table-body-value-btn\"\r\n                            onClick={() => handlePaymentStatus(order.EorderId)}\r\n                          >\r\n                            Pending\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderAddress.houseName}\r\n                        <br />\r\n                        {order.EorderAddress.streetName}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        <button onClick={() => handlePreview(order)}>\r\n                          <img\r\n                            src={ViewIcon}\r\n                            alt=\"\"\r\n                            className=\"employeeBoard-right-table-icon vie\"\r\n                          />\r\n                        </button>\r\n                        <button onClick={() => handleEdit(order.EorderId)}>\r\n                          <img\r\n                            src={EditIcon}\r\n                            alt=\"\"\r\n                            className=\"employeeBoard-right-table-icon vie\"\r\n                          />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js",["364","365","366","367"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getAllDeliveries } from \"../user\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Deliveries = () => {\r\n  const [deliveries, setDeliveires] = useState([]);\r\n  const [order, setOrder] = useState({});\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadDelivery = async (userId, token) => {\r\n    try {\r\n      const data = await getAllDeliveries(userId, token, \"pending\");\r\n\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeliveires(data.Eorders);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDelivery(user._id, token);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"employeeBoard-section\">\r\n      <h1 className=\"employeeBoard-right-header\">Deliveries</h1>\r\n\r\n      <div className=\"employeeBoard-right-subsection\">\r\n        <table className=\"employeeBoard-right-table\">\r\n          <thead className=\"employeeBoard-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"employeeBoard-right-table-head-value\">Order ID</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Status</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Total</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Address</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"employeeBoard-right-table-body-sec\">\r\n            {deliveries &&\r\n              deliveries.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"employeeBoard-right-table-body-tr \"\r\n                  >\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId._id}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <div\r\n                        className={`employeeBoard-right-table-body-div ${order.EorderId.Ostatus}`}\r\n                      >\r\n                        {order.EorderId.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentStatus === \"Paid\" ? (\r\n                          order.EorderId.OpaymentStatus\r\n                        ) : (\r\n                          <button\r\n                            className=\"adminDashPanel-right-table-body-value-btn\"\r\n                            onClick={() => handlePaymentStatus(order.EorderId)}\r\n                          >\r\n                            Pending\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderAddress.houseName}\r\n                      <br />\r\n                      {order.EorderAddress.streetName}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order.EorderId)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Deliveries;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js",["368"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { addEmployeeOrder, getEmployees } from \"../user\";\r\n\r\nconst EmployeeUpdate = ({ order, setOrderEmployeeAssignActive }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = async (userId, token) => {\r\n    try {\r\n      const data = await getEmployees(userId, token, \"Available\");\r\n      console.log(data);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployees(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeAssign = async (userId, token, orderId, employeeId) => {\r\n    \r\n    try {\r\n      const data = await addEmployeeOrder(userId, token, orderId, employeeId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderEmployeeAssignActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"employeeUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header employeeUpdate-popup-header\">\r\n                Assign Employee\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderEmployeeAssignActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Employee Name</label>\r\n                  <select\r\n                    name=\"employeeName\"\r\n                    id=\"employeeName\"\r\n                    value={employeeId}\r\n                    onChange={(e) => setEmployeeId(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n\r\n                    {employees &&\r\n                      employees.map((employee, index) => {\r\n                        return (\r\n                          <option key={index} value={employee._id}>\r\n                            {employee.Euser.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"popup-form-btn\"\r\n                onClick={() =>\r\n                  handleEmployeeAssign(user._id, token, order._id, employeeId)\r\n                }\r\n              >\r\n                Assign Employee\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EmployeeUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js",["369"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { getUser } from \"../user\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order.EorderId._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.EorderId.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.EorderTotal}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {order.EorderId._id}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ostatus}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OEmployeeName || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {/* {userDetails.name} */}\r\n                      {order.EorderId.Ouser.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js",["370"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js",["371"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { employeeUpdateOrderStatus } from \"../user\";\r\n\r\nconst OrderUpdate = ({ setOrderUpdateActive, order }) => {\r\n  const [status, setStatus] = useState(order.Ostatus);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOptions = (orderStatus) => {\r\n    if (orderStatus === \"Not-Confirmed\") {\r\n      return (\r\n        <>\r\n          <option value=\"Not-Confirmed\">Not-Confirmed</option>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Ordered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Processing\") {\r\n      return (\r\n        <>\r\n          <option value=\"Processing\">Processing</option>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Picking-Up\") {\r\n      return (\r\n        <>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Out-For-Delivery\") {\r\n      return (\r\n        <>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Delivered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (userId, token, orderId, status) => {\r\n    try {\r\n      const data = employeeUpdateOrderStatus(userId, token, orderId, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderUpdateActive(\"\");\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Order Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdateActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n                    {loadOptions(order.Ostatus)}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`popup-form-btn ${\r\n                  status === order.Ostatus ? \"button-unclickable\" : \"\"\r\n                }`}\r\n                onClick={() => handleUpdate(user._id, token, order._id, status)}\r\n              >\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js",["372"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { employeeUpdatePaymentStatus } from \"../user\";\r\n\r\nconst PaymentStatusUpdate = ({ setOrderUpdatePayment, order }) => {\r\n  const [status, setStatus] = useState(order.OpaymentStatus);\r\n  \r\n  const {user, token} = isAuthenticated();\r\n\r\nconst handleUpdate = (userId, token, orderId, status) => {\r\n  try {\r\n    const data = employeeUpdatePaymentStatus(userId, token, orderId, status);\r\n    if(data.error){\r\n      return console.log(data.error)\r\n    }else{\r\n      return setOrderUpdatePayment(\"\");\r\n    }\r\n  } catch (error) {\r\n    return console.log(error)\r\n  }\r\n}\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Payment Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdatePayment(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className= \"popup-form-value\"\r\n                  >\r\n                    <option value=\"Pending\">Pending</option>\r\n                    <option value=\"Paid\">Paid</option>\r\n                    \r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button className={`popup-form-btn ${\r\n                  status === order.OpaymentStatus ? \"button-unclickable\" : \"\"\r\n                }`} onClick={() =>  handleUpdate(user._id, token, order._id, status)}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PaymentStatusUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js",["373"],[],"import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\nconst ScrollToTop = ({ children }) => {\r\n  const location = useLocation();\r\n  useLayoutEffect(() => {\r\n    document.documentElement.scrollTo(0, 0);\r\n  }, [location.pathname]);\r\n  return children;\r\n};\r\n\r\nexport default ScrollToTop;","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js",["374","375","376","377"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EditProduct.js",["378","379"],[],{"ruleId":"380","severity":1,"message":"381","line":15,"column":17,"nodeType":"382","messageId":"383","endLine":15,"endColumn":24},{"ruleId":"380","severity":1,"message":"384","line":19,"column":17,"nodeType":"382","messageId":"383","endLine":19,"endColumn":22},{"ruleId":"380","severity":1,"message":"385","line":1,"column":9,"nodeType":"382","messageId":"383","endLine":1,"endColumn":12},{"ruleId":"380","severity":1,"message":"386","line":2,"column":7,"nodeType":"382","messageId":"383","endLine":2,"endColumn":12},{"ruleId":"387","severity":1,"message":"388","line":73,"column":6,"nodeType":"389","endLine":73,"endColumn":8,"suggestions":"390"},{"ruleId":"387","severity":1,"message":"388","line":77,"column":6,"nodeType":"389","endLine":77,"endColumn":8,"suggestions":"391"},{"ruleId":"380","severity":1,"message":"392","line":14,"column":35,"nodeType":"382","messageId":"383","endLine":14,"endColumn":42},{"ruleId":"380","severity":1,"message":"393","line":14,"column":44,"nodeType":"382","messageId":"383","endLine":14,"endColumn":51},{"ruleId":"394","severity":1,"message":"395","line":37,"column":17,"nodeType":"396","messageId":"397","endLine":37,"endColumn":18,"suggestions":"398"},{"ruleId":"394","severity":1,"message":"395","line":37,"column":33,"nodeType":"396","messageId":"397","endLine":37,"endColumn":34,"suggestions":"399"},{"ruleId":"380","severity":1,"message":"400","line":1,"column":8,"nodeType":"382","messageId":"383","endLine":1,"endColumn":13},{"ruleId":"380","severity":1,"message":"400","line":1,"column":8,"nodeType":"382","messageId":"383","endLine":1,"endColumn":13},{"ruleId":"380","severity":1,"message":"401","line":11,"column":11,"nodeType":"382","messageId":"383","endLine":11,"endColumn":21},{"ruleId":"380","severity":1,"message":"402","line":11,"column":23,"nodeType":"382","messageId":"383","endLine":11,"endColumn":36},{"ruleId":"380","severity":1,"message":"400","line":1,"column":8,"nodeType":"382","messageId":"383","endLine":1,"endColumn":13},{"ruleId":"387","severity":1,"message":"403","line":44,"column":6,"nodeType":"389","endLine":44,"endColumn":18,"suggestions":"404"},{"ruleId":"380","severity":1,"message":"405","line":24,"column":11,"nodeType":"382","messageId":"383","endLine":24,"endColumn":15},{"ruleId":"387","severity":1,"message":"403","line":45,"column":6,"nodeType":"389","endLine":45,"endColumn":22,"suggestions":"406"},{"ruleId":"380","severity":1,"message":"405","line":16,"column":11,"nodeType":"382","messageId":"383","endLine":16,"endColumn":15},{"ruleId":"387","severity":1,"message":"407","line":31,"column":6,"nodeType":"389","endLine":31,"endColumn":8,"suggestions":"408"},{"ruleId":"409","severity":1,"message":"410","line":34,"column":42,"nodeType":"411","messageId":"412","endLine":34,"endColumn":43},{"ruleId":"380","severity":1,"message":"405","line":9,"column":11,"nodeType":"382","messageId":"383","endLine":9,"endColumn":15},{"ruleId":"380","severity":1,"message":"392","line":22,"column":61,"nodeType":"382","messageId":"383","endLine":22,"endColumn":68},{"ruleId":"380","severity":1,"message":"392","line":27,"column":44,"nodeType":"382","messageId":"383","endLine":27,"endColumn":51},{"ruleId":"380","severity":1,"message":"393","line":27,"column":53,"nodeType":"382","messageId":"383","endLine":27,"endColumn":60},{"ruleId":"380","severity":1,"message":"405","line":29,"column":11,"nodeType":"382","messageId":"383","endLine":29,"endColumn":15},{"ruleId":"387","severity":1,"message":"403","line":53,"column":6,"nodeType":"389","endLine":53,"endColumn":8,"suggestions":"413"},{"ruleId":"380","severity":1,"message":"392","line":27,"column":48,"nodeType":"382","messageId":"383","endLine":27,"endColumn":55},{"ruleId":"380","severity":1,"message":"393","line":27,"column":57,"nodeType":"382","messageId":"383","endLine":27,"endColumn":64},{"ruleId":"380","severity":1,"message":"405","line":29,"column":11,"nodeType":"382","messageId":"383","endLine":29,"endColumn":15},{"ruleId":"387","severity":1,"message":"403","line":53,"column":6,"nodeType":"389","endLine":53,"endColumn":8,"suggestions":"414"},{"ruleId":"380","severity":1,"message":"415","line":24,"column":10,"nodeType":"382","messageId":"383","endLine":24,"endColumn":24},{"ruleId":"380","severity":1,"message":"416","line":24,"column":26,"nodeType":"382","messageId":"383","endLine":24,"endColumn":43},{"ruleId":"380","severity":1,"message":"405","line":28,"column":11,"nodeType":"382","messageId":"383","endLine":28,"endColumn":15},{"ruleId":"387","severity":1,"message":"417","line":52,"column":6,"nodeType":"389","endLine":52,"endColumn":8,"suggestions":"418"},{"ruleId":"387","severity":1,"message":"419","line":65,"column":6,"nodeType":"389","endLine":65,"endColumn":12,"suggestions":"420"},{"ruleId":"387","severity":1,"message":"421","line":83,"column":6,"nodeType":"389","endLine":83,"endColumn":8,"suggestions":"422"},{"ruleId":"387","severity":1,"message":"423","line":45,"column":6,"nodeType":"389","endLine":45,"endColumn":8,"suggestions":"424"},{"ruleId":"387","severity":1,"message":"425","line":49,"column":6,"nodeType":"389","endLine":49,"endColumn":16,"suggestions":"426"},{"ruleId":"387","severity":1,"message":"403","line":45,"column":6,"nodeType":"389","endLine":45,"endColumn":18,"suggestions":"427"},{"ruleId":"387","severity":1,"message":"403","line":43,"column":6,"nodeType":"389","endLine":43,"endColumn":18,"suggestions":"428"},{"ruleId":"380","severity":1,"message":"405","line":30,"column":11,"nodeType":"382","messageId":"383","endLine":30,"endColumn":15},{"ruleId":"387","severity":1,"message":"421","line":77,"column":6,"nodeType":"389","endLine":77,"endColumn":8,"suggestions":"429"},{"ruleId":"387","severity":1,"message":"430","line":81,"column":6,"nodeType":"389","endLine":81,"endColumn":8,"suggestions":"431"},{"ruleId":"387","severity":1,"message":"432","line":25,"column":6,"nodeType":"389","endLine":25,"endColumn":8,"suggestions":"433"},{"ruleId":"380","severity":1,"message":"434","line":24,"column":10,"nodeType":"382","messageId":"383","endLine":24,"endColumn":14},{"ruleId":"387","severity":1,"message":"407","line":44,"column":6,"nodeType":"389","endLine":44,"endColumn":18,"suggestions":"435"},{"ruleId":"409","severity":1,"message":"410","line":38,"column":42,"nodeType":"411","messageId":"412","endLine":38,"endColumn":43},{"ruleId":"409","severity":1,"message":"410","line":42,"column":53,"nodeType":"411","messageId":"412","endLine":42,"endColumn":54},{"ruleId":"409","severity":1,"message":"410","line":52,"column":55,"nodeType":"411","messageId":"412","endLine":52,"endColumn":56},{"ruleId":"387","severity":1,"message":"432","line":58,"column":6,"nodeType":"389","endLine":58,"endColumn":73,"suggestions":"436"},{"ruleId":"409","severity":1,"message":"410","line":84,"column":42,"nodeType":"411","messageId":"412","endLine":84,"endColumn":43},{"ruleId":"409","severity":1,"message":"410","line":88,"column":53,"nodeType":"411","messageId":"412","endLine":88,"endColumn":54},{"ruleId":"409","severity":1,"message":"410","line":98,"column":55,"nodeType":"411","messageId":"412","endLine":98,"endColumn":56},{"ruleId":"387","severity":1,"message":"437","line":103,"column":6,"nodeType":"389","endLine":103,"endColumn":65,"suggestions":"438"},{"ruleId":"387","severity":1,"message":"432","line":107,"column":6,"nodeType":"389","endLine":107,"endColumn":65,"suggestions":"439"},{"ruleId":"409","severity":1,"message":"410","line":41,"column":45,"nodeType":"411","messageId":"412","endLine":41,"endColumn":46},{"ruleId":"409","severity":1,"message":"410","line":44,"column":47,"nodeType":"411","messageId":"412","endLine":44,"endColumn":48},{"ruleId":"409","severity":1,"message":"410","line":30,"column":47,"nodeType":"411","messageId":"412","endLine":30,"endColumn":48},{"ruleId":"387","severity":1,"message":"432","line":48,"column":6,"nodeType":"389","endLine":48,"endColumn":8,"suggestions":"440"},{"ruleId":"380","severity":1,"message":"441","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"409","severity":1,"message":"410","line":34,"column":47,"nodeType":"411","messageId":"412","endLine":34,"endColumn":48},{"ruleId":"387","severity":1,"message":"432","line":52,"column":6,"nodeType":"389","endLine":52,"endColumn":33,"suggestions":"442"},{"ruleId":"380","severity":1,"message":"441","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"409","severity":1,"message":"410","line":75,"column":42,"nodeType":"411","messageId":"412","endLine":75,"endColumn":43},{"ruleId":"409","severity":1,"message":"410","line":79,"column":53,"nodeType":"411","messageId":"412","endLine":79,"endColumn":54},{"ruleId":"409","severity":1,"message":"410","line":83,"column":55,"nodeType":"411","messageId":"412","endLine":83,"endColumn":56},{"ruleId":"387","severity":1,"message":"432","line":88,"column":6,"nodeType":"389","endLine":88,"endColumn":45,"suggestions":"443"},{"ruleId":"387","severity":1,"message":"437","line":92,"column":6,"nodeType":"389","endLine":92,"endColumn":45,"suggestions":"444"},{"ruleId":"409","severity":1,"message":"410","line":34,"column":42,"nodeType":"411","messageId":"412","endLine":34,"endColumn":43},{"ruleId":"409","severity":1,"message":"410","line":38,"column":53,"nodeType":"411","messageId":"412","endLine":38,"endColumn":54},{"ruleId":"409","severity":1,"message":"410","line":42,"column":55,"nodeType":"411","messageId":"412","endLine":42,"endColumn":56},{"ruleId":"387","severity":1,"message":"432","line":47,"column":6,"nodeType":"389","endLine":47,"endColumn":8,"suggestions":"445"},{"ruleId":"387","severity":1,"message":"432","line":42,"column":6,"nodeType":"389","endLine":42,"endColumn":8,"suggestions":"446"},{"ruleId":"387","severity":1,"message":"432","line":25,"column":6,"nodeType":"389","endLine":25,"endColumn":8,"suggestions":"447"},{"ruleId":"380","severity":1,"message":"441","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"380","severity":1,"message":"441","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"380","severity":1,"message":"441","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"380","severity":1,"message":"400","line":1,"column":8,"nodeType":"382","messageId":"383","endLine":1,"endColumn":13},{"ruleId":"380","severity":1,"message":"392","line":28,"column":5,"nodeType":"382","messageId":"383","endLine":28,"endColumn":12},{"ruleId":"380","severity":1,"message":"393","line":29,"column":5,"nodeType":"382","messageId":"383","endLine":29,"endColumn":12},{"ruleId":"394","severity":1,"message":"395","line":62,"column":17,"nodeType":"396","messageId":"397","endLine":62,"endColumn":18,"suggestions":"448"},{"ruleId":"394","severity":1,"message":"395","line":62,"column":33,"nodeType":"396","messageId":"397","endLine":62,"endColumn":34,"suggestions":"449"},{"ruleId":"380","severity":1,"message":"385","line":3,"column":10,"nodeType":"382","messageId":"383","endLine":3,"endColumn":13},{"ruleId":"387","severity":1,"message":"450","line":99,"column":6,"nodeType":"389","endLine":99,"endColumn":8,"suggestions":"451"},"no-unused-vars","'setCart' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'API' is defined but never used.","'axios' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.","ArrayExpression",["452"],["453"],"'loading' is assigned a value but never used.","'success' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["454","455"],["456","457"],"'React' is defined but never used.","'authActive' is assigned a value but never used.","'setAuthActive' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'preLoad', 'token', and 'userId'. Either include them or remove the dependency array.",["458"],"'user' is assigned a value but never used.",["459"],"React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["460"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["461"],["462"],"'productDetails' is assigned a value but never used.","'setProductDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'preLoadShippingAddress', 'token', and 'userId'. Either include them or remove the dependency array.",["463"],"React Hook useEffect has a missing dependency: 'loadSubTotal_value'. Either include it or remove the dependency array.",["464"],"React Hook useEffect has missing dependencies: 'preLoadCart', 'token', and 'userId'. Either include them or remove the dependency array.",["465"],"React Hook useEffect has missing dependencies: 'cartItemProductId' and 'getProductDetails'. Either include them or remove the dependency array.",["466"],"React Hook useEffect has missing dependencies: 'product._id' and 'updateQuantity'. Either include them or remove the dependency array. If 'updateQuantity' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["467"],["468"],["469"],["470"],"React Hook useEffect has missing dependencies: 'preLoadUser', 'token', and 'userId'. Either include them or remove the dependency array.",["471"],"React Hook useEffect has missing dependencies: 'token' and 'user._id'. Either include them or remove the dependency array.",["472"],"'name' is assigned a value but never used.",["473"],["474"],"React Hook useEffect has missing dependencies: 'loadStatusValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["475"],["476"],["477"],"'useEffect' is defined but never used.",["478"],["479"],["480"],["481"],["482"],["483"],["484","485"],["486","487"],"React Hook useEffect has a missing dependency: 'loadValues'. Either include it or remove the dependency array.",["488"],{"desc":"489","fix":"490"},{"desc":"489","fix":"491"},{"messageId":"492","fix":"493","desc":"494"},{"messageId":"495","fix":"496","desc":"497"},{"messageId":"492","fix":"498","desc":"494"},{"messageId":"495","fix":"499","desc":"497"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"506","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"500","fix":"519"},{"desc":"500","fix":"520"},{"desc":"513","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"524","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"524","fix":"541"},{"desc":"524","fix":"542"},{"desc":"524","fix":"543"},{"messageId":"492","fix":"544","desc":"494"},{"messageId":"495","fix":"545","desc":"497"},{"messageId":"492","fix":"546","desc":"494"},{"messageId":"495","fix":"547","desc":"497"},{"desc":"548","fix":"549"},"Update the dependencies array to be: [productId]",{"range":"550","text":"551"},{"range":"552","text":"551"},"removeEscape",{"range":"553","text":"554"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"555","text":"556"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"557","text":"554"},{"range":"558","text":"556"},"Update the dependencies array to be: [currentTab, preLoad, token, userId]",{"range":"559","text":"560"},"Update the dependencies array to be: [accountsActive, preLoad, token, userId]",{"range":"561","text":"562"},"Update the dependencies array to be: [token, userId]",{"range":"563","text":"564"},"Update the dependencies array to be: [preLoad, token, userId]",{"range":"565","text":"566"},{"range":"567","text":"566"},"Update the dependencies array to be: [preLoadShippingAddress, token, userId]",{"range":"568","text":"569"},"Update the dependencies array to be: [cart, loadSubTotal_value]",{"range":"570","text":"571"},"Update the dependencies array to be: [preLoadCart, token, userId]",{"range":"572","text":"573"},"Update the dependencies array to be: [cartItemProductId, getProductDetails]",{"range":"574","text":"575"},"Update the dependencies array to be: [product._id, quantity, updateQuantity]",{"range":"576","text":"577"},{"range":"578","text":"560"},{"range":"579","text":"560"},{"range":"580","text":"573"},"Update the dependencies array to be: [preLoadUser, token, userId]",{"range":"581","text":"582"},"Update the dependencies array to be: [token, user._id]",{"range":"583","text":"584"},"Update the dependencies array to be: [currentTab, token, userId]",{"range":"585","text":"586"},"Update the dependencies array to be: [orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",{"range":"587","text":"588"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",{"range":"589","text":"590"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",{"range":"591","text":"592"},{"range":"593","text":"584"},"Update the dependencies array to be: [status, addEmployeeActive, user._id, token]",{"range":"594","text":"595"},"Update the dependencies array to be: [orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"596","text":"597"},"Update the dependencies array to be: [loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"598","text":"599"},{"range":"600","text":"584"},{"range":"601","text":"584"},{"range":"602","text":"584"},{"range":"603","text":"554"},{"range":"604","text":"556"},{"range":"605","text":"554"},{"range":"606","text":"556"},"Update the dependencies array to be: [loadValues]",{"range":"607","text":"608"},[1994,1996],"[productId]",[2058,2060],[902,903],"",[902,902],"\\",[918,919],[918,918],[1232,1244],"[currentTab, preLoad, token, userId]",[1292,1308],"[accountsActive, preLoad, token, userId]",[913,915],"[token, userId]",[1327,1329],"[preLoad, token, userId]",[1372,1374],[1619,1621],"[preLoadShippingAddress, token, userId]",[1908,1914],"[cart, loadSubTotal_value]",[2314,2316],"[preLoadCart, token, userId]",[1117,1119],"[cartItemProductId, getProductDetails]",[1195,1205],"[product._id, quantity, updateQuantity]",[1298,1310],[1197,1209],[1877,1879],[1944,1946],"[preLoadUser, token, userId]",[719,721],"[token, user._id]",[1573,1585],"[currentTab, token, userId]",[1864,1931],"[orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",[3254,3313],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",[3386,3445],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",[1401,1403],[1629,1656],"[status, addEmployeeActive, user._id, token]",[2769,2808],"[orderUpdateActive, orderUpdatePayment, token, user._id]",[2880,2919],"[loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",[1491,1493],[1229,1231],[719,721],[1281,1282],[1281,1281],[1297,1298],[1297,1297],[2602,2604],"[loadValues]"]