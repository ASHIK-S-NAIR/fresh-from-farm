[{"F:\\mern\\projects\\greenbeans\\client\\src\\index.js":"1","F:\\mern\\projects\\greenbeans\\client\\src\\App.js":"2","F:\\mern\\projects\\greenbeans\\client\\src\\Routes.js":"3","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js":"4","F:\\mern\\projects\\greenbeans\\client\\src\\backend.js":"5","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\index.js":"6","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js":"7","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js":"8","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js":"9","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js":"10","F:\\mern\\projects\\greenbeans\\client\\src\\context\\Context.js":"11","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js":"12","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\AdminRoutes.js":"13","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\CustomerRoutes.js":"14","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\EmployeeRoutes.js":"15","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js":"16","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js":"17","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js":"18","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js":"19","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js":"20","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js":"21","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js":"22","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js":"23","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js":"24","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js":"25","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js":"26","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js":"27","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js":"28","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js":"29","F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js":"30","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js":"31","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js":"32","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js":"33","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js":"34","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js":"35","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js":"36","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js":"37","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js":"38","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js":"39","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js":"40","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js":"41","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js":"42","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js":"43","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js":"44","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js":"45","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js":"46","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js":"47","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js":"48","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js":"49","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js":"50","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js":"51","F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js":"52","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js":"53","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EditProduct.js":"54","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteProduct.js":"55","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteEmployee.js":"56","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteCustomer.js":"57","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\BarChart.js":"58","F:\\mern\\projects\\greenbeans\\client\\src\\core\\data.js":"59","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\LineChart.js":"60","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\PieChart.js":"61"},{"size":118,"mtime":1650340897013,"results":"62","hashOfConfig":"63"},{"size":240,"mtime":1650515144846,"results":"64","hashOfConfig":"63"},{"size":4025,"mtime":1656566119043,"results":"65","hashOfConfig":"63"},{"size":20028,"mtime":1656562383272,"results":"66","hashOfConfig":"63"},{"size":49,"mtime":1650587647917,"results":"67","hashOfConfig":"63"},{"size":1491,"mtime":1656045399326,"results":"68","hashOfConfig":"63"},{"size":2480,"mtime":1656604959520,"results":"69","hashOfConfig":"63"},{"size":74,"mtime":1654823535619,"results":"70","hashOfConfig":"63"},{"size":5657,"mtime":1656584999224,"results":"71","hashOfConfig":"63"},{"size":2288,"mtime":1656601759635,"results":"72","hashOfConfig":"63"},{"size":233,"mtime":1656229436706,"results":"73","hashOfConfig":"63"},{"size":4278,"mtime":1656117863379,"results":"74","hashOfConfig":"63"},{"size":356,"mtime":1656060724822,"results":"75","hashOfConfig":"63"},{"size":490,"mtime":1656060536702,"results":"76","hashOfConfig":"63"},{"size":364,"mtime":1656060630163,"results":"77","hashOfConfig":"63"},{"size":1078,"mtime":1651432461264,"results":"78","hashOfConfig":"79"},{"size":3791,"mtime":1656124941765,"results":"80","hashOfConfig":"63"},{"size":4335,"mtime":1655865571670,"results":"81","hashOfConfig":"63"},{"size":4534,"mtime":1655976986896,"results":"82","hashOfConfig":"63"},{"size":5356,"mtime":1653404673405,"results":"83","hashOfConfig":"63"},{"size":5346,"mtime":1655865708719,"results":"84","hashOfConfig":"63"},{"size":5288,"mtime":1655865834594,"results":"85","hashOfConfig":"63"},{"size":16347,"mtime":1656521767193,"results":"86","hashOfConfig":"63"},{"size":8001,"mtime":1656585395029,"results":"87","hashOfConfig":"63"},{"size":3042,"mtime":1656610360078,"results":"88","hashOfConfig":"63"},{"size":4483,"mtime":1656124998316,"results":"89","hashOfConfig":"63"},{"size":3295,"mtime":1656124789401,"results":"90","hashOfConfig":"63"},{"size":8388,"mtime":1653217028786,"results":"91","hashOfConfig":"63"},{"size":913,"mtime":1653185782697,"results":"92","hashOfConfig":"63"},{"size":6318,"mtime":1657013897535,"results":"93","hashOfConfig":"63"},{"size":5803,"mtime":1656201493633,"results":"94","hashOfConfig":"63"},{"size":9675,"mtime":1657013940485,"results":"95","hashOfConfig":"63"},{"size":14925,"mtime":1657523416546,"results":"96","hashOfConfig":"63"},{"size":9209,"mtime":1657531269855,"results":"97","hashOfConfig":"63"},{"size":5002,"mtime":1657028949395,"results":"98","hashOfConfig":"63"},{"size":4266,"mtime":1655804802407,"results":"99","hashOfConfig":"63"},{"size":6015,"mtime":1656511826974,"results":"100","hashOfConfig":"63"},{"size":3979,"mtime":1656502629508,"results":"101","hashOfConfig":"63"},{"size":7768,"mtime":1657018534907,"results":"102","hashOfConfig":"63"},{"size":2020,"mtime":1655030746252,"results":"103","hashOfConfig":"63"},{"size":5259,"mtime":1655254348856,"results":"104","hashOfConfig":"63"},{"size":5158,"mtime":1655268492591,"results":"105","hashOfConfig":"63"},{"size":11515,"mtime":1657524505626,"results":"106","hashOfConfig":"63"},{"size":5841,"mtime":1657013631713,"results":"107","hashOfConfig":"63"},{"size":3625,"mtime":1656930849187,"results":"108","hashOfConfig":"63"},{"size":6581,"mtime":1655834417190,"results":"109","hashOfConfig":"63"},{"size":4272,"mtime":1655804956610,"results":"110","hashOfConfig":"63"},{"size":4261,"mtime":1656997893019,"results":"111","hashOfConfig":"63"},{"size":2733,"mtime":1655812055343,"results":"112","hashOfConfig":"63"},{"size":2773,"mtime":1656930732027,"results":"113","hashOfConfig":"63"},{"size":5089,"mtime":1656060929561,"results":"114","hashOfConfig":"63"},{"size":351,"mtime":1655957674061,"results":"115","hashOfConfig":"63"},{"size":7816,"mtime":1656118388270,"results":"116","hashOfConfig":"63"},{"size":6813,"mtime":1657017645257,"results":"117","hashOfConfig":"63"},{"size":2874,"mtime":1657017275687,"results":"118","hashOfConfig":"63"},{"size":2865,"mtime":1657018923131,"results":"119","hashOfConfig":"63"},{"size":2862,"mtime":1657029115794,"results":"120","hashOfConfig":"63"},{"size":206,"mtime":1657035303203,"results":"121","hashOfConfig":"63"},{"size":501,"mtime":1657034562427,"results":"122","hashOfConfig":"63"},{"size":210,"mtime":1657036502587,"results":"123","hashOfConfig":"63"},{"size":206,"mtime":1657036687155,"results":"124","hashOfConfig":"63"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1kpwsys",{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lc3eax",{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"128"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"128"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"128"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"128"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"128"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},"F:\\mern\\projects\\greenbeans\\client\\src\\index.js",[],[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\App.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Routes.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js",["346","347"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../auth/index\";\r\nimport { CartContext } from \"../context/Context\";\r\nimport CartIcon from \"../icons/cart.svg\";\r\nimport { getEmployeeStatus, updateEmployeeStatus } from \"../user/index\";\r\n\r\nconst Nav = () => {\r\n  const [active, setActive] = useState(false);\r\n  const [toggled, setToggled] = useState(false);\r\n  // const [cartCount, setCartCount] = useState();\r\n\r\n  const [employeeStatus, setEmployeeStatus] = useState();\r\n\r\n  const { cart, setCart } = useContext(CartContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const showDropDown = () => {\r\n    setActive(true);\r\n  };\r\n\r\n  const hideDropDown = () => {\r\n    setActive(false);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setToggled(!toggled);\r\n  };\r\n\r\n  const loadEmployeeStatus = async () => {\r\n    try {\r\n      const data = await getEmployeeStatus(\r\n        isAuthenticated().user._id,\r\n        isAuthenticated().token\r\n      );\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployeeStatus(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeStatus = async (employeeUserId, token, Estatus) => {\r\n    try {\r\n      const data = await updateEmployeeStatus(employeeUserId, token, Estatus);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return loadEmployeeStatus();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated() && isAuthenticated().user.role === 1) {\r\n      loadEmployeeStatus(isAuthenticated().user._id, isAuthenticated().token);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"nav-section\">\r\n      <div className=\"wrap nav-wrap\">\r\n        <div className=\"nav-left-sec\">\r\n          <ul className=\"nav-ul\">\r\n            <li className=\"nav-li\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Shop\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-li\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Contact Us\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"nav-logo-sec\">\r\n          <Link className=\"nav-logo\" to=\"/\">\r\n            fresh from farm\r\n          </Link>\r\n        </div>\r\n        <div className=\"nav-right-sec\">\r\n          {!isAuthenticated() && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <Link to=\"/signup\">\r\n                  <button className=\"nav-btn\">Sign Up</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-li\">\r\n                <Link to=\"/login\">\r\n                  <button className=\"nav-btn\">Log In</button>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <Link to={`/cart/${user._id}`}>\r\n                  <div className=\"nav-cart-icon-sec\">\r\n                    <div className=\"nav-cart-icon-value\">{cart.length}</div>\r\n                    <img src={CartIcon} alt=\"\" className=\"nav-cart-icon\" />\r\n                  </div>\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className=\"nav-li nav-border\"\r\n                onMouseOver={showDropDown}\r\n                onMouseLeave={hideDropDown}\r\n              >\r\n                <button className=\"nav-btn\">\r\n                  {isAuthenticated().user.name.length > 6\r\n                    ? isAuthenticated().user.name.substring(0, 6)\r\n                    : isAuthenticated().user.name}\r\n                </button>\r\n                {active && (\r\n                  <ul className=\"nav-drop-ul\" onMouseOver={showDropDown}>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/customerboard/orders/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">My Orders</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/customerboard/accounts/${user._id}`}>\r\n                        {\" \"}\r\n                        <div className=\"nav-drop-li-div\">My Account</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/customerboard/settings/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">My Settings</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() => {\r\n                          logout(() => navigate(\"/\"));\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n            <ul className=\"nav-ul\">\r\n              <li\r\n                className=\"nav-li nav-border\"\r\n                onMouseOver={showDropDown}\r\n                onMouseLeave={hideDropDown}\r\n              >\r\n                <button className=\"nav-btn\">\r\n                  {isAuthenticated().user.name.length > 6\r\n                    ? isAuthenticated().user.name.substring(0, 6)\r\n                    : isAuthenticated().user.name}\r\n                </button>\r\n                {active && (\r\n                  <ul className=\"nav-drop-ul\" onMouseOver={showDropDown}>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/dashboard/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Dashboard</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/deliveries/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Deliveries</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/accounts/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Account</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/settings/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Settings</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      {employeeStatus === \"Available\" && (\r\n                        <button\r\n                          className=\"nav-drop-btn\"\r\n                          onClick={() =>\r\n                            handleEmployeeStatus(\r\n                              isAuthenticated().user._id,\r\n                              isAuthenticated().token,\r\n                              \"NotAvailable\"\r\n                            )\r\n                          }\r\n                        >\r\n                          Make Not Available\r\n                        </button>\r\n                      )}\r\n                      {employeeStatus === \"NotAvailable\" && (\r\n                        <button\r\n                          className=\"nav-drop-btn\"\r\n                          onClick={() =>\r\n                            handleEmployeeStatus(\r\n                              isAuthenticated().user._id,\r\n                              isAuthenticated().token,\r\n                              \"Available\"\r\n                            )\r\n                          }\r\n                        >\r\n                          Make Available\r\n                        </button>\r\n                      )}\r\n                      {employeeStatus === \"OnDuty\" && (\r\n                        <button className=\"nav-drop-btn button-unclickable\">\r\n                          On Duty\r\n                        </button>\r\n                      )}\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() => {\r\n                          logout(() => navigate(\"/\"));\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 2 && (\r\n            <ul className=\"nav-ul\">\r\n              <li\r\n                className=\"nav-li nav-border\"\r\n                onMouseOver={showDropDown}\r\n                onMouseLeave={hideDropDown}\r\n              >\r\n                <button className=\"nav-btn\">\r\n                  {isAuthenticated().user.name.length > 6\r\n                    ? isAuthenticated().user.name.substring(0, 6)\r\n                    : isAuthenticated().user.name}\r\n                </button>\r\n                {active && (\r\n                  <ul className=\"nav-drop-ul\" onMouseOver={showDropDown}>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/admindashpanel/dashboard/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Admin Panel</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/adminboard/accounts/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Account</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/adminboard/settings/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Settings</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() => {\r\n                          logout(() => navigate(\"/\"));\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* nav-mobile section starts */}\r\n\r\n      <div className=\"wrap nav-wrap-mobile\">\r\n        <Link className=\"nav-logo\" to=\"/\">\r\n          fresh from farm\r\n        </Link>\r\n        <div className=\"nav-right-sec-mobile\">\r\n          {!isAuthenticated() && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <Link to=\"/signup\">\r\n                  <button className=\"nav-btn\">Sign Up</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-li nav-border\">\r\n                <Link to=\"/login\">\r\n                  <button className=\"nav-btn\">Log In</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n          {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/cart/${user._id}`}>\r\n                      <button className=\"nav-btn\">Cart</button>\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/customerboard/orders/${user._id}`}>\r\n                      {\" \"}\r\n                      My Orders\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/customerboard/accounts/${user._id}`}>\r\n                      {\" \"}\r\n                      My Account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/customerboard/settings/${user._id}`}>\r\n                      {\" \"}\r\n                      My Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <button\r\n                      className=\"nav-drop-btn\"\r\n                      onClick={() => {\r\n                        logout(() => navigate(\"/\"));\r\n                        toggle();\r\n                      }}\r\n                    >\r\n                      Log Out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/employeeboard/dashboard/${user._id}`}>\r\n                      {\" \"}\r\n                      Dashboard\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    {\" \"}\r\n                    <Link to={`/employeeboard/deliveries/${user._id}`}>\r\n                      {\" \"}\r\n                      Deliveries\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/employeeboard/accounts/${user._id}`}>\r\n                      {\" \"}\r\n                      Account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/employeeboard/settings/${user._id}`}>\r\n                      {\" \"}\r\n                      Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    {employeeStatus === \"Available\" && (\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() =>\r\n                          handleEmployeeStatus(\r\n                            isAuthenticated().user._id,\r\n                            isAuthenticated().token,\r\n                            \"NotAvailable\"\r\n                          )\r\n                        }\r\n                      >\r\n                        Make Not Available\r\n                      </button>\r\n                    )}\r\n                    {employeeStatus === \"NotAvailable\" && (\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() =>\r\n                          handleEmployeeStatus(\r\n                            isAuthenticated().user._id,\r\n                            isAuthenticated().token,\r\n                            \"Available\"\r\n                          )\r\n                        }\r\n                      >\r\n                        Make Available\r\n                      </button>\r\n                    )}\r\n                    {employeeStatus === \"OnDuty\" && (\r\n                      <button className=\"nav-drop-btn button-unclickable\">\r\n                        On Duty\r\n                      </button>\r\n                    )}\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <button\r\n                      className=\"nav-drop-btn\"\r\n                      onClick={() => {\r\n                        logout(() => navigate(\"/\"));\r\n                      }}\r\n                    >\r\n                      Log Out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 2 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/admindashpanel/dashboard/${user._id}`}>\r\n                      Admin Panel\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/adminboard/accounts/${user._id}`}>\r\n                      {\" \"}\r\n                      Account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/adminboard/settings/${user._id}`}>\r\n                      {\" \"}\r\n                      Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <button\r\n                      className=\"nav-drop-btn\"\r\n                      onClick={() => {\r\n                        toggle();\r\n                        logout(() => navigate(\"/\"));\r\n                      }}\r\n                    >\r\n                      Log Out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* nav-mobile section ends */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\backend.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\auth\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js",["348","349"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js",["350","351"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { API } from \"../backend\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getProduct, getAllProducts } from \"./helper/productDetailHelper\";\r\nimport { isAuthenticated } from \"../auth/index\";\r\nimport { addToUserCart } from \"../user\";\r\nimport { CartContext } from \"../context/Context\";\r\n\r\nconst ProductDetail = () => {\r\n  const [product, setProduct] = useState();\r\n  const [products, setProducts] = useState([]);\r\n  const [quantity, setQuantity] = useState(\"1\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { productId } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { preLoadCart } = useContext(CartContext);\r\n\r\n  const loadProduct = async (productId) => {\r\n    try {\r\n      const data = await getProduct(productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProduct(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadProducts = async () => {\r\n    try {\r\n      const data = await getAllProducts(\"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProducts(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = async (productId, quantity) => {\r\n    try {\r\n      if (isAuthenticated() && user.role === 0) {\r\n        var data = await addToUserCart(user._id, token, {\r\n          productId,\r\n          quantity,\r\n        });\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          preLoadCart(user._id, token);\r\n          return navigate(`/cart/${user._id}`);\r\n        }\r\n      } else if (isAuthenticated()) {\r\n        return \"\";\r\n      } else {\r\n        navigate(\"/login\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProduct(productId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadProducts(productId);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"productDetail productDetail-section\">\r\n      {product && (\r\n        <div className=\"wrap productDetail-wrap\">\r\n          <div className=\"productDetail-img-sec\">\r\n            <div className=\"productDetail-img-container\">\r\n              <div\r\n                className={`productDetail-category-sec ${\r\n                  product.pCategory === \"vegetable\"\r\n                    ? \"color-green\"\r\n                    : \"color-orange\"\r\n                }`}\r\n              >\r\n                <p className=\"productDetail-category\">\r\n                  {product.pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                </p>\r\n              </div>\r\n              <img\r\n                className=\"productDetail-img\"\r\n                src={`${API}/product/photo/${product.pImg.key}`}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"productDetail-info\">\r\n            <h1 className=\"productDetail-name\">{product.pName}</h1>\r\n            <h2 className=\"productDetail-price\">\r\n              ₹<span>{product.pPrice + \"/Kg\"}</span>\r\n            </h2>\r\n            <p className=\"productDetail-description\">{product.pDescription}</p>\r\n            <h3 className=\"productDetail-stock\">{product.pStock}kg in stock</h3>\r\n            <div className=\"productDetail-quantity-sec\">\r\n              <p className=\"productDetail-quantity-p\">QTY:</p>{\" \"}\r\n              <input\r\n                type=\"text\"\r\n                className=\"productDetail-quantity\"\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                value={quantity}\r\n              />\r\n              <p className=\"productDetail-quantity-p\">Kg</p>\r\n            </div>\r\n            <button\r\n              className={`productDetail-btn ${\r\n                product.pStock === 0 ? \"button-unclickable\" : \"\"\r\n              }`}\r\n              onClick={() => handleAddToCart(product._id, quantity)}\r\n            >\r\n              Add to Cart\r\n            </button>\r\n            {product.pStock === 0 && (\r\n              <p className=\"productDetail-OOS\">Currently Out of Stock</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {products && (\r\n        <div className=\"wrap products-wrap\">\r\n          {products.map((product, index) => {\r\n            return (\r\n              <Link to={`/product/${product._id}`} key={index}>\r\n                <div className=\"product-sec\">\r\n                  <div\r\n                    className={`product-category-sec ${\r\n                      product.pCategory === \"vegetable\"\r\n                        ? \"color-green\"\r\n                        : \"color-orange\"\r\n                    }`}\r\n                  >\r\n                    <p className=\"product-category\">\r\n                      {product.pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                    </p>\r\n                  </div>\r\n                  <img\r\n                    className=\"product-img\"\r\n                    src={`${API}/product/photo/${product.pImg.key}`}\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"product-info\">\r\n                    <h2 className=\"product-name\">{product.pName}</h2>\r\n                    <h3 className=\"product-stock\">\r\n                      {product.pStock} Kg in stock\r\n                    </h3>\r\n                    <h1 className=\"product-price\">{product.pPrice}/Kg</h1>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\context\\Context.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js",["352","353","354","355"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { login, authenticate } from \"../auth\";\r\n\r\nconst Login = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { email, password, error, loading, success } = values;\r\n\r\n  const naviagte = useNavigate();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(email && password)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      console.log(\"Please enter a valid email address\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid email\",\r\n      });\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      const data = await login({ email, password });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n      authenticate(data);\r\n\r\n      return naviagte(\"/\");\r\n    } catch (error) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <section className=\"login-section\">\r\n      <div className=\"wrap login-wrap\">\r\n        <div className=\"popup-small-sec login-popup\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec login-head-sec\">\r\n              <h1 className=\"popup-header\">Log In</h1>\r\n              <p className=\"popup-header-p\">\r\n                Don't have an account ?{\" \"}\r\n                <Link to=\"/signup\" className=\"popup-header-link\">\r\n                  Signup\r\n                </Link>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    onChange={handleChange(\"email\")}\r\n                    value={email}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"popup-form-input\"\r\n                    onChange={handleChange(\"password\")}\r\n                    value={password}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"popup-form-btn login-popup-btn\"\r\n                onClick={onSubmit}\r\n              >\r\n                Log In\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\AdminRoutes.js",["356"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 2)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\CustomerRoutes.js",["357","358","359"],[],"import React, {useContext} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/Context\";\r\nimport {isAuthenticated} from \"./index\";\r\n\r\nconst CustomerRoutes = ({children}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n  const { authActive, setAuthActive } = useContext(AuthContext);\r\n\r\n  if(!(isAuthenticated() && isAuthenticated().user.role === 0)){\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default CustomerRoutes","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\EmployeeRoutes.js",["360"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst EmployeeRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 1)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default EmployeeRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js",["361"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../icons/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Orders from \"./Orders\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst CustomerBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n            <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <div className=\"userBoard-user-detail-sec\">\r\n                <h3 className=\"userBoard-user-detail-name\">\r\n                  {name.length > 6 ? name.substring(0, 6) : name}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/orders/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"orders\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Orders\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Accounts\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Settings\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"accounts\" && <Accounts userValues={values} />}\r\n          {tabActive === \"orders\" && <Orders userValues={values} />}\r\n          {tabActive === \"settings\" && <Settings userValues={values} />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CustomerBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js",["362","363"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport EditPersonalInformation from \"./EditPersonalInformation\";\r\nimport EditAddress from \"./EditAddress\";\r\nimport { getUser } from \"../user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Accounts = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [accountsActive, setAccountsActive] = useState(null);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name, email, phoneNumber, houseName, streetName } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, [accountsActive]);\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <AccountsContext.Provider value={{ accountsActive, setAccountsActive }}>\r\n        <h1 className=\"userBoard-right-header\">Account</h1>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <h2 className=\"userBoard-subHeader\">Personal Information</h2>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editpersonalinformation\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-single-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Email</label>\r\n                  <p className=\"userBoard-right-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Name</label>\r\n                  <p className=\"userBoard-right-value\">{name}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Phone</label>\r\n                  <p className=\"userBoard-right-value\">{phoneNumber}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <div className=\"userBoard-subHeader\">Address</div>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editaddress\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">House Name</label>\r\n                  <p className=\"userBoard-right-value\">{houseName}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Street</label>\r\n                  <p className=\"userBoard-right-value\">{streetName}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {accountsActive === \"editpersonalinformation\" && (\r\n          <EditPersonalInformation />\r\n        )}\r\n        {accountsActive === \"editaddress\" && <EditAddress />}\r\n      </AccountsContext.Provider>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js",["364","365","366"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUserOrders } from \"../user\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport moment from \"moment\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\n\r\nconst Orders = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(null);\r\n  const [order, setOrder] = useState();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const getUserOrderDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUserOrders(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserOrderDetails(userId, token);\r\n  }, []);\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Orders</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <table className=\"userBoard-right-customer-order-table\">\r\n          <thead className=\"userBoard-right-customer-order-table-head-sec\">\r\n            <tr>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Status\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Total\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"userBoard-right-customer-order-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"userBoard-right-customer-order-table-body-tr\"\r\n                  >\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      <div\r\n                        className={`userBoard-right-customer-order-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OemployeeId ? order.OemployeeId : \"Not Assigned\"}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-head-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                      <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js",["367","368"],[],"import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../auth\";\r\nimport { changePassword } from \"../user\";\r\n\r\nconst Settings = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { oldPassword, newPassword, confirmPassword, error, loading, success } =\r\n    values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(oldPassword && newPassword && confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      oldPassword.length < 6 ||\r\n      newPassword.length < 6 ||\r\n      confirmPassword < 6\r\n    ) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    if (!(newPassword === confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Password confirmation does not match\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await changePassword(userId, token, {\r\n        oldPassword,\r\n        newPassword,\r\n      });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      console.log(\"Success\");\r\n      setValues({ ...values, success: true, loading: \"\", error: \"\" });\r\n      logout(() => navigate(\"/\"));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, success: false })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Settings</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <div className=\"userBoard-righ-subsec-small\">\r\n          <div className=\"userBoard-right-subHead\">\r\n            <h2 className=\"userBoard-subHeader\">Change Password</h2>\r\n          </div>\r\n          <div className=\"userBoard-right-subInner\">\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">Old Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"oldPassword\")}\r\n                  value={oldPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"newPassword\")}\r\n                  value={newPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"confirmPassword\")}\r\n                  value={confirmPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className=\"userBoard-right-btn\" onClick={onSubmit}>\r\n              Change\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {error && errorMessage()}\r\n      {success && successMessage()}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js",["369","370","371","372"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst EditPersonalInformation = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n  };\r\n\r\n  const { email, name, phoneNumber, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        name: userDetails.name,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      };\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(name && phoneNumber)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      name === preLoadValues.name &&\r\n      phoneNumber === preLoadValues.phoneNumber\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    if (phoneNumber.length !== 10) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid phone Number\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({ name, phoneNumber }, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      return setAccountsActive(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Personal Information</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={name}\r\n                    onChange={handleChange(\"name\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={phoneNumber}\r\n                    onChange={handleChange(\"phoneNumber\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditPersonalInformation;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js",["373","374","375","376"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst EditAddress = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  };\r\n\r\n  const { email, houseName, streetName, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName\r\n      }\r\n\r\n      return setValues({\r\n        ...values,\r\n        houseName: userDetails.address.houseName,\r\n        email: userDetails.email,\r\n        streetName: userDetails.address.streetName\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(houseName && streetName)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      houseName === preLoadValues.houseName &&\r\n      streetName === preLoadValues.streetName\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    const address = {\r\n      houseName: houseName,\r\n      streetName: streetName\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({address}, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n\r\n      return setAccountsActive(null);\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Address</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n              <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">House Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={houseName}\r\n                    onChange={handleChange(\"houseName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Street Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={streetName}\r\n                    onChange={handleChange(\"streetName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditAddress;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js",["377","378","379","380","381","382"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { CartContext } from \"../context/Context\";\r\nimport {\r\n  deleteFromCart,\r\n  getUser,\r\n  getUserCart,\r\n  // getUserCart,\r\n  updateFromUserCart,\r\n} from \"../user\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst Cart = () => {\r\n  const { cart, setCart} = useContext(CartContext);\r\n  // const [cart, setCart] = useState([]);\r\n  const [subTotal_items, setSubTotal_items] = useState(0);\r\n  const [subTotal_value, setSubTotal_value] = useState(0);\r\n  const [shippingAddress_state, setShippingAddress_state] = useState(\"default\");\r\n  const [shippingAddress, setShippingAddress] = useState({\r\n    shippingAddress_houseName: \" \",\r\n    shippingAddress_streetName: \" \",\r\n  });\r\n  const [productDetails, setProductDetails] = useState();\r\n\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { shippingAddress_houseName, shippingAddress_streetName } =\r\n    shippingAddress;\r\n\r\n  const preLoadShippingAddress = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        return setShippingAddress({\r\n          ...shippingAddress,\r\n          shippingAddress_houseName: data.address.houseName,\r\n          shippingAddress_streetName: data.address.streetName,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadShippingAddress(userId, token);\r\n  }, []);\r\n\r\n  const loadSubTotal_value = async () => {\r\n    var total = 0;\r\n    cart.map((cartItem) => {\r\n      return (total = total + cartItem.product.pPrice * cartItem.quantity);\r\n    });\r\n\r\n    return setSubTotal_value(total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubTotal_value();\r\n  }, [cart]);\r\n\r\n  useEffect(() => {\r\n    setSubTotal_items(cart.length);\r\n  }, [cart]);\r\n\r\n  const preLoadCart = async (userId, token) => {\r\n    try {\r\n      const data = await getUserCart(userId, token);\r\n      return setCart(data.cart);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"reaching here awsome vini\")\r\n    preLoadCart(userId, token);\r\n  }, []);\r\n\r\n  const updateQuantity = async (productId, quantity) => {\r\n    try {\r\n      const data = await updateFromUserCart(userId, token, {\r\n        productId,\r\n        quantity,\r\n      });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        return preLoadCart(userId, token);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (productId) => {\r\n    try {\r\n      const data = await deleteFromCart(userId, token, productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return preLoadCart(userId, token);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setShippingAddress({ ...shippingAddress, [name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <section className=\"cart-section\">\r\n      <div className=\"wrap cart-wrap\">\r\n        <div className=\"cart-header-sec\">\r\n          <h1 className=\"cart-header\">My Cart </h1>\r\n        </div>\r\n        <div className=\"cart-subsection\">\r\n          <div className=\"cartDetail-sec\">\r\n            <div className=\"cartDetail-sec-hr\"></div>\r\n            {cart &&\r\n              cart.map((cartItem, index) => {\r\n                return (\r\n                  <CartItem\r\n                    cartItemProductId={cartItem.product._id}\r\n                    cartItemQuantity={cartItem.quantity}\r\n                    key={index}\r\n                    updateQuantity={updateQuantity}\r\n                    deleteProduct={deleteProduct}\r\n                  />\r\n                );\r\n              })}\r\n            <div className=\"cart-subTotal-sec\">\r\n              <h2 className=\"cart-subTotal-h2\">\r\n                {`Subtotal (${subTotal_items} items)`} :{\" \"}\r\n                <span className=\"cart-subTotal-price\">{`${subTotal_value}`}</span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"cart-placeOrder-sec\">\r\n            <div className=\"cart-subTotal-sec cart-placeOrder-subTotal-sec\">\r\n              <h2 className=\"cart-subTotal-h2\">\r\n                {`Subtotal (${subTotal_items} items)`} :{\" \"}\r\n                <span className=\"cart-subTotal-price\">{`${subTotal_value}`}</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"cart-shippingAddress-sec\">\r\n              <h3 className=\"cart-shippingAddress-header\">Shipping Address</h3>\r\n              {shippingAddress_state === \"default\" && (\r\n                <div className=\"cart-shippingAddress-default-sec\">\r\n                  <div className=\"cart-shippingAddress-default-address-sec\">\r\n                    <p className=\"cart-shippingAddress-default-address cart-shippingAddress-default-HouseName\">\r\n                      {shippingAddress_houseName}\r\n                    </p>\r\n                    <p className=\"cart-shippingAddress-default-address cart-shippingAddress-default-StreetName\">\r\n                      {shippingAddress_streetName}\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    className=\"cart-shippingAddress-edit-btn\"\r\n                    onClick={() => setShippingAddress_state(\"edit\")}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <Link to={`/cart/payment/${userId}`} state={shippingAddress}>\r\n                    <button className=\"cart-shippingAddress-cta-btn\">\r\n                      Deliver to this Address\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n              {shippingAddress_state === \"edit\" && (\r\n                <div className=\"cart-shippingAddress-edit-sec\">\r\n                  <form className=\"cart-shippingAddress-edit-address-form\">\r\n                    <p\r\n                      className=\"cart-shippingAddress-edit-address-default_state\"\r\n                      onClick={() => setShippingAddress_state(\"default\")}\r\n                    >\r\n                      Go back to default address\r\n                    </p>\r\n                    <div className=\"cart-shippingAddress-edit-address-sec\">\r\n                      <p className=\"cart-shippingAddress-edit-address-label\">\r\n                        House Name\r\n                      </p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"cart-shippingAddress-edit-address-input\"\r\n                        value={shippingAddress_houseName || \" \"}\r\n                        onChange={handleChange(\"shippingAddress_houseName\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"cart-shippingAddress-edit-address-sec\">\r\n                      <p className=\"cart-shippingAddress-edit-address-label\">\r\n                        Street Name\r\n                      </p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"cart-shippingAddress-edit-address-input\"\r\n                        value={shippingAddress_streetName || \" \"}\r\n                        onChange={handleChange(\"shippingAddress_streetName\")}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                  <Link\r\n                    to={`/cart/payment/${userId}`}\r\n                    state={{ shippingAddress }}\r\n                  >\r\n                    <button className=\"cart-shippingAddress-cta-btn\">\r\n                      Deliver to this Address\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js",["383","384"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { API } from \"../backend\";\r\nimport Trash from \"../icons/Trash.svg\";\r\nimport { getProduct } from \"./helper/productDetailHelper\";\r\n\r\nconst CartItem = ({\r\n  cartItemProductId,\r\n  cartItemQuantity,\r\n  updateQuantity,\r\n  deleteProduct,\r\n}) => {\r\n  const [product, setProduct] = useState({\r\n    _id: \"\",\r\n    pName: \"\",\r\n    pPrice: \"\",\r\n    pCategory: \"\",\r\n    pImg: \"\",\r\n  });\r\n  const [quantity, setQuantity] = useState(cartItemQuantity);\r\n\r\n  const { _id, pName, pPrice, pCategory, pImg } = product;\r\n\r\n  const getProductDetails = async (productId) => {\r\n    try {\r\n      const data = await getProduct(productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProduct({\r\n          ...product,\r\n          _id: data._id,\r\n          pName: data.pName,\r\n          pPrice: data.pPrice,\r\n          pCategory: data.pCategory,\r\n          pImg: data.pImg,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductDetails(cartItemProductId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateQuantity(product._id, quantity);\r\n  }, [quantity]);\r\n    \r\n  return (\r\n    <div className=\"cartItem-item\">\r\n      {pImg !== \"\" && (\r\n        <>\r\n          <div className=\"cartItem-item-left\">\r\n            <div className=\"cartItem-item-img-sec\">\r\n              <img\r\n                src={`${API}/product/photo/${pImg.key}`}\r\n                alt=\"\"\r\n                className=\"cartItem-item-img\"\r\n              />\r\n            </div>\r\n            <div className=\"cartItem-item-info\">\r\n              <h2 className=\"cartItem-item-productName\">{pName}</h2>\r\n              <div\r\n                className={`cartItem-item-category-sec ${\r\n                  pCategory === \"vegetable\" ? \"color-green\" : \"color-orange\"\r\n                }`}\r\n              >\r\n                <p className=\"cartItem-item-category\">\r\n                  {pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"cartItem-item-action\">\r\n              <div className=\"cartItem-item-quantity-sec\">\r\n                <h4 className=\"cartItem-item-quantity-h3\">QTY:</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"cartItem-item-quantity-input\"\r\n                  onChange={(e) => setQuantity(e.target.value)}\r\n                  value={quantity}\r\n                />\r\n                <h4 className=\"cartItem-item-quantity-h3\">Kg</h4>\r\n              </div>\r\n              <img\r\n                src={Trash}\r\n                alt=\"\"\r\n                className=\"cartItem-item-delete-icon\"\r\n                onClick={() => deleteProduct(_id)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"cartItem-item-right\">\r\n            <h2 className=\"cartItem-item-price\">{`${pPrice}/Kg`}</h2>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js",["385"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Dashboard from \"../employee/Dashboard\";\r\nimport Deliveries from \"../employee/Deliveries\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../icons/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst EmployeeBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n          <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <div className=\"userBoard-user-detail-sec\">\r\n                <h3 className=\"userBoard-user-detail-name\">\r\n                  {name.length > 6 ? name.substring(0, 6) : name}\r\n                </h3>\r\n\r\n                <p className=\"userBoard-user-detail-role\">(Employee)</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/dashboard/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"dashboard\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  Dashboard\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/deliveries/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"deliveries\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  Deliveries\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Accounts\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Settings\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"dashboard\" && <Dashboard />}\r\n          {tabActive === \"deliveries\" && <Deliveries />}\r\n          {tabActive === \"accounts\" && <Accounts userValues={values} />}\r\n          {tabActive === \"settings\" && <Settings userValues={values} />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EmployeeBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js",["386"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../icons/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst AdminBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n            <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <div className=\"userBoard-user-detail-sec\">\r\n                <h3 className=\"userBoard-user-detail-name\">\r\n                  {name.length > 6 ? name.substring(0, 6) : name}\r\n                </h3>\r\n\r\n                <p className=\"userBoard-user-detail-role\">(Admin)</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/adminboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Accounts\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/adminboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Settings\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"accounts\" && <Accounts />}\r\n          {/* {tabActive === \"orders\" && <Orders userValues={values} />} */}\r\n          {tabActive === \"settings\" && <Settings />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js",["387","388","389"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getUserCart,\r\n  createOrder,\r\n  getUser,\r\n  razorPayOrder,\r\n  paymentVerify,\r\n  updateOrderConfirmation,\r\n} from \"../user\";\r\n\r\nexport const CartPayment = () => {\r\n  const { userId } = useParams();\r\n\r\n  const naviagte = useNavigate();\r\n  const location = useLocation();\r\n  const shippingAddress = location.state;\r\n  const [values, setValues] = useState({\r\n    paymentMode: \"RazorPay\",\r\n    total: 10,\r\n    userDetails: \"\",\r\n  });\r\n\r\n  var cart = [];\r\n  var order = \"\";\r\n\r\n  const { paymentMode, total, userDetails } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const isRadioSelected = (value) => {\r\n    if (paymentMode === value) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const preLoadCart = async (userId, token) => {\r\n    try {\r\n      const data = await getUserCart(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        cart = data.cart;\r\n        console.log(cart);\r\n        var tempTotal = 0;\r\n        cart.map(\r\n          (cartItem) =>\r\n            (tempTotal =\r\n              tempTotal + cartItem.product.pPrice * cartItem.quantity)\r\n        );\r\n        setValues({ ...values, total: tempTotal });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const preLoadUser = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        // return (userDetails = data);\r\n        return setValues({ ...values, userDetails: data });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadCart(userId, token);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    preLoadUser(userId, token);\r\n  }, []);\r\n\r\n  const handleOrder = async (userId, token) => {\r\n    try {\r\n      const data = await createOrder(userId, token, {\r\n        shippingAddress,\r\n        paymentMode,\r\n      });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        order = data.order;\r\n        if (paymentMode === \"RazorPay\") {\r\n          await handlePayment(total);\r\n        } else {\r\n          try {\r\n            const data = await updateOrderConfirmation(userId, token, order._id, {\r\n              Ostatus: \"Ordered\",\r\n            });\r\n            if (data.error) {\r\n              return console.log(data.error);\r\n            } else {\r\n              console.log(data);\r\n              naviagte(`/thankyou/${order._id}`);\r\n            }\r\n          } catch (error) {}\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePayment = async (total) => {\r\n    try {\r\n      const data = await razorPayOrder({ total });\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        console.log(data);\r\n        initPayment(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    const options = {\r\n      key: process.env.RAZORPAY_KEY_SECRET,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      name: \"Fruits and Veggies\",\r\n      order_id: data.id,\r\n      prefill: {\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        contact: userDetails.phoneNumber,\r\n      },\r\n      handler: async (response) => {\r\n        try {\r\n          const data = await paymentVerify({ response, order });\r\n          if (data.error) {\r\n            return console.log(data.error);\r\n          }\r\n          console.log(data);\r\n          naviagte(`/thankyou/${order._id}`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp1 = new window.Razorpay(options);\r\n    rzp1.open();\r\n  };\r\n\r\n  return (\r\n    <section className=\"cardPayment-section\">\r\n      <div className=\"wrap cardPayment-wrap\">\r\n        <div className=\"cardPayment-info-sec\">\r\n          <div className=\"cardPayment-delivery-details-sec\">\r\n            <h2 className=\"cardpayment-delivery-details-header\">\r\n              Delivery Details\r\n            </h2>\r\n            <div className=\"cardPayment-delivery-details\">\r\n              <div className=\"cardPayment-delivery-details-single-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">name</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Email\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">email</p>\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Phone\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                    phoneNumber\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"cardPayment-delivery-details-subheader\">\r\n                Shipping Address\r\n              </h3>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    House Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                    houseName\r\n                  </p>\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Street Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                    streetName\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"cardPayment-payment-details-sec\">\r\n            <h2 className=\"cardPayment-payment-details-header\">Payment Mode</h2>\r\n            <div className=\"cardPayment-payment-details-form\">\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"RazorPay\"\r\n                  value=\"RazorPay\"\r\n                  checked={isRadioSelected(\"RazorPay\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"RazorPay\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Make Payment Online (RazorPay)\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"CashOnDelivery\"\r\n                  value=\"CashOnDelivery\"\r\n                  checked={isRadioSelected(\"CashOnDelivery\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"CashOnDelivery\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Cash On Delivery\r\n                </label>\r\n              </div>\r\n              <button\r\n                className=\"cardPayment-payment-details-btn\"\r\n                onClick={() => handleOrder(userId, token)}\r\n              >\r\n                Make Payment\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js",["390"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { getUser } from \"./index\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.OtotalPrice}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">{order._id}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\"> {order.Ostatus}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OEmployeeId || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Ouser.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Ouser.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Ouser.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js",["391","392"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUser } from \"../user\";\r\nimport DashboardIcon from \"../icons/dashboard.svg\";\r\nimport DashboardActiveIcon from \"../icons/dashboardActive.svg\";\r\nimport CartIcon from \"../icons/cart.svg\";\r\nimport CartActiveIcon from \"../icons/cart-active.svg\";\r\nimport ProductIcon from \"../icons/product.svg\";\r\nimport ProductActiveIcon from \"../icons/productActive.svg\";\r\nimport EmployerIcon from \"../icons/employer.svg\";\r\nimport EmployerActiveIcon from \"../icons/employerActive.svg\";\r\nimport CustomerIcon from \"../icons/customer.svg\";\r\nimport CustomerActiveIcon from \"../icons/customerActive.svg\";\r\nimport Dashboard from \"../admin/Dashboard\";\r\nimport Order from \"../admin/Order\";\r\nimport Product from \"../admin/Product\";\r\nimport Employee from \"../admin/Employee\";\r\nimport Customer from \"../admin/Customer\";\r\n\r\nconst AdminDashPanel = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setName(data.name);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preload(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section\">\r\n      <div className=\"wrap adminDashPanel-wrap\">\r\n        <div className=\"adminDashPanel-left\">\r\n          <ul className=\"adminDashPanel-left-ul\">\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/dashboard/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"dashboard\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  {\" \"}\r\n                  <img\r\n                    src={\r\n                      tabActive === \"dashboard\" ? DashboardActiveIcon : DashboardIcon\r\n                    }\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Dashboard\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/order/${user._id}`}\r\n                className=\"adminDashPanel-left-link \"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"order\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"order\" ? CartActiveIcon : CartIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Order\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/product/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"product\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"product\" ? ProductActiveIcon : ProductIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Product\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/employee/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"employee\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"employee\" ? EmployerActiveIcon : EmployerIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Employee\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/customer/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"customer\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"customer\" ? CustomerActiveIcon : CustomerIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Customer\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"adminDashPanel-right\">\r\n          {tabActive === 'dashboard' && <Dashboard />}\r\n          {tabActive === 'order' && <Order />}\r\n          {tabActive === 'product' && <Product />}\r\n          {tabActive === 'employee' && <Employee />}\r\n          {tabActive === 'customer' && <Customer />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminDashPanel;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js",["393","394","395","396","397"],[],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { getAllOrders } from \"../user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport EmployeeUpdate from \"./EmployeeUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Order = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] =\r\n    useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n  const [countValues, setCountValues] = useState({\r\n    all: 0,\r\n    NotConfirmed: 0,\r\n    Ordered: 0,\r\n    Processing: 0,\r\n    PickingUp: 0,\r\n    OutForDelivery: 0,\r\n    Delivered: 0,\r\n    Cancelled: 0,\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const {\r\n    all,\r\n    NotConfirmed,\r\n    Ordered,\r\n    Processing,\r\n    PickingUp,\r\n    OutForDelivery,\r\n    Delivered,\r\n    Cancelled,\r\n  } = countValues;\r\n\r\n  const loadOrders = async (userId, token, status) => {\r\n    try {\r\n      const data = await getAllOrders(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = async (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handleEmployeeAssign = async (order) => {\r\n    return (\r\n      setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order)\r\n    );\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  const filterBtn = (statusState, statusValue, statusBtnValue) => {\r\n    return (\r\n      <button\r\n        className={`orders-filter-btn ${\r\n          status === statusState ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setStatus(statusState)}\r\n      >\r\n        {statusBtnValue} <span className=\"filter-btn-value\">{statusValue}</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const loadCountValues = async (userId, token) => {\r\n    var orders = [];\r\n    try {\r\n      const data = await getAllOrders(userId, token, \"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        orders = data;\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n\r\n    setCountValues({\r\n      ...countValues,\r\n      all: orders.length,\r\n      NotConfirmed: orders.filter((order) => order.Ostatus === \"Not-Confirmed\")\r\n        .length,\r\n      Ordered: orders.filter((order) => order.Ostatus === \"Ordered\").length,\r\n      Processing: orders.filter((order) => order.Ostatus === \"Processing\")\r\n        .length,\r\n      PickingUp: orders.filter((order) => order.Ostatus === \"Picking-Up\")\r\n        .length,\r\n      OutForDelivery: orders.filter(\r\n        (order) => order.Ostatus === \"Out-For-Delivery\"\r\n      ).length,\r\n      Delivered: orders.filter((order) => order.Ostatus === \"Delivered\").length,\r\n      Cancelled: orders.filter((order) => order.Ostatus === \"Cancelled\").length,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadOrders(user._id, token, status);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  useEffect(() => {\r\n    loadCountValues(user._id, token);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-right-section order-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Orders</h1>\r\n      <div className=\"adminDashPanel-right-subsection orders-filter-subSection\">\r\n        {filterBtn(\"all\", all, \"All\")}\r\n        {filterBtn(\"Not-Confirmed\", NotConfirmed, \"Not-Confirmed\")}\r\n        {filterBtn(\"Ordered\", Ordered, \"Ordered\")}\r\n        {filterBtn(\"Processing\", Processing, \"Processing\")}\r\n        {filterBtn(\"Picking-Up\", PickingUp, \"Picking-Up\")}\r\n        {filterBtn(\"Out-For-Delivery\", OutForDelivery, \"Out-For-Delivery\")}\r\n        {filterBtn(\"Delivered\", Delivered, \"Delivered\")}\r\n        {filterBtn(\"Cancelled\", Cancelled, \"Cancelled\")}\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Total</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <div\r\n                        className={`adminDashPanel-right-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentStatus === \"Paid\" ? (\r\n                        order.OpaymentStatus\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handlePaymentStatus(order)}\r\n                        >\r\n                          Pending\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                    {order.Ostatus === \"Not-Confirmed\" ? (\r\n                        \" \"\r\n                      ) : order.OemployeeName ? (\r\n                        order.OemployeeName\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handleEmployeeAssign(order)}\r\n                        >\r\n                          Not Assigned\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && (\r\n        <EmployeeUpdate\r\n          setOrderEmployeeAssignActive={setOrderEmployeeAssignActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js",["398","399","400","401","402","403","404","405","406","407","408","409"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js",["410","411","412","413","414","415","416"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js",["417","418","419","420"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteCustomer, getCustomers } from \"../user\";\r\nimport moment from \"moment\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport TrashIcon from \"../icons/Trash.svg\";\r\nimport CustomerDetail from \"./CustomerDetail\";\r\nimport DeleteCustomer from \"./DeleteCustomer\";\r\n\r\nconst Customer = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customerDetail, setCustomerDetail] = useState(\"\");\r\n  const [deleteCustomerActive, setDeleteCustomerActive] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadCustomers = async (userId, token) => {\r\n    try {\r\n      const data = await getCustomers(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setCustomers(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (customer) => {\r\n    return setCustomerDetail(\"customerDetail\"), setCustomer(customer);\r\n  };\r\n\r\n  const handleDelete = async (customer) => {\r\n    return setDeleteCustomerActive(\"deleteCustomer\"), setCustomer(customer);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCustomers(user._id, token);\r\n  }, []);\r\n\r\n  // console.log(\"Customers\", customers);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section customer-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Customers</h1>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Name</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Customer ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Email</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Phone Number\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Address</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Created At\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {customers &&\r\n              customers.map((customer, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.name}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.email}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.phoneNumber}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.address.houseName}\r\n                      <br />\r\n                      {customer.address.streetName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(customer.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(customer)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(customer)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {customerDetail === \"customerDetail\" && (\r\n        <CustomerDetail\r\n          customer={customer}\r\n          setCustomerDetail={setCustomerDetail}\r\n        />\r\n      )}\r\n      {deleteCustomerActive === \"deleteCustomer\" && (\r\n        <DeleteCustomer\r\n          customer={customer}\r\n          setDeleteCustomerActive={setDeleteCustomerActive}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js",["421"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { adminUpdateOrderStatus } from \"../user\";\r\n\r\nconst OrderUpdate = ({ setOrderUpdateActive, order }) => {\r\n  const [status, setStatus] = useState(order.Ostatus);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOptions = (orderStatus) => {\r\n    if (orderStatus === \"Not-Confirmed\") {\r\n      return (\r\n        <>\r\n          <option value=\"Not-Confirmed\">Not-Confirmed</option>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Ordered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Processing\") {\r\n      return (\r\n        <>\r\n          <option value=\"Processing\">Processing</option>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Picking-Up\") {\r\n      return (\r\n        <>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Out-For-Delivery\") {\r\n      return (\r\n        <>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Delivered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (userId, token, orderId, status) => {\r\n    try {\r\n      const data = adminUpdateOrderStatus(userId, token, orderId, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderUpdateActive(\"\");\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Order Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdateActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n                    {loadOptions(order.Ostatus)}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`popup-form-btn ${\r\n                  status === order.Ostatus ? \"button-unclickable\" : \"\"\r\n                }`}\r\n                onClick={() => handleUpdate(user._id, token, order._id, status)}\r\n              >\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js",["422","423","424","425","426"],[],"import React, { useState, useEffect } from \"react\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport TrashIcon from \"../icons/Trash.svg\";\r\nimport AddIcon from \"../icons/add.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteEmployee, getEmployees } from \"../user\";\r\nimport moment from \"moment\";\r\nimport AddEmployee from \"./AddEmployee\";\r\nimport EmployeeDetail from \"./EmployeeDetail\";\r\nimport DeleteEmployee from \"./DeleteEmployee\";\r\n\r\nconst Employee = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [employee, setEmployee] = useState();\r\n  const [addEmployeeActive, setAddEmployeeActive] = useState(\"\");\r\n  const [deleteEmployeeActive, setDeleteEmployeeActive] = useState(\"\");\r\n  const [employeeDetail, setEmployeeDetail] = useState(\"\");\r\n  const [countValues, setCountValues] = useState({\r\n    all: 0,\r\n    Available: 0,\r\n    NotAvailable: 0,\r\n    OnDuty: 0,\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { all, Available, NotAvailable, OnDuty } = countValues;\r\n\r\n  const loadEmployees = async (userId, token, status) => {\r\n    try {\r\n      const data = await getEmployees(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployees(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const filterBtn = (statusState, statusValue, statusBtnValue) => {\r\n    return (\r\n      <button\r\n        className={`orders-filter-btn ${\r\n          status === statusState ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setStatus(statusState)}\r\n      >\r\n        {statusBtnValue} <span className=\"filter-btn-value\">{statusValue}</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const loadCountValues = async (userId, token) => {\r\n    var employees = [];\r\n    try {\r\n      const data = await getEmployees(userId, token, \"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        employees = data;\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n\r\n    setCountValues({\r\n      ...countValues,\r\n      all: employees.length,\r\n      Available: employees.filter(\r\n        (employee) => employee.Estatus === \"Available\"\r\n      ).length,\r\n      NotAvailable: employees.filter(\r\n        (employee) => employee.Estatus === \"NotAvailable\"\r\n      ).length,\r\n      OnDuty: employees.filter((employee) => employee.Estatus === \"OnDuty\")\r\n        .length,\r\n    });\r\n  };\r\n\r\n  const handlePreview = (employee) => {\r\n    return setEmployeeDetail(\"employeeDetail\"), setEmployee(employee);\r\n  };\r\n\r\n  const handleDelete = async (employee) => {\r\n    return setDeleteEmployeeActive(\"deleteEmployee\"), setEmployee(employee);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees(user._id, token, status);\r\n  }, [status, addEmployeeActive]);\r\n\r\n  useEffect(() => {\r\n    loadCountValues(user._id, token);\r\n  }, [status, addEmployeeActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section employee-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Employees</h1>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-add-btn-subSection\">\r\n        <button\r\n          className=\"adminDashPanel-product-add-btn\"\r\n          onClick={() => setAddEmployeeActive(\"addEmployee\")}\r\n        >\r\n          <img\r\n            src={AddIcon}\r\n            className=\"adminDashPanel-product-add-btn-icon\"\r\n            alt=\"\"\r\n          />\r\n          ADD EMPLOYEE\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-filter-subSection\">\r\n        {filterBtn(\"all\", all, \"All\")}\r\n        {filterBtn(\"Available\", Available, \"Available\")}\r\n        {filterBtn(\"NotAvailable\", NotAvailable, \"NotAvailable\")}\r\n        {filterBtn(\"OnDuty\", OnDuty, \"On-Duty\")}\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Name</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Employee ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Email</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Phone Number\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Address</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Created At\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {employees &&\r\n              employees.map((employee, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.name}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.email}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Estatus}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.phoneNumber}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.address.houseName}\r\n                      <br />\r\n                      {employee.Euser.address.streetName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(employee.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(employee)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(employee)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {addEmployeeActive === \"addEmployee\" && (\r\n        <AddEmployee setAddEmployeeActive={setAddEmployeeActive} />\r\n      )}\r\n      {deleteEmployeeActive === \"deleteEmployee\" && (\r\n        <DeleteEmployee\r\n          setDeleteEmployeeActive={setDeleteEmployeeActive}\r\n          employee={employee}\r\n        />\r\n      )}\r\n      {employeeDetail === \"employeeDetail\" && (\r\n        <EmployeeDetail\r\n          employee={employee}\r\n          setEmployeeDetail={setEmployeeDetail}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js",["427"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\nimport { createEmployee } from \"../user\";\r\n\r\nconst AddEmployee = ({ setAddEmployeeActive }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n        const data = await createEmployee(user._id, token, email)\r\n        if(data.error){\r\n            return console.log(data.error)\r\n        }else{\r\n            return setAddEmployeeActive(null)\r\n        }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"addEmployee-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Add Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAddEmployeeActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <form className=\"popup-form\" encType=\"multipart/form-data\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n              Add Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {error && errorMessage()} */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js",["428","429","430","431","432"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js",["433","434","435","436"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getAllDeliveries } from \"../user\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Deliveries = () => {\r\n  const [deliveries, setDeliveires] = useState([]);\r\n  const [order, setOrder] = useState({});\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadDelivery = async (userId, token) => {\r\n    try {\r\n      const data = await getAllDeliveries(userId, token, \"all\");\r\n\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeliveires(data.Eorders);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDelivery(user._id, token);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"employeeBoard-section\">\r\n      <h1 className=\"employeeBoard-right-header\">Deliveries</h1>\r\n\r\n      <div className=\"employeeBoard-right-subsection\">\r\n        <table className=\"employeeBoard-right-table\">\r\n          <thead className=\"employeeBoard-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"employeeBoard-right-table-head-value\">Order ID</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Status</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Total</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Address</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"employeeBoard-right-table-body-sec\">\r\n            {deliveries &&\r\n              deliveries.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"employeeBoard-right-table-body-tr \"\r\n                  >\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId._id}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <div\r\n                        className={`employeeBoard-right-table-body-div ${order.EorderId.Ostatus}`}\r\n                      >\r\n                        {order.EorderId.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentStatus === \"Paid\" ? (\r\n                          order.EorderId.OpaymentStatus\r\n                        ) : (\r\n                          <button\r\n                            className=\"adminDashPanel-right-table-body-value-btn\"\r\n                            onClick={() => handlePaymentStatus(order.EorderId)}\r\n                          >\r\n                            Pending\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderAddress.houseName}\r\n                      <br />\r\n                      {order.EorderAddress.streetName}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order.EorderId)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Deliveries;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js",["437"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { addEmployeeOrder, getEmployees } from \"../user\";\r\n\r\nconst EmployeeUpdate = ({ order, setOrderEmployeeAssignActive }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = async (userId, token) => {\r\n    try {\r\n      const data = await getEmployees(userId, token, \"Available\");\r\n      console.log(data);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployees(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeAssign = async (userId, token, orderId, employeeId) => {\r\n    try {\r\n      const data = await addEmployeeOrder(userId, token, orderId, employeeId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderEmployeeAssignActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"employeeUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header employeeUpdate-popup-header\">\r\n                Assign Employee\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderEmployeeAssignActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Employee Name</label>\r\n                  <select\r\n                    name=\"employeeName\"\r\n                    id=\"employeeName\"\r\n                    value={employeeId}\r\n                    onChange={(e) => setEmployeeId(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n                    <option value=\"\">Select an Employee</option>\r\n\r\n                    {employees &&\r\n                      employees.map((employee, index) => {\r\n                        return (\r\n                          <option key={index} value={employee._id}>\r\n                            {employee.Euser.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`popup-form-btn ${\r\n                  employeeId === \"\" ? \"button-unclickable\" : \"\"\r\n                }`}\r\n                onClick={() =>\r\n                  handleEmployeeAssign(user._id, token, order._id, employeeId)\r\n                }\r\n              >\r\n                Assign Employee\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EmployeeUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js",["438"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { getUser } from \"../user\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order.EorderId._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.EorderId.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.EorderTotal}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {order.EorderId._id}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ostatus}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OEmployeeName || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {/* {userDetails.name} */}\r\n                      {order.EorderId.Ouser.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js",["439"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js",["440"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { employeeUpdatePaymentStatus } from \"../user\";\r\n\r\nconst PaymentStatusUpdate = ({ setOrderUpdatePayment, order }) => {\r\n  const [status, setStatus] = useState(order.OpaymentStatus);\r\n  \r\n  const {user, token} = isAuthenticated();\r\n\r\nconst handleUpdate = (userId, token, orderId, status) => {\r\n  try {\r\n    const data = employeeUpdatePaymentStatus(userId, token, orderId, status);\r\n    if(data.error){\r\n      return console.log(data.error)\r\n    }else{\r\n      return setOrderUpdatePayment(\"\");\r\n    }\r\n  } catch (error) {\r\n    return console.log(error)\r\n  }\r\n}\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Payment Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdatePayment(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className= \"popup-form-value\"\r\n                  >\r\n                    <option value=\"Pending\">Pending</option>\r\n                    <option value=\"Paid\">Paid</option>\r\n                    \r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button className={`popup-form-btn ${\r\n                  status === order.OpaymentStatus ? \"button-unclickable\" : \"\"\r\n                }`} onClick={() =>  handleUpdate(user._id, token, order._id, status)}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PaymentStatusUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js",["441"],[],"import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\nconst ScrollToTop = ({ children }) => {\r\n  const location = useLocation();\r\n  useLayoutEffect(() => {\r\n    document.documentElement.scrollTo(0, 0);\r\n  }, [location.pathname]);\r\n  return children;\r\n};\r\n\r\nexport default ScrollToTop;","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js",["442","443","444","445"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { signup, login, authenticate } from \"../auth\";\r\n\r\nconst Signup = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const {\r\n    name,\r\n    email,\r\n    phoneNumber,\r\n    password,\r\n    confirmPassword,\r\n    houseName,\r\n    streetName,\r\n    error,\r\n    loading,\r\n    success,\r\n  } = values;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (\r\n      !(\r\n        name &&\r\n        email &&\r\n        phoneNumber &&\r\n        password &&\r\n        confirmPassword &&\r\n        houseName &&\r\n        streetName\r\n      )\r\n    ) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      console.log(\"Please enter a valid email address\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid email\",\r\n      });\r\n    }\r\n\r\n    if (phoneNumber.length !== 10) {\r\n      console.log(\"Please enter a valid phone Number\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid phone Number\",\r\n      });\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    if (!(password === confirmPassword)) {\r\n      console.log(\"Password confirmation does not match\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Password confirmation does not match\",\r\n      });\r\n    }\r\n\r\n    const address = {\r\n      houseName,\r\n      streetName,\r\n    };\r\n\r\n    try {\r\n      var data = await signup({ name, email, phoneNumber, password, address });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n      data = await login({ email, password });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n      authenticate(data);\r\n      return navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"wrap signup-wrap\">\r\n        <div className=\"popup-small-sec signup-popup\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec signup-head-sec\">\r\n              <h1 className=\"popup-header\">Sign Up</h1>\r\n              <p className=\"popup-header-p\">\r\n                Already a member ?{\" \"}\r\n                <Link to=\"/login\" className=\"popup-header-link\">\r\n                  Log In\r\n                </Link>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={name}\r\n                    onChange={handleChange(\"name\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-double-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    value={email}\r\n                    onChange={handleChange(\"email\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={phoneNumber}\r\n                    onChange={handleChange(\"phoneNumber\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-double-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"popup-form-input\"\r\n                    value={password}\r\n                    onChange={handleChange(\"password\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"popup-form-input\"\r\n                    value={confirmPassword}\r\n                    onChange={handleChange(\"confirmPassword\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-sec-group\">\r\n                <h3 className=\"popup-form-sec-group-header\">Address</h3>\r\n                <div className=\"popup-form-double-group\">\r\n                  <div className=\"popup-form-group\">\r\n                    <label className=\"popup-form-label\">House Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"popup-form-input\"\r\n                      value={houseName}\r\n                      onChange={handleChange(\"houseName\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"popup-form-group\">\r\n                    <label className=\"popup-form-label\">Street Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"popup-form-input\"\r\n                      value={streetName}\r\n                      onChange={handleChange(\"streetName\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"popup-form-btn signup-popup-btn\"\r\n                onClick={onSubmit}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EditProduct.js",["446"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getProduct,\r\n  updateProduct,\r\n  updateProductWithImage,\r\n} from \"../core/helper/productDetailHelper\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\n\r\nconst EditProduct = ({ setEditProductActive, product }) => {\r\n  const [values, setValues] = useState({\r\n    pName: \"\",\r\n    pDescription: \"\",\r\n    pStock: \"\",\r\n    pCategory: \"\",\r\n    pPrice: \"\",\r\n  });\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const { pName, pDescription, pStock, pCategory, pPrice } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n    console.log(\"file\", file);\r\n  };\r\n\r\n  const loadValues = async () => {\r\n    try {\r\n      const data = await getProduct(product._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setValues({\r\n          ...values,\r\n          pName: data.pName,\r\n          pDescription: data.pDescription,\r\n          pStock: data.pStock,\r\n          pCategory: data.pCategory,\r\n          pPrice: data.pPrice,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"pImg\", file);\r\n      formData.append(\"pName\", pName);\r\n      formData.append(\"pDescription\", pDescription);\r\n      formData.append(\"pStock\", pStock);\r\n      formData.append(\"pPrice\", pPrice);\r\n      formData.append(\"pCategory\", pCategory);\r\n      try {\r\n        const data = await updateProductWithImage(\r\n          user._id,\r\n          token,\r\n          product._id,\r\n          formData\r\n        );\r\n        if (data.error) {\r\n          return console.log(data.error);\r\n        } else {\r\n          return setEditProductActive(null);\r\n        }\r\n      } catch (error) {\r\n        return console.log(error);\r\n      }\r\n    } else {\r\n      try {\r\n        const data = await updateProduct(user._id, token, product._id, values);\r\n        if(data.error){\r\n          return console.log(data.error);\r\n        }else{\r\n          return setEditProductActive(null);\r\n        }\r\n      } catch (error) {\r\n        return console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadValues();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"addProduct-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setEditProductActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={pName}\r\n                    onChange={handleChange(\"pName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">\r\n                    Product Description\r\n                  </label>\r\n                  <textarea\r\n                    className=\"popup-form-input adminDashPanel-addproduct-textArea\"\r\n                    name=\"popup-form-input\"\r\n                    id=\"popup-form-input\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    value={pDescription}\r\n                    onChange={handleChange(\"pDescription\")}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-triple-group adminDashPanel-addProducts-triple-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={pPrice}\r\n                    onChange={handleChange(\"pPrice\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Stock</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={pStock}\r\n                    onChange={handleChange(\"pStock\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Category</label>\r\n                  <select\r\n                    name=\"category\"\r\n                    id=\"category\"\r\n                    className=\"popup-form-value\"\r\n                    onChange={handleChange(\"pCategory\")}\r\n                  >\r\n                    <option value=\"fruit\">Select Category</option>\r\n                    <option value=\"fruit\">Fruit</option>\r\n                    <option value=\"vegetable\">Vegetable</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Image</label>\r\n                  <div className=\"popup-form-input-div adminDashPanel-addProducts-input-div\">\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"pImg\"\r\n                      accept=\"image/*\"\r\n                      className=\"popup-form-input\"\r\n                      onChange={handleFileChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className=\"popup-form-btn\" type=\"submit\">\r\n                    Edit Product\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {error && errorMessage()} */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteProduct.js",["447"],[],"import React, { useState } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteProduct } from \"../core/helper/productDetailHelper\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\n\r\nconst DeleteProduct = ({ setDeleteProductActive, product }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const data = await deleteProduct(user._id, token, product._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeleteProductActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"deleteProduct-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Delete Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setDeleteProductActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    This action <b>cannot</b> be undone. This will permanently\r\n                    delete the <b>{product.pName}</b> product from your\r\n                    database.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    Please type <b>{product._id}</b>  to confirm.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className={`popup-form-btn ${product._id == value ? \"\" :\" button-unclickable\" }`} type=\"submit\">\r\n                    Delete Product\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeleteProduct;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteEmployee.js",["448"],[],"import React, { useState } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\nimport { deleteEmployee } from \"../user\";\r\n\r\nconst DeleteEmployee = ({ setDeleteEmployeeActive, employee}) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const data = await deleteEmployee(user._id, token, employee._id)\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeleteEmployeeActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"deleteEmployee-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Delete Employee</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setDeleteEmployeeActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    This action <b>cannot</b> be undone. This will permanently\r\n                    delete the <b>{employee.Euser.name}</b> Employee from your\r\n                    database.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    Please type <b>{employee._id}</b> to confirm.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className={`popup-form-btn ${employee._id == value ? \"\" :\" button-unclickable\" }`} type=\"submit\">\r\n                    Delete Employee\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeleteEmployee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteCustomer.js",["449"],[],"import React, { useState } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\nimport { deleteCustomer } from \"../user\";\r\n\r\nconst DeleteCustomer = ({ setDeleteCustomerActive, customer }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const data = await deleteCustomer(user._id, token, customer._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeleteCustomerActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"deleteCustomer-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Delete Customer</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setDeleteCustomerActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    This action <b>cannot</b> be undone. This will permanently\r\n                    delete the <b>{customer.name}</b> customer from your\r\n                    database.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    Please type <b>{customer._id}</b>  to confirm.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className={`popup-form-btn ${customer._id == value ? \"\" :\" button-unclickable\" }`} type=\"submit\">\r\n                    Delete Customer\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeleteCustomer;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\BarChart.js",["450"],[],"import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {Chart} from 'chart.js/auto';\r\n\r\nconst BarChart = ({chartData}) => {\r\n  return <Bar data={chartData} />\r\n}\r\n\r\nexport default BarChart","F:\\mern\\projects\\greenbeans\\client\\src\\core\\data.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\LineChart.js",["451"],[],"import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {Chart} from 'chart.js/auto';\r\n\r\nconst LineChart = ({chartData}) => {\r\n  return <Line data={chartData} />\r\n}\r\n\r\nexport default LineChart","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\PieChart.js",["452"],[],"import React from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\nimport {Chart} from 'chart.js/auto';\r\n\r\nconst PieChart = ({chartData}) => {\r\n  return <Pie data={chartData} />\r\n}\r\n\r\nexport default PieChart",{"ruleId":"453","severity":1,"message":"454","line":15,"column":17,"nodeType":"455","messageId":"456","endLine":15,"endColumn":24},{"ruleId":"453","severity":1,"message":"457","line":19,"column":17,"nodeType":"455","messageId":"456","endLine":19,"endColumn":22},{"ruleId":"453","severity":1,"message":"458","line":1,"column":9,"nodeType":"455","messageId":"456","endLine":1,"endColumn":12},{"ruleId":"453","severity":1,"message":"459","line":2,"column":7,"nodeType":"455","messageId":"456","endLine":2,"endColumn":12},{"ruleId":"460","severity":1,"message":"461","line":73,"column":6,"nodeType":"462","endLine":73,"endColumn":8,"suggestions":"463"},{"ruleId":"460","severity":1,"message":"461","line":77,"column":6,"nodeType":"462","endLine":77,"endColumn":8,"suggestions":"464"},{"ruleId":"453","severity":1,"message":"465","line":14,"column":35,"nodeType":"455","messageId":"456","endLine":14,"endColumn":42},{"ruleId":"453","severity":1,"message":"466","line":14,"column":44,"nodeType":"455","messageId":"456","endLine":14,"endColumn":51},{"ruleId":"467","severity":1,"message":"468","line":37,"column":17,"nodeType":"469","messageId":"470","endLine":37,"endColumn":18,"suggestions":"471"},{"ruleId":"467","severity":1,"message":"468","line":37,"column":33,"nodeType":"469","messageId":"470","endLine":37,"endColumn":34,"suggestions":"472"},{"ruleId":"453","severity":1,"message":"473","line":1,"column":8,"nodeType":"455","messageId":"456","endLine":1,"endColumn":13},{"ruleId":"453","severity":1,"message":"473","line":1,"column":8,"nodeType":"455","messageId":"456","endLine":1,"endColumn":13},{"ruleId":"453","severity":1,"message":"474","line":11,"column":11,"nodeType":"455","messageId":"456","endLine":11,"endColumn":21},{"ruleId":"453","severity":1,"message":"475","line":11,"column":23,"nodeType":"455","messageId":"456","endLine":11,"endColumn":36},{"ruleId":"453","severity":1,"message":"473","line":1,"column":8,"nodeType":"455","messageId":"456","endLine":1,"endColumn":13},{"ruleId":"460","severity":1,"message":"476","line":44,"column":6,"nodeType":"462","endLine":44,"endColumn":18,"suggestions":"477"},{"ruleId":"453","severity":1,"message":"478","line":24,"column":11,"nodeType":"455","messageId":"456","endLine":24,"endColumn":15},{"ruleId":"460","severity":1,"message":"476","line":45,"column":6,"nodeType":"462","endLine":45,"endColumn":22,"suggestions":"479"},{"ruleId":"453","severity":1,"message":"478","line":16,"column":11,"nodeType":"455","messageId":"456","endLine":16,"endColumn":15},{"ruleId":"460","severity":1,"message":"480","line":31,"column":6,"nodeType":"462","endLine":31,"endColumn":8,"suggestions":"481"},{"ruleId":"482","severity":1,"message":"483","line":34,"column":42,"nodeType":"484","messageId":"485","endLine":34,"endColumn":43},{"ruleId":"453","severity":1,"message":"478","line":9,"column":11,"nodeType":"455","messageId":"456","endLine":9,"endColumn":15},{"ruleId":"453","severity":1,"message":"465","line":22,"column":61,"nodeType":"455","messageId":"456","endLine":22,"endColumn":68},{"ruleId":"453","severity":1,"message":"465","line":27,"column":44,"nodeType":"455","messageId":"456","endLine":27,"endColumn":51},{"ruleId":"453","severity":1,"message":"466","line":27,"column":53,"nodeType":"455","messageId":"456","endLine":27,"endColumn":60},{"ruleId":"453","severity":1,"message":"478","line":29,"column":11,"nodeType":"455","messageId":"456","endLine":29,"endColumn":15},{"ruleId":"460","severity":1,"message":"476","line":53,"column":6,"nodeType":"462","endLine":53,"endColumn":8,"suggestions":"486"},{"ruleId":"453","severity":1,"message":"465","line":27,"column":48,"nodeType":"455","messageId":"456","endLine":27,"endColumn":55},{"ruleId":"453","severity":1,"message":"466","line":27,"column":57,"nodeType":"455","messageId":"456","endLine":27,"endColumn":64},{"ruleId":"453","severity":1,"message":"478","line":29,"column":11,"nodeType":"455","messageId":"456","endLine":29,"endColumn":15},{"ruleId":"460","severity":1,"message":"476","line":53,"column":6,"nodeType":"462","endLine":53,"endColumn":8,"suggestions":"487"},{"ruleId":"453","severity":1,"message":"488","line":24,"column":10,"nodeType":"455","messageId":"456","endLine":24,"endColumn":24},{"ruleId":"453","severity":1,"message":"489","line":24,"column":26,"nodeType":"455","messageId":"456","endLine":24,"endColumn":43},{"ruleId":"453","severity":1,"message":"478","line":28,"column":11,"nodeType":"455","messageId":"456","endLine":28,"endColumn":15},{"ruleId":"460","severity":1,"message":"490","line":52,"column":6,"nodeType":"462","endLine":52,"endColumn":8,"suggestions":"491"},{"ruleId":"460","severity":1,"message":"492","line":65,"column":6,"nodeType":"462","endLine":65,"endColumn":12,"suggestions":"493"},{"ruleId":"460","severity":1,"message":"494","line":83,"column":6,"nodeType":"462","endLine":83,"endColumn":8,"suggestions":"495"},{"ruleId":"460","severity":1,"message":"496","line":45,"column":6,"nodeType":"462","endLine":45,"endColumn":8,"suggestions":"497"},{"ruleId":"460","severity":1,"message":"498","line":49,"column":6,"nodeType":"462","endLine":49,"endColumn":16,"suggestions":"499"},{"ruleId":"460","severity":1,"message":"476","line":45,"column":6,"nodeType":"462","endLine":45,"endColumn":18,"suggestions":"500"},{"ruleId":"460","severity":1,"message":"476","line":43,"column":6,"nodeType":"462","endLine":43,"endColumn":18,"suggestions":"501"},{"ruleId":"453","severity":1,"message":"478","line":30,"column":11,"nodeType":"455","messageId":"456","endLine":30,"endColumn":15},{"ruleId":"460","severity":1,"message":"494","line":77,"column":6,"nodeType":"462","endLine":77,"endColumn":8,"suggestions":"502"},{"ruleId":"460","severity":1,"message":"503","line":81,"column":6,"nodeType":"462","endLine":81,"endColumn":8,"suggestions":"504"},{"ruleId":"460","severity":1,"message":"505","line":25,"column":6,"nodeType":"462","endLine":25,"endColumn":8,"suggestions":"506"},{"ruleId":"453","severity":1,"message":"507","line":24,"column":10,"nodeType":"455","messageId":"456","endLine":24,"endColumn":14},{"ruleId":"460","severity":1,"message":"480","line":44,"column":6,"nodeType":"462","endLine":44,"endColumn":18,"suggestions":"508"},{"ruleId":"482","severity":1,"message":"483","line":59,"column":42,"nodeType":"484","messageId":"485","endLine":59,"endColumn":43},{"ruleId":"482","severity":1,"message":"483","line":63,"column":53,"nodeType":"484","messageId":"485","endLine":63,"endColumn":54},{"ruleId":"482","severity":1,"message":"483","line":73,"column":55,"nodeType":"484","messageId":"485","endLine":73,"endColumn":56},{"ruleId":"460","severity":1,"message":"505","line":122,"column":6,"nodeType":"462","endLine":122,"endColumn":73,"suggestions":"509"},{"ruleId":"460","severity":1,"message":"510","line":126,"column":6,"nodeType":"462","endLine":126,"endColumn":73,"suggestions":"511"},{"ruleId":"453","severity":1,"message":"512","line":16,"column":3,"nodeType":"455","messageId":"456","endLine":16,"endColumn":15},{"ruleId":"453","severity":1,"message":"513","line":23,"column":8,"nodeType":"455","messageId":"456","endLine":23,"endColumn":16},{"ruleId":"453","severity":1,"message":"514","line":25,"column":8,"nodeType":"455","messageId":"456","endLine":25,"endColumn":17},{"ruleId":"453","severity":1,"message":"515","line":26,"column":8,"nodeType":"455","messageId":"456","endLine":26,"endColumn":16},{"ruleId":"453","severity":1,"message":"516","line":50,"column":10,"nodeType":"455","messageId":"456","endLine":50,"endColumn":18},{"ruleId":"453","severity":1,"message":"517","line":50,"column":20,"nodeType":"455","messageId":"456","endLine":50,"endColumn":31},{"ruleId":"482","severity":1,"message":"483","line":166,"column":42,"nodeType":"484","messageId":"485","endLine":166,"endColumn":43},{"ruleId":"482","severity":1,"message":"483","line":170,"column":53,"nodeType":"484","messageId":"485","endLine":170,"endColumn":54},{"ruleId":"482","severity":1,"message":"483","line":184,"column":55,"nodeType":"484","messageId":"485","endLine":184,"endColumn":56},{"ruleId":"460","severity":1,"message":"518","line":189,"column":6,"nodeType":"462","endLine":189,"endColumn":65,"suggestions":"519"},{"ruleId":"460","severity":1,"message":"520","line":193,"column":6,"nodeType":"462","endLine":193,"endColumn":65,"suggestions":"521"},{"ruleId":"460","severity":1,"message":"505","line":197,"column":6,"nodeType":"462","endLine":197,"endColumn":65,"suggestions":"522"},{"ruleId":"453","severity":1,"message":"523","line":13,"column":8,"nodeType":"455","messageId":"456","endLine":13,"endColumn":13},{"ruleId":"453","severity":1,"message":"478","line":29,"column":11,"nodeType":"455","messageId":"456","endLine":29,"endColumn":15},{"ruleId":"453","severity":1,"message":"457","line":29,"column":17,"nodeType":"455","messageId":"456","endLine":29,"endColumn":22},{"ruleId":"482","severity":1,"message":"483","line":87,"column":45,"nodeType":"484","messageId":"485","endLine":87,"endColumn":46},{"ruleId":"482","severity":1,"message":"483","line":90,"column":47,"nodeType":"484","messageId":"485","endLine":90,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":93,"column":51,"nodeType":"484","messageId":"485","endLine":93,"endColumn":52},{"ruleId":"460","severity":1,"message":"524","line":102,"column":6,"nodeType":"462","endLine":102,"endColumn":53,"suggestions":"525"},{"ruleId":"453","severity":1,"message":"526","line":3,"column":10,"nodeType":"455","messageId":"456","endLine":3,"endColumn":24},{"ruleId":"482","severity":1,"message":"483","line":32,"column":47,"nodeType":"484","messageId":"485","endLine":32,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":36,"column":53,"nodeType":"484","messageId":"485","endLine":36,"endColumn":54},{"ruleId":"460","severity":1,"message":"505","line":41,"column":6,"nodeType":"462","endLine":41,"endColumn":8,"suggestions":"527"},{"ruleId":"453","severity":1,"message":"528","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"453","severity":1,"message":"529","line":6,"column":10,"nodeType":"455","messageId":"456","endLine":6,"endColumn":24},{"ruleId":"482","severity":1,"message":"483","line":84,"column":47,"nodeType":"484","messageId":"485","endLine":84,"endColumn":48},{"ruleId":"482","severity":1,"message":"483","line":88,"column":53,"nodeType":"484","messageId":"485","endLine":88,"endColumn":54},{"ruleId":"460","severity":1,"message":"505","line":93,"column":6,"nodeType":"462","endLine":93,"endColumn":33,"suggestions":"530"},{"ruleId":"460","severity":1,"message":"510","line":97,"column":6,"nodeType":"462","endLine":97,"endColumn":33,"suggestions":"531"},{"ruleId":"453","severity":1,"message":"528","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"482","severity":1,"message":"483","line":74,"column":42,"nodeType":"484","messageId":"485","endLine":74,"endColumn":43},{"ruleId":"482","severity":1,"message":"483","line":78,"column":53,"nodeType":"484","messageId":"485","endLine":78,"endColumn":54},{"ruleId":"482","severity":1,"message":"483","line":82,"column":55,"nodeType":"484","messageId":"485","endLine":82,"endColumn":56},{"ruleId":"460","severity":1,"message":"505","line":87,"column":6,"nodeType":"462","endLine":87,"endColumn":45,"suggestions":"532"},{"ruleId":"460","severity":1,"message":"518","line":91,"column":6,"nodeType":"462","endLine":91,"endColumn":45,"suggestions":"533"},{"ruleId":"482","severity":1,"message":"483","line":34,"column":42,"nodeType":"484","messageId":"485","endLine":34,"endColumn":43},{"ruleId":"482","severity":1,"message":"483","line":38,"column":53,"nodeType":"484","messageId":"485","endLine":38,"endColumn":54},{"ruleId":"482","severity":1,"message":"483","line":42,"column":55,"nodeType":"484","messageId":"485","endLine":42,"endColumn":56},{"ruleId":"460","severity":1,"message":"505","line":47,"column":6,"nodeType":"462","endLine":47,"endColumn":8,"suggestions":"534"},{"ruleId":"460","severity":1,"message":"505","line":41,"column":6,"nodeType":"462","endLine":41,"endColumn":8,"suggestions":"535"},{"ruleId":"460","severity":1,"message":"505","line":25,"column":6,"nodeType":"462","endLine":25,"endColumn":8,"suggestions":"536"},{"ruleId":"453","severity":1,"message":"528","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"453","severity":1,"message":"528","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"453","severity":1,"message":"473","line":1,"column":8,"nodeType":"455","messageId":"456","endLine":1,"endColumn":13},{"ruleId":"453","severity":1,"message":"465","line":28,"column":5,"nodeType":"455","messageId":"456","endLine":28,"endColumn":12},{"ruleId":"453","severity":1,"message":"466","line":29,"column":5,"nodeType":"455","messageId":"456","endLine":29,"endColumn":12},{"ruleId":"467","severity":1,"message":"468","line":62,"column":17,"nodeType":"469","messageId":"470","endLine":62,"endColumn":18,"suggestions":"537"},{"ruleId":"467","severity":1,"message":"468","line":62,"column":33,"nodeType":"469","messageId":"470","endLine":62,"endColumn":34,"suggestions":"538"},{"ruleId":"460","severity":1,"message":"539","line":97,"column":6,"nodeType":"462","endLine":97,"endColumn":8,"suggestions":"540"},{"ruleId":"541","severity":1,"message":"542","line":66,"column":68,"nodeType":"543","messageId":"544","endLine":66,"endColumn":70},{"ruleId":"541","severity":1,"message":"542","line":66,"column":69,"nodeType":"543","messageId":"544","endLine":66,"endColumn":71},{"ruleId":"541","severity":1,"message":"542","line":66,"column":69,"nodeType":"543","messageId":"544","endLine":66,"endColumn":71},{"ruleId":"453","severity":1,"message":"545","line":3,"column":9,"nodeType":"455","messageId":"456","endLine":3,"endColumn":14},{"ruleId":"453","severity":1,"message":"545","line":3,"column":9,"nodeType":"455","messageId":"456","endLine":3,"endColumn":14},{"ruleId":"453","severity":1,"message":"545","line":3,"column":9,"nodeType":"455","messageId":"456","endLine":3,"endColumn":14},"no-unused-vars","'setCart' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'API' is defined but never used.","'axios' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.","ArrayExpression",["546"],["547"],"'loading' is assigned a value but never used.","'success' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["548","549"],["550","551"],"'React' is defined but never used.","'authActive' is assigned a value but never used.","'setAuthActive' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'preLoad', 'token', and 'userId'. Either include them or remove the dependency array.",["552"],"'user' is assigned a value but never used.",["553"],"React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["554"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["555"],["556"],"'productDetails' is assigned a value but never used.","'setProductDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'preLoadShippingAddress', 'token', and 'userId'. Either include them or remove the dependency array.",["557"],"React Hook useEffect has a missing dependency: 'loadSubTotal_value'. Either include it or remove the dependency array.",["558"],"React Hook useEffect has missing dependencies: 'preLoadCart', 'token', and 'userId'. Either include them or remove the dependency array.",["559"],"React Hook useEffect has missing dependencies: 'cartItemProductId' and 'getProductDetails'. Either include them or remove the dependency array.",["560"],"React Hook useEffect has missing dependencies: 'product._id' and 'updateQuantity'. Either include them or remove the dependency array. If 'updateQuantity' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["561"],["562"],["563"],["564"],"React Hook useEffect has missing dependencies: 'preLoadUser', 'token', and 'userId'. Either include them or remove the dependency array.",["565"],"React Hook useEffect has missing dependencies: 'token' and 'user._id'. Either include them or remove the dependency array.",["566"],"'name' is assigned a value but never used.",["567"],["568"],"React Hook useEffect has missing dependencies: 'loadCountValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["569"],"'getCustomers' is defined but never used.","'BarChart' is defined but never used.","'LineChart' is defined but never used.","'PieChart' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadStatusValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["570"],"React Hook useEffect has missing dependencies: 'loadCommentValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["571"],["572"],"'Cross' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCountValues'. Either include it or remove the dependency array.",["573"],"'deleteCustomer' is defined but never used.",["574"],"'useEffect' is defined but never used.","'deleteEmployee' is defined but never used.",["575"],["576"],["577"],["578"],["579"],["580"],["581"],["582","583"],["584","585"],"React Hook useEffect has a missing dependency: 'loadValues'. Either include it or remove the dependency array.",["586"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Chart' is defined but never used.",{"desc":"587","fix":"588"},{"desc":"587","fix":"589"},{"messageId":"590","fix":"591","desc":"592"},{"messageId":"593","fix":"594","desc":"595"},{"messageId":"590","fix":"596","desc":"592"},{"messageId":"593","fix":"597","desc":"595"},{"desc":"598","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"604","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"598","fix":"617"},{"desc":"598","fix":"618"},{"desc":"611","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"622","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"622","fix":"647"},{"desc":"622","fix":"648"},{"desc":"622","fix":"649"},{"messageId":"590","fix":"650","desc":"592"},{"messageId":"593","fix":"651","desc":"595"},{"messageId":"590","fix":"652","desc":"592"},{"messageId":"593","fix":"653","desc":"595"},{"desc":"654","fix":"655"},"Update the dependencies array to be: [productId]",{"range":"656","text":"657"},{"range":"658","text":"657"},"removeEscape",{"range":"659","text":"660"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"661","text":"662"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"663","text":"660"},{"range":"664","text":"662"},"Update the dependencies array to be: [currentTab, preLoad, token, userId]",{"range":"665","text":"666"},"Update the dependencies array to be: [accountsActive, preLoad, token, userId]",{"range":"667","text":"668"},"Update the dependencies array to be: [token, userId]",{"range":"669","text":"670"},"Update the dependencies array to be: [preLoad, token, userId]",{"range":"671","text":"672"},{"range":"673","text":"672"},"Update the dependencies array to be: [preLoadShippingAddress, token, userId]",{"range":"674","text":"675"},"Update the dependencies array to be: [cart, loadSubTotal_value]",{"range":"676","text":"677"},"Update the dependencies array to be: [preLoadCart, token, userId]",{"range":"678","text":"679"},"Update the dependencies array to be: [cartItemProductId, getProductDetails]",{"range":"680","text":"681"},"Update the dependencies array to be: [product._id, quantity, updateQuantity]",{"range":"682","text":"683"},{"range":"684","text":"666"},{"range":"685","text":"666"},{"range":"686","text":"679"},"Update the dependencies array to be: [preLoadUser, token, userId]",{"range":"687","text":"688"},"Update the dependencies array to be: [token, user._id]",{"range":"689","text":"690"},"Update the dependencies array to be: [currentTab, token, userId]",{"range":"691","text":"692"},"Update the dependencies array to be: [orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",{"range":"693","text":"694"},"Update the dependencies array to be: [orderActive, orderUpdateActive, status, orderEmployeeAssignActive, loadCountValues, user._id, token]",{"range":"695","text":"696"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",{"range":"697","text":"698"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, loadCommentValues, user._id, token]",{"range":"699","text":"700"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",{"range":"701","text":"702"},"Update the dependencies array to be: [category, addProductActive, editProductActive, loadCountValues]",{"range":"703","text":"704"},{"range":"705","text":"690"},"Update the dependencies array to be: [status, addEmployeeActive, user._id, token]",{"range":"706","text":"707"},"Update the dependencies array to be: [status, addEmployeeActive, loadCountValues, user._id, token]",{"range":"708","text":"709"},"Update the dependencies array to be: [orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"710","text":"711"},"Update the dependencies array to be: [loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"712","text":"713"},{"range":"714","text":"690"},{"range":"715","text":"690"},{"range":"716","text":"690"},{"range":"717","text":"660"},{"range":"718","text":"662"},{"range":"719","text":"660"},{"range":"720","text":"662"},"Update the dependencies array to be: [loadValues]",{"range":"721","text":"722"},[1994,1996],"[productId]",[2058,2060],[902,903],"",[902,902],"\\",[918,919],[918,918],[1232,1244],"[currentTab, preLoad, token, userId]",[1292,1308],"[accountsActive, preLoad, token, userId]",[913,915],"[token, userId]",[1327,1329],"[preLoad, token, userId]",[1372,1374],[1619,1621],"[preLoadShippingAddress, token, userId]",[1908,1914],"[cart, loadSubTotal_value]",[2314,2316],"[preLoadCart, token, userId]",[1117,1119],"[cartItemProductId, getProductDetails]",[1195,1205],"[product._id, quantity, updateQuantity]",[1298,1310],[1197,1209],[1877,1879],[1944,1946],"[preLoadUser, token, userId]",[719,721],"[token, user._id]",[1573,1585],"[currentTab, token, userId]",[3668,3735],"[orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",[3806,3873],"[orderActive, orderUpdateActive, status, orderEmployeeAssignActive, loadCountValues, user._id, token]",[6060,6119],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",[6192,6251],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, loadCommentValues, user._id, token]",[6324,6383],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",[3101,3148],"[category, addProductActive, editProductActive, loadCountValues]",[1313,1315],[2851,2878],"[status, addEmployeeActive, user._id, token]",[2949,2976],"[status, addEmployeeActive, loadCountValues, user._id, token]",[2732,2771],"[orderUpdateActive, orderUpdatePayment, token, user._id]",[2843,2882],"[loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",[1487,1489],[1223,1225],[719,721],[1281,1282],[1281,1281],[1297,1298],[1297,1297],[2522,2524],"[loadValues]"]