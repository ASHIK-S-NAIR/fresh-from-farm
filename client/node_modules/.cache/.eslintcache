[{"F:\\mern\\projects\\greenbeans\\client\\src\\index.js":"1","F:\\mern\\projects\\greenbeans\\client\\src\\App.js":"2","F:\\mern\\projects\\greenbeans\\client\\src\\Routes.js":"3","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js":"4","F:\\mern\\projects\\greenbeans\\client\\src\\backend.js":"5","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\index.js":"6","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js":"7","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js":"8","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js":"9","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js":"10","F:\\mern\\projects\\greenbeans\\client\\src\\context\\Context.js":"11","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js":"12","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\AdminRoutes.js":"13","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\CustomerRoutes.js":"14","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\EmployeeRoutes.js":"15","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js":"16","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js":"17","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js":"18","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js":"19","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js":"20","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js":"21","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js":"22","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js":"23","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js":"24","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js":"25","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js":"26","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js":"27","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js":"28","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js":"29","F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js":"30","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js":"31","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js":"32","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js":"33","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js":"34","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js":"35","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js":"36","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js":"37","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js":"38","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js":"39","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js":"40","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js":"41","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js":"42","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js":"43","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js":"44","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js":"45","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js":"46","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js":"47","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js":"48","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js":"49","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js":"50","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js":"51","F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js":"52","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js":"53"},{"size":118,"mtime":1650340897013,"results":"54","hashOfConfig":"55"},{"size":240,"mtime":1650515144846,"results":"56","hashOfConfig":"55"},{"size":3274,"mtime":1656058335635,"results":"57","hashOfConfig":"55"},{"size":20278,"mtime":1656060358794,"results":"58","hashOfConfig":"55"},{"size":49,"mtime":1650587647917,"results":"59","hashOfConfig":"55"},{"size":1491,"mtime":1656045399326,"results":"60","hashOfConfig":"55"},{"size":2232,"mtime":1655975972548,"results":"61","hashOfConfig":"55"},{"size":74,"mtime":1654823535619,"results":"62","hashOfConfig":"55"},{"size":5120,"mtime":1656063156385,"results":"63","hashOfConfig":"55"},{"size":1156,"mtime":1654933658572,"results":"64","hashOfConfig":"55"},{"size":188,"mtime":1653533394206,"results":"65","hashOfConfig":"55"},{"size":4278,"mtime":1656117863379,"results":"66","hashOfConfig":"55"},{"size":356,"mtime":1656060724822,"results":"67","hashOfConfig":"55"},{"size":490,"mtime":1656060536702,"results":"68","hashOfConfig":"55"},{"size":364,"mtime":1656060630163,"results":"69","hashOfConfig":"55"},{"size":1078,"mtime":1651432461264,"results":"70","hashOfConfig":"71"},{"size":3704,"mtime":1654156424010,"results":"72","hashOfConfig":"55"},{"size":4335,"mtime":1655865571670,"results":"73","hashOfConfig":"55"},{"size":4534,"mtime":1655976986896,"results":"74","hashOfConfig":"55"},{"size":5356,"mtime":1653404673405,"results":"75","hashOfConfig":"55"},{"size":5346,"mtime":1655865708719,"results":"76","hashOfConfig":"55"},{"size":5288,"mtime":1655865834594,"results":"77","hashOfConfig":"55"},{"size":16311,"mtime":1656045889308,"results":"78","hashOfConfig":"55"},{"size":7930,"mtime":1654934288119,"results":"79","hashOfConfig":"55"},{"size":2811,"mtime":1653139219433,"results":"80","hashOfConfig":"55"},{"size":4320,"mtime":1655832640170,"results":"81","hashOfConfig":"55"},{"size":3170,"mtime":1655426202263,"results":"82","hashOfConfig":"55"},{"size":8388,"mtime":1653217028786,"results":"83","hashOfConfig":"55"},{"size":913,"mtime":1653185782697,"results":"84","hashOfConfig":"55"},{"size":6318,"mtime":1654757276660,"results":"85","hashOfConfig":"55"},{"size":5803,"mtime":1654992918917,"results":"86","hashOfConfig":"55"},{"size":8987,"mtime":1655830472663,"results":"87","hashOfConfig":"55"},{"size":9980,"mtime":1655814274079,"results":"88","hashOfConfig":"55"},{"size":7362,"mtime":1655892931797,"results":"89","hashOfConfig":"55"},{"size":4896,"mtime":1655900446802,"results":"90","hashOfConfig":"55"},{"size":4266,"mtime":1655804802407,"results":"91","hashOfConfig":"55"},{"size":5435,"mtime":1655029010559,"results":"92","hashOfConfig":"55"},{"size":3677,"mtime":1655164803377,"results":"93","hashOfConfig":"55"},{"size":6732,"mtime":1655900498756,"results":"94","hashOfConfig":"55"},{"size":2020,"mtime":1655030746252,"results":"95","hashOfConfig":"55"},{"size":5259,"mtime":1655254348856,"results":"96","hashOfConfig":"55"},{"size":5158,"mtime":1655268492591,"results":"97","hashOfConfig":"55"},{"size":8525,"mtime":1655834719005,"results":"98","hashOfConfig":"55"},{"size":5845,"mtime":1655856288485,"results":"99","hashOfConfig":"55"},{"size":3476,"mtime":1656028015909,"results":"100","hashOfConfig":"55"},{"size":6581,"mtime":1655834417190,"results":"101","hashOfConfig":"55"},{"size":4272,"mtime":1655804956610,"results":"102","hashOfConfig":"55"},{"size":4272,"mtime":1655804956610,"results":"103","hashOfConfig":"55"},{"size":2733,"mtime":1655812055343,"results":"104","hashOfConfig":"55"},{"size":2715,"mtime":1655814297103,"results":"105","hashOfConfig":"55"},{"size":5089,"mtime":1656060929561,"results":"106","hashOfConfig":"55"},{"size":351,"mtime":1655957674061,"results":"107","hashOfConfig":"55"},{"size":7816,"mtime":1656118388270,"results":"108","hashOfConfig":"55"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1kpwsys",{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lc3eax",{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"112"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"112"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"112"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"112"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"112"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"112"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"112"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"112"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"112"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"112"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"112"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"112"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\mern\\projects\\greenbeans\\client\\src\\index.js",[],[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\App.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Routes.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js",["304","305"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../auth/index\";\r\nimport cart from \"../icons/cart.svg\";\r\nimport {\r\n  getEmployeeStatus,\r\n  getUserCart,\r\n  updateEmployeeStatus,\r\n} from \"../user/index\";\r\n\r\nconst Nav = () => {\r\n  const [active, setActive] = useState(false);\r\n  const [toggled, setToggled] = useState(false);\r\n  const [cartCount, setCartCount] = useState();\r\n  const [employeeStatus, setEmployeeStatus] = useState();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const showDropDown = () => {\r\n    setActive(true);\r\n  };\r\n\r\n  const hideDropDown = () => {\r\n    setActive(false);\r\n  };\r\n\r\n  const toggle = () => {\r\n    setToggled(!toggled);\r\n  };\r\n\r\n  const getCartCount = async (user, token) => {\r\n    const data = await getUserCart(user._id, token);\r\n    if (data.error) {\r\n      console.log(data.error);\r\n    } else {\r\n      console.log(data.cart.length);\r\n      return setCartCount(data.cart.length);\r\n    }\r\n  };\r\n\r\n  const loadEmployeeStatus = async () => {\r\n    try {\r\n      const data = await getEmployeeStatus(\r\n        isAuthenticated().user._id,\r\n        isAuthenticated().token\r\n      );\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployeeStatus(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeStatus = async (employeeUserId, token, Estatus) => {\r\n    try {\r\n      const data = await updateEmployeeStatus(employeeUserId, token, Estatus);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return loadEmployeeStatus();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      getCartCount(user, token);\r\n    }\r\n  }, [cartCount]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      loadEmployeeStatus(isAuthenticated().user._id, isAuthenticated().token);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"nav-section\">\r\n      <div className=\"wrap nav-wrap\">\r\n        <div className=\"nav-left-sec\">\r\n          <ul className=\"nav-ul\">\r\n            <li className=\"nav-li\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Shop\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-li\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Contact Us\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"nav-logo-sec\">\r\n          <Link className=\"nav-logo\" to=\"/\">\r\n            fresh from farm\r\n          </Link>\r\n        </div>\r\n        <div className=\"nav-right-sec\">\r\n          {!isAuthenticated() && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <Link to=\"/signup\">\r\n                  <button className=\"nav-btn\">Sign Up</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-li\">\r\n                <Link to=\"/login\">\r\n                  <button className=\"nav-btn\">Log In</button>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <Link to={`/cart/${user._id}`}>\r\n                  <div className=\"nav-cart-icon-sec\">\r\n                    <div className=\"nav-cart-icon-value\">{cartCount}</div>\r\n                    <img src={cart} alt=\"\" className=\"nav-cart-icon\" />\r\n                  </div>\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className=\"nav-li nav-border\"\r\n                onMouseOver={showDropDown}\r\n                onMouseLeave={hideDropDown}\r\n              >\r\n                <button className=\"nav-btn\">\r\n                  {isAuthenticated().user.name.length > 6\r\n                    ? isAuthenticated().user.name.substring(0, 6)\r\n                    : isAuthenticated().user.name}\r\n                </button>\r\n                {active && (\r\n                  <ul className=\"nav-drop-ul\" onMouseOver={showDropDown}>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/customerboard/orders/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">My Orders</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/customerboard/accounts/${user._id}`}>\r\n                        {\" \"}\r\n                        <div className=\"nav-drop-li-div\">My Account</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/customerboard/settings/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">My Settings</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() => {\r\n                          logout(() => navigate(\"/\"));\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n            <ul className=\"nav-ul\">\r\n              <li\r\n                className=\"nav-li nav-border\"\r\n                onMouseOver={showDropDown}\r\n                onMouseLeave={hideDropDown}\r\n              >\r\n                <button className=\"nav-btn\">\r\n                  {isAuthenticated().user.name.length > 6\r\n                    ? isAuthenticated().user.name.substring(0, 6)\r\n                    : isAuthenticated().user.name}\r\n                </button>\r\n                {active && (\r\n                  <ul className=\"nav-drop-ul\" onMouseOver={showDropDown}>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/dashboard/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Dashboard</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/deliveries/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Deliveries</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/accounts/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Account</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/employeeboard/settings/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Settings</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      {employeeStatus === \"Available\" && (\r\n                        <button\r\n                          className=\"nav-drop-btn\"\r\n                          onClick={() =>\r\n                            handleEmployeeStatus(\r\n                              isAuthenticated().user._id,\r\n                              isAuthenticated().token,\r\n                              \"NotAvailable\"\r\n                            )\r\n                          }\r\n                        >\r\n                          Make Not Available\r\n                        </button>\r\n                      )}\r\n                      {employeeStatus === \"NotAvailable\" && (\r\n                        <button\r\n                          className=\"nav-drop-btn\"\r\n                          onClick={() =>\r\n                            handleEmployeeStatus(\r\n                              isAuthenticated().user._id,\r\n                              isAuthenticated().token,\r\n                              \"Available\"\r\n                            )\r\n                          }\r\n                        >\r\n                          Make Available\r\n                        </button>\r\n                      )}\r\n                      {employeeStatus === \"OnDuty\" && (\r\n                        <button className=\"nav-drop-btn button-unclickable\">\r\n                          On Duty\r\n                        </button>\r\n                      )}\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() => {\r\n                          logout(() => navigate(\"/\"));\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 2 && (\r\n            <ul className=\"nav-ul\">\r\n              <li\r\n                className=\"nav-li nav-border\"\r\n                onMouseOver={showDropDown}\r\n                onMouseLeave={hideDropDown}\r\n              >\r\n                <button className=\"nav-btn\">\r\n                  {isAuthenticated().user.name.length > 6\r\n                    ? isAuthenticated().user.name.substring(0, 6)\r\n                    : isAuthenticated().user.name}\r\n                </button>\r\n                {active && (\r\n                  <ul className=\"nav-drop-ul\" onMouseOver={showDropDown}>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/admindashpanel/dashboard/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Admin Panel</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/adminboard/accounts/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Account</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <Link to={`/adminboard/settings/${user._id}`}>\r\n                        <div className=\"nav-drop-li-div\">Settings</div>\r\n                      </Link>\r\n                    </li>\r\n                    <li className=\"nav-drop-li\">\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() => {\r\n                          logout(() => navigate(\"/\"));\r\n                        }}\r\n                      >\r\n                        Log Out\r\n                      </button>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* nav-mobile section starts */}\r\n\r\n      <div className=\"wrap nav-wrap-mobile\">\r\n        <Link className=\"nav-logo\" to=\"/\">\r\n          fresh from farm\r\n        </Link>\r\n        <div className=\"nav-right-sec-mobile\">\r\n          {!isAuthenticated() && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <Link to=\"/signup\">\r\n                  <button className=\"nav-btn\">Sign Up</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-li nav-border\">\r\n                <Link to=\"/login\">\r\n                  <button className=\"nav-btn\">Log In</button>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n          {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/cart/${user._id}`}>\r\n                      <button className=\"nav-btn\">Cart</button>\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/customerboard/orders/${user._id}`}>\r\n                      {\" \"}\r\n                      My Orders\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/customerboard/accounts/${user._id}`}>\r\n                      {\" \"}\r\n                      My Account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/customerboard/settings/${user._id}`}>\r\n                      {\" \"}\r\n                      My Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <button\r\n                      className=\"nav-drop-btn\"\r\n                      onClick={() => {\r\n                        logout(() => navigate(\"/\"));\r\n                        toggle();\r\n                      }}\r\n                    >\r\n                      Log Out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/employeeboard/dashboard/${user._id}`}>\r\n                      {\" \"}\r\n                      Dashboard\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    {\" \"}\r\n                    <Link to={`/employeeboard/deliveries/${user._id}`}>\r\n                      {\" \"}\r\n                      Deliveries\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/employeeboard/accounts/${user._id}`}>\r\n                      {\" \"}\r\n                      Account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/employeeboard/settings/${user._id}`}>\r\n                      {\" \"}\r\n                      Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    {employeeStatus === \"Available\" && (\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() =>\r\n                          handleEmployeeStatus(\r\n                            isAuthenticated().user._id,\r\n                            isAuthenticated().token,\r\n                            \"NotAvailable\"\r\n                          )\r\n                        }\r\n                      >\r\n                        Make Not Available\r\n                      </button>\r\n                    )}\r\n                    {employeeStatus === \"NotAvailable\" && (\r\n                      <button\r\n                        className=\"nav-drop-btn\"\r\n                        onClick={() =>\r\n                          handleEmployeeStatus(\r\n                            isAuthenticated().user._id,\r\n                            isAuthenticated().token,\r\n                            \"Available\"\r\n                          )\r\n                        }\r\n                      >\r\n                        Make Available\r\n                      </button>\r\n                    )}\r\n                    {employeeStatus === \"OnDuty\" && (\r\n                      <button className=\"nav-drop-btn button-unclickable\">\r\n                        On Duty\r\n                      </button>\r\n                    )}\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <button\r\n                      className=\"nav-drop-btn\"\r\n                      onClick={() => {\r\n                        logout(() => navigate(\"/\"));\r\n                      }}\r\n                    >\r\n                      Log Out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {isAuthenticated() && isAuthenticated().user.role === 2 && (\r\n            <ul className=\"nav-ul\">\r\n              <li className=\"nav-li\">\r\n                <div\r\n                  className={`nav-handburger-section ${\r\n                    toggled ? \"active\" : \"\"\r\n                  } `}\r\n                  onClick={toggle}\r\n                >\r\n                  <div className=\"nav-handburger-sec-one\"></div>\r\n                  <div className=\"nav-handburger-sec-two\"></div>\r\n                  <div className=\"nav-handburger-sec-three\"></div>\r\n                </div>\r\n                <ul className={`nav-drop-ul ${toggled ? \"active\" : \"\"}`}>\r\n                  <li className=\"nav-drop-li\">Shop</li>\r\n                  <li className=\"nav-drop-li\">Contact Us</li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/admindashpanel/dashboard/${user._id}`}>\r\n                      Admin Panel\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/adminboard/accounts/${user._id}`}>\r\n                      {\" \"}\r\n                      Account\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <Link to={`/adminboard/settings/${user._id}`}>\r\n                      {\" \"}\r\n                      Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-drop-li\">\r\n                    <button\r\n                      className=\"nav-drop-btn\"\r\n                      onClick={() => {\r\n                        toggle();\r\n                        logout(() => navigate(\"/\"));\r\n                      }}\r\n                    >\r\n                      Log Out\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* nav-mobile section ends */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\backend.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\auth\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js",["306"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { API } from \"../backend\";\r\nimport { getAllProducts } from \"./helper/productDetailHelper\";\r\n\r\nconst Shop = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const loadAllProducts = async () => {\r\n    try {\r\n      const data = await getAllProducts(\"all\");\r\n      return setProducts(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"shop-section\">\r\n      <div className=\"wrap hero-wrap\">\r\n        <h1>This is hot hero section</h1>\r\n      </div>\r\n\r\n      <div className=\"wrap products-wrap\">\r\n        {products.map((product, index) => {\r\n          return (\r\n            <Link to={`/product/${product._id}`} key={index}>\r\n              <div className=\"product-sec\">\r\n                {product.pStock === 0 && (\r\n                  <div className=\"outOfStock\">\r\n                    <div className=\"outOfStock-div\">\r\n                      <p className=\"outOfStock-p\">Out Of Stock</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div\r\n                  className={`product-category-sec ${\r\n                    product.pCategory === \"vegetable\"\r\n                      ? \"color-green\"\r\n                      : \"color-orange\"\r\n                  }`}\r\n                >\r\n                  <p className=\"product-category\">\r\n                    {product.pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                  </p>\r\n                </div>\r\n                <img\r\n                  src={`${API}/product/photo/${product._id}`}\r\n                  className=\"product-img\"\r\n                />\r\n                <div className=\"product-info\">\r\n                  <h2 className=\"product-name\">{product.pName}</h2>\r\n                  <h3 className=\"product-stock\">\r\n                    {product.pStock} Kg in stock\r\n                  </h3>\r\n                  <h1 className=\"product-price\">{product.pPrice}/Kg</h1>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js",["307","308"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js",["309"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { API } from \"../backend\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getProduct, getAllProducts } from \"./helper/productDetailHelper\";\r\nimport { isAuthenticated } from \"../auth/index\";\r\nimport { addToUserCart } from \"../user\";\r\n\r\nconst ProductDetail = () => {\r\n  const [product, setProduct] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [quantity, setQuantity] = useState(\"1\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { productId } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const loadProduct = async (productId) => {\r\n    try {\r\n      const productData = await getProduct(productId);\r\n\r\n      return setProduct(productData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadProducts = async (productsData) => {\r\n    try {\r\n      const productsData = await getAllProducts(\"all\");\r\n      return setProducts(productsData);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = async (productId, quantity) => {\r\n    try {\r\n      if (isAuthenticated() && user.role === 0) {\r\n        var data = await addToUserCart(user._id, token, {\r\n          productId,\r\n          quantity,\r\n        });\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          return navigate(`/cart/${user._id}`);\r\n        }\r\n      } else if (isAuthenticated()) {\r\n        return \"\";\r\n      } else {\r\n        navigate(\"/login\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProduct(productId);\r\n  }, [productId]);\r\n\r\n  useEffect(() => {\r\n    loadProducts(productId);\r\n  }, []);\r\n  return (\r\n    <section className=\"productDetail productDetail-section\">\r\n      <div className=\"wrap productDetail-wrap\">\r\n        <div className=\"productDetail-img-sec\">\r\n          <div className=\"productDetail-img-container\">\r\n            <div\r\n              className={`productDetail-category-sec ${\r\n                product.pCategory === \"vegetable\"\r\n                  ? \"color-green\"\r\n                  : \"color-orange\"\r\n              }`}\r\n            >\r\n              <p className=\"productDetail-category\">\r\n                {product.pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n              </p>\r\n            </div>\r\n            <img\r\n              src={`${API}/product/photo/${productId}`}\r\n              alt=\"\"\r\n              className=\"productDetail-img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"productDetail-info\">\r\n          <h1 className=\"productDetail-name\">{product.pName}</h1>\r\n          <h2 className=\"productDetail-price\">\r\n            ₹<span>{product.pPrice + \"/Kg\"}</span>\r\n          </h2>\r\n          <p className=\"productDetail-description\">{product.pDescription}</p>\r\n          <h3 className=\"productDetail-stock\">{product.pStock}kg in stock</h3>\r\n          <div className=\"productDetail-quantity-sec\">\r\n            <p className=\"productDetail-quantity-p\">QTY:</p>{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              className=\"productDetail-quantity\"\r\n              onChange={(e) => setQuantity(e.target.value)}\r\n              value={quantity}\r\n            />\r\n            <p className=\"productDetail-quantity-p\">Kg</p>\r\n          </div>\r\n          <button\r\n            className={`productDetail-btn ${\r\n              product.pStock === 0 ? \"button-unclickable\" : \"\"\r\n            }`}\r\n            onClick={() => handleAddToCart(product._id, quantity)}\r\n          >\r\n            Add to Cart\r\n          </button>\r\n          {product.pStock === 0 && (\r\n            <p className=\"productDetail-OOS\">Currently Out of Stock</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"wrap products-wrap\">\r\n        {products.map((product, index) => {\r\n          return (\r\n            <Link to={`/product/${product._id}`} key={index}>\r\n              <div className=\"product-sec\">\r\n                <div\r\n                  className={`product-category-sec ${\r\n                    product.pCategory === \"vegetable\"\r\n                      ? \"color-green\"\r\n                      : \"color-orange\"\r\n                  }`}\r\n                >\r\n                  <p className=\"product-category\">\r\n                    {product.pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                  </p>\r\n                </div>\r\n                <img\r\n                  src={`${API}/product/photo/${product._id}`}\r\n                  className=\"product-img\"\r\n                  alt=\"product img\"\r\n                />\r\n                <div className=\"product-info\">\r\n                  <h2 className=\"product-name\">{product.pName}</h2>\r\n                  <h3 className=\"product-stock\">\r\n                    {product.pStock} Kg in stock\r\n                  </h3>\r\n                  <h1 className=\"product-price\">{product.pPrice}/Kg</h1>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js",["310"],[],"import { API } from \"../../backend\";\r\nconst axios = require(\"axios\");\r\n\r\n// getProduct\r\nexport const getProduct = async (productId) => {\r\n  try {\r\n    const result = await fetch(`${API}/product/${productId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    }).then((res) => res.json());\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// getAllProducts\r\nexport const getAllProducts = async (category) => {\r\n  try {\r\n    const result = await fetch(`${API}/products/${category}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (userId, token, productId) => {\r\n  try {\r\n    const result = await fetch(`${API}/product/${productId}/${userId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\context\\Context.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js",["311","312","313","314"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\auth\\AdminRoutes.js",["315"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 2)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\CustomerRoutes.js",["316","317","318"],[],"import React, {useContext} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/Context\";\r\nimport {isAuthenticated} from \"./index\";\r\n\r\nconst CustomerRoutes = ({children}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n  const { authActive, setAuthActive } = useContext(AuthContext);\r\n\r\n  if(!(isAuthenticated() && isAuthenticated().user.role === 0)){\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default CustomerRoutes","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\EmployeeRoutes.js",["319"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst EmployeeRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 1)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default EmployeeRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js",["320"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../icons/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Orders from \"./Orders\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst CustomerBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n            <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <h3 className=\"userBoard-user-detail-name\">\r\n                {name.length > 6 ? name.substring(0, 6) : name}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/orders/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"orders\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Orders\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Accounts\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Settings\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"accounts\" && <Accounts userValues={values} />}\r\n          {tabActive === \"orders\" && <Orders userValues={values} />}\r\n          {tabActive === \"settings\" && <Settings userValues={values} />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CustomerBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js",["321","322"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport EditPersonalInformation from \"./EditPersonalInformation\";\r\nimport EditAddress from \"./EditAddress\";\r\nimport { getUser } from \"../user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Accounts = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [accountsActive, setAccountsActive] = useState(null);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name, email, phoneNumber, houseName, streetName } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, [accountsActive]);\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <AccountsContext.Provider value={{ accountsActive, setAccountsActive }}>\r\n        <h1 className=\"userBoard-right-header\">Account</h1>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <h2 className=\"userBoard-subHeader\">Personal Information</h2>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editpersonalinformation\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-single-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Email</label>\r\n                  <p className=\"userBoard-right-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Name</label>\r\n                  <p className=\"userBoard-right-value\">{name}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Phone</label>\r\n                  <p className=\"userBoard-right-value\">{phoneNumber}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <div className=\"userBoard-subHeader\">Address</div>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editaddress\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">House Name</label>\r\n                  <p className=\"userBoard-right-value\">{houseName}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Street</label>\r\n                  <p className=\"userBoard-right-value\">{streetName}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {accountsActive === \"editpersonalinformation\" && (\r\n          <EditPersonalInformation />\r\n        )}\r\n        {accountsActive === \"editaddress\" && <EditAddress />}\r\n      </AccountsContext.Provider>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js",["323","324","325"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUserOrders } from \"../user\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport moment from \"moment\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\n\r\nconst Orders = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(null);\r\n  const [order, setOrder] = useState();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const getUserOrderDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUserOrders(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserOrderDetails(userId, token);\r\n  }, []);\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Orders</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <table className=\"userBoard-right-customer-order-table\">\r\n          <thead className=\"userBoard-right-customer-order-table-head-sec\">\r\n            <tr>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Status\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Total\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"userBoard-right-customer-order-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"userBoard-right-customer-order-table-body-tr\"\r\n                  >\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      <div\r\n                        className={`userBoard-right-customer-order-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OemployeeId ? order.OemployeeId : \"Not Assigned\"}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-head-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                      <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js",["326","327"],[],"import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../auth\";\r\nimport { changePassword } from \"../user\";\r\n\r\nconst Settings = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { oldPassword, newPassword, confirmPassword, error, loading, success } =\r\n    values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(oldPassword && newPassword && confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      oldPassword.length < 6 ||\r\n      newPassword.length < 6 ||\r\n      confirmPassword < 6\r\n    ) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    if (!(newPassword === confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Password confirmation does not match\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await changePassword(userId, token, {\r\n        oldPassword,\r\n        newPassword,\r\n      });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      console.log(\"Success\");\r\n      setValues({ ...values, success: true, loading: \"\", error: \"\" });\r\n      logout(() => navigate(\"/\"));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, success: false })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Settings</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <div className=\"userBoard-righ-subsec-small\">\r\n          <div className=\"userBoard-right-subHead\">\r\n            <h2 className=\"userBoard-subHeader\">Change Password</h2>\r\n          </div>\r\n          <div className=\"userBoard-right-subInner\">\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">Old Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"oldPassword\")}\r\n                  value={oldPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"newPassword\")}\r\n                  value={newPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"confirmPassword\")}\r\n                  value={confirmPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className=\"userBoard-right-btn\" onClick={onSubmit}>\r\n              Change\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {error && errorMessage()}\r\n      {success && successMessage()}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js",["328","329","330","331"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst EditPersonalInformation = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n  };\r\n\r\n  const { email, name, phoneNumber, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        name: userDetails.name,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      };\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(name && phoneNumber)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      name === preLoadValues.name &&\r\n      phoneNumber === preLoadValues.phoneNumber\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    if (phoneNumber.length !== 10) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid phone Number\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({ name, phoneNumber }, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      return setAccountsActive(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Personal Information</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={name}\r\n                    onChange={handleChange(\"name\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={phoneNumber}\r\n                    onChange={handleChange(\"phoneNumber\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditPersonalInformation;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js",["332","333","334","335"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst EditAddress = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  };\r\n\r\n  const { email, houseName, streetName, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName\r\n      }\r\n\r\n      return setValues({\r\n        ...values,\r\n        houseName: userDetails.address.houseName,\r\n        email: userDetails.email,\r\n        streetName: userDetails.address.streetName\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(houseName && streetName)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      houseName === preLoadValues.houseName &&\r\n      streetName === preLoadValues.streetName\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    const address = {\r\n      houseName: houseName,\r\n      streetName: streetName\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({address}, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n\r\n      return setAccountsActive(null);\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Address</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n              <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">House Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={houseName}\r\n                    onChange={handleChange(\"houseName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Street Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={streetName}\r\n                    onChange={handleChange(\"streetName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditAddress;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js",["336","337","338","339","340"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  deleteFromCart,\r\n  getUser,\r\n  getUserCart,\r\n  updateFromUserCart,\r\n} from \"../user\";\r\nimport CartItem from \"./CartItem\";\r\n// import { getProduct } from \"./helper/productDetailHelper\";\r\n\r\nconst Cart = () => {\r\n  const [cart, setCart] = useState([]);\r\n  const [subTotal_items, setSubTotal_items] = useState(0);\r\n  const [subTotal_value, setSubTotal_value] = useState(0);\r\n  const [shippingAddress_state, setShippingAddress_state] = useState(\"default\");\r\n  const [shippingAddress, setShippingAddress] = useState({\r\n    shippingAddress_houseName: \" \",\r\n    shippingAddress_streetName: \" \",\r\n  });\r\n  const [productDetails, setProductDetails] = useState();\r\n\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { shippingAddress_houseName, shippingAddress_streetName } =\r\n    shippingAddress;\r\n\r\n  const preLoadCart = async (userId, token) => {\r\n    try {\r\n      const data = await getUserCart(userId, token);\r\n      // console.log(\"cart\", data);\r\n      return setCart(data.cart);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const preLoadShippingAddress = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        return setShippingAddress({\r\n          ...shippingAddress,\r\n          shippingAddress_houseName: data.address.houseName,\r\n          shippingAddress_streetName: data.address.streetName,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadCart(userId, token);\r\n  }, [userId, token]);\r\n\r\n  useEffect(() => {\r\n    preLoadShippingAddress(userId, token);\r\n  }, []);\r\n\r\n  const loadSubTotal_value = async () => {\r\n    var total = 0;\r\n    cart.map((cartItem) => {\r\n      return (total = total + cartItem.product.pPrice * cartItem.quantity);\r\n    });\r\n\r\n    return setSubTotal_value(total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubTotal_value();\r\n  }, [cart]);\r\n\r\n  useEffect(() => {\r\n    setSubTotal_items(cart.length);\r\n  }, [cart]);\r\n\r\n  const updateQuantity = async (productId, quantity) => {\r\n    try {\r\n      const data = await updateFromUserCart(userId, token, {\r\n        productId,\r\n        quantity,\r\n      });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        return preLoadCart(userId, token);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (productId) => {\r\n    try {\r\n      const data = await deleteFromCart(userId, token, productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return preLoadCart(userId, token);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setShippingAddress({ ...shippingAddress, [name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <section className=\"cart-section\">\r\n      <div className=\"wrap cart-wrap\">\r\n        <div className=\"cart-header-sec\">\r\n          <h1 className=\"cart-header\">My Cart </h1>\r\n        </div>\r\n        <div className=\"cart-subsection\">\r\n          <div className=\"cartDetail-sec\">\r\n            <div className=\"cartDetail-sec-hr\"></div>\r\n            {cart &&\r\n              cart.map((cartItem, index) => {\r\n                return (\r\n                  <CartItem\r\n                    cartItemProductId={cartItem.product._id}\r\n                    cartItemQuantity={cartItem.quantity}\r\n                    key={index}\r\n                    updateQuantity={updateQuantity}\r\n                    deleteProduct={deleteProduct}\r\n                  />\r\n                );\r\n              })}\r\n            <div className=\"cart-subTotal-sec\">\r\n              <h2 className=\"cart-subTotal-h2\">\r\n                {`Subtotal (${subTotal_items} items)`} :{\" \"}\r\n                <span className=\"cart-subTotal-price\">{`${subTotal_value}`}</span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"cart-placeOrder-sec\">\r\n            <div className=\"cart-subTotal-sec cart-placeOrder-subTotal-sec\">\r\n              <h2 className=\"cart-subTotal-h2\">\r\n                {`Subtotal (${subTotal_items} items)`} :{\" \"}\r\n                <span className=\"cart-subTotal-price\">{`${subTotal_value}`}</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"cart-shippingAddress-sec\">\r\n              <h3 className=\"cart-shippingAddress-header\">Shipping Address</h3>\r\n              {shippingAddress_state === \"default\" && (\r\n                <div className=\"cart-shippingAddress-default-sec\">\r\n                  <div className=\"cart-shippingAddress-default-address-sec\">\r\n                    <p className=\"cart-shippingAddress-default-address cart-shippingAddress-default-HouseName\">\r\n                      {shippingAddress_houseName}\r\n                    </p>\r\n                    <p className=\"cart-shippingAddress-default-address cart-shippingAddress-default-StreetName\">\r\n                      {shippingAddress_streetName}\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    className=\"cart-shippingAddress-edit-btn\"\r\n                    onClick={() => setShippingAddress_state(\"edit\")}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <Link to={`/cart/payment/${userId}`} state={shippingAddress}>\r\n                    <button className=\"cart-shippingAddress-cta-btn\">\r\n                      Deliver to this Address\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n              {shippingAddress_state === \"edit\" && (\r\n                <div className=\"cart-shippingAddress-edit-sec\">\r\n                  <form className=\"cart-shippingAddress-edit-address-form\">\r\n                    <p\r\n                      className=\"cart-shippingAddress-edit-address-default_state\"\r\n                      onClick={() => setShippingAddress_state(\"default\")}\r\n                    >\r\n                      Go back to default address\r\n                    </p>\r\n                    <div className=\"cart-shippingAddress-edit-address-sec\">\r\n                      <p className=\"cart-shippingAddress-edit-address-label\">\r\n                        House Name\r\n                      </p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"cart-shippingAddress-edit-address-input\"\r\n                        value={shippingAddress_houseName || \" \"}\r\n                        onChange={handleChange(\"shippingAddress_houseName\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"cart-shippingAddress-edit-address-sec\">\r\n                      <p className=\"cart-shippingAddress-edit-address-label\">\r\n                        Street Name\r\n                      </p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"cart-shippingAddress-edit-address-input\"\r\n                        value={shippingAddress_streetName || \" \"}\r\n                        onChange={handleChange(\"shippingAddress_streetName\")}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                  <Link\r\n                    to={`/cart/payment/${userId}`}\r\n                    state={{ shippingAddress }}\r\n                  >\r\n                    <button className=\"cart-shippingAddress-cta-btn\">\r\n                      Deliver to this Address\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js",["341","342"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { API } from \"../backend\";\r\nimport Trash from \"../icons/Trash.svg\";\r\nimport { getProduct } from \"./helper/productDetailHelper\";\r\n\r\nconst CartItem = ({\r\n  cartItemProductId,\r\n  cartItemQuantity,\r\n  updateQuantity,\r\n  deleteProduct,\r\n}) => {\r\n  // console.log(\"cartProductDetails \", cartProductDetails);\r\n  const [product, setProduct] = useState({\r\n    _id: \"\",\r\n    pName: \"\",\r\n    pPrice: \"\",\r\n    pCategory: \"\",\r\n  });\r\n  const [quantity, setQuantity] = useState(cartItemQuantity);\r\n\r\n  const { _id, pName, pPrice, pCategory } = product;\r\n\r\n  const getProductDetails = async (productId) => {\r\n    try {\r\n      const data = await getProduct(productId);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        return setProduct({\r\n          ...product,\r\n          _id: data._id,\r\n          pName: data.pName,\r\n          pPrice: data.pPrice,\r\n          pCategory: data.pCategory,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductDetails(cartItemProductId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateQuantity(product._id, quantity);\r\n  }, [quantity]);\r\n\r\n  return (\r\n    <div className=\"cartItem-item\">\r\n      <div className=\"cartItem-item-left\">\r\n        <div className=\"cartItem-item-img-sec\">\r\n          <img\r\n            src={`${API}/product/photo/${_id}`}\r\n            alt=\"\"\r\n            className=\"cartItem-item-img\"\r\n          />\r\n        </div>\r\n        <div className=\"cartItem-item-info\">\r\n          <h2 className=\"cartItem-item-productName\">{pName}</h2>\r\n          <div\r\n            className={`cartItem-item-category-sec ${\r\n              pCategory === \"vegetable\" ? \"color-green\" : \"color-orange\"\r\n            }`}\r\n          >\r\n            <p className=\"cartItem-item-category\">\r\n              {pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"cartItem-item-action\">\r\n          <div className=\"cartItem-item-quantity-sec\">\r\n            <h4 className=\"cartItem-item-quantity-h3\">QTY:</h4>\r\n            <input\r\n              type=\"text\"\r\n              className=\"cartItem-item-quantity-input\"\r\n              onChange={(e) => setQuantity(e.target.value)}\r\n              value={quantity}\r\n            />\r\n            <h4 className=\"cartItem-item-quantity-h3\">Kg</h4>\r\n          </div>\r\n          <img\r\n            src={Trash}\r\n            alt=\"\"\r\n            className=\"cartItem-item-delete-icon\"\r\n            onClick={() => deleteProduct(_id)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"cartItem-item-right\">\r\n        <h2 className=\"cartItem-item-price\">{`${pPrice}/Kg`}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js",["343"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Dashboard from \"../employee/Dashboard\";\r\nimport Deliveries from \"../employee/Deliveries\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../icons/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst EmployeeBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n          <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <h3 className=\"userBoard-user-detail-name\">\r\n                {name.length > 6 ? name.substring(0, 6) : name}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/dashboard/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"dashboard\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  Dashboard\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/deliveries/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"deliveries\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  Deliveries\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Accounts\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Settings\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"dashboard\" && <Dashboard />}\r\n          {tabActive === \"deliveries\" && <Deliveries />}\r\n          {tabActive === \"accounts\" && <Accounts userValues={values} />}\r\n          {tabActive === \"settings\" && <Settings userValues={values} />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EmployeeBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js",["344"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../icons/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\n// import Orders from \"./Orders\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst AdminBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n            <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <h3 className=\"userBoard-user-detail-name\">\r\n                {name.length > 6 ? name.substring(0, 6) : name}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/adminboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Accounts\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/adminboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Settings\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"accounts\" && <Accounts />}\r\n          {/* {tabActive === \"orders\" && <Orders userValues={values} />} */}\r\n          {tabActive === \"settings\" && <Settings />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js",["345","346","347"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getUserCart,\r\n  createOrder,\r\n  getUser,\r\n  razorPayOrder,\r\n  paymentVerify,\r\n  updateOrderConfirmation,\r\n} from \"../user\";\r\n\r\nexport const CartPayment = () => {\r\n  const { userId } = useParams();\r\n\r\n  const naviagte = useNavigate();\r\n  const location = useLocation();\r\n  const shippingAddress = location.state;\r\n  const [values, setValues] = useState({\r\n    paymentMode: \"RazorPay\",\r\n    total: 10,\r\n    userDetails: \"\",\r\n  });\r\n\r\n  var cart = [];\r\n  var order = \"\";\r\n\r\n  const { paymentMode, total, userDetails } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const isRadioSelected = (value) => {\r\n    if (paymentMode === value) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const preLoadCart = async (userId, token) => {\r\n    try {\r\n      const data = await getUserCart(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        cart = data.cart;\r\n        console.log(cart);\r\n        var tempTotal = 0;\r\n        cart.map(\r\n          (cartItem) =>\r\n            (tempTotal =\r\n              tempTotal + cartItem.product.pPrice * cartItem.quantity)\r\n        );\r\n        setValues({ ...values, total: tempTotal });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const preLoadUser = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        // return (userDetails = data);\r\n        return setValues({ ...values, userDetails: data });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadCart(userId, token);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    preLoadUser(userId, token);\r\n  }, []);\r\n\r\n  const handleOrder = async (userId, token) => {\r\n    try {\r\n      const data = await createOrder(userId, token, {\r\n        shippingAddress,\r\n        paymentMode,\r\n      });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        order = data.order;\r\n        if (paymentMode === \"RazorPay\") {\r\n          await handlePayment(total);\r\n        } else {\r\n          try {\r\n            const data = await updateOrderConfirmation(userId, token, order._id, {\r\n              Ostatus: \"Ordered\",\r\n            });\r\n            if (data.error) {\r\n              return console.log(data.error);\r\n            } else {\r\n              console.log(data);\r\n              naviagte(`/thankyou/${order._id}`);\r\n            }\r\n          } catch (error) {}\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePayment = async (total) => {\r\n    try {\r\n      const data = await razorPayOrder({ total });\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        console.log(data);\r\n        initPayment(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    const options = {\r\n      key: process.env.RAZORPAY_KEY_SECRET,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      name: \"Fruits and Veggies\",\r\n      order_id: data.id,\r\n      prefill: {\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        contact: userDetails.phoneNumber,\r\n      },\r\n      handler: async (response) => {\r\n        try {\r\n          const data = await paymentVerify({ response, order });\r\n          if (data.error) {\r\n            return console.log(data.error);\r\n          }\r\n          console.log(data);\r\n          naviagte(`/thankyou/${order._id}`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp1 = new window.Razorpay(options);\r\n    rzp1.open();\r\n  };\r\n\r\n  return (\r\n    <section className=\"cardPayment-section\">\r\n      <div className=\"wrap cardPayment-wrap\">\r\n        <div className=\"cardPayment-info-sec\">\r\n          <div className=\"cardPayment-delivery-details-sec\">\r\n            <h2 className=\"cardpayment-delivery-details-header\">\r\n              Delivery Details\r\n            </h2>\r\n            <div className=\"cardPayment-delivery-details\">\r\n              <div className=\"cardPayment-delivery-details-single-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">name</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Email\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">email</p>\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Phone\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                    phoneNumber\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"cardPayment-delivery-details-subheader\">\r\n                Shipping Address\r\n              </h3>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    House Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                    houseName\r\n                  </p>\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Street Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                    streetName\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"cardPayment-payment-details-sec\">\r\n            <h2 className=\"cardPayment-payment-details-header\">Payment Mode</h2>\r\n            <div className=\"cardPayment-payment-details-form\">\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"RazorPay\"\r\n                  value=\"RazorPay\"\r\n                  checked={isRadioSelected(\"RazorPay\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"RazorPay\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Make Payment Online (RazorPay)\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"CashOnDelivery\"\r\n                  value=\"CashOnDelivery\"\r\n                  checked={isRadioSelected(\"CashOnDelivery\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"CashOnDelivery\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Cash On Delivery\r\n                </label>\r\n              </div>\r\n              <button\r\n                className=\"cardPayment-payment-details-btn\"\r\n                onClick={() => handleOrder(userId, token)}\r\n              >\r\n                Make Payment\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js",["348"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { getUser } from \"./index\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.OtotalPrice}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">{order._id}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\"> {order.Ostatus}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OEmployeeId || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {userDetails.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {userDetails.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {userDetails.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js",["349","350"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUser } from \"../user\";\r\nimport DashboardIcon from \"../icons/dashboard.svg\";\r\nimport DashboardActiveIcon from \"../icons/dashboardActive.svg\";\r\nimport CartIcon from \"../icons/cart.svg\";\r\nimport CartActiveIcon from \"../icons/cart-active.svg\";\r\nimport ProductIcon from \"../icons/product.svg\";\r\nimport ProductActiveIcon from \"../icons/productActive.svg\";\r\nimport EmployerIcon from \"../icons/employer.svg\";\r\nimport EmployerActiveIcon from \"../icons/employerActive.svg\";\r\nimport CustomerIcon from \"../icons/customer.svg\";\r\nimport CustomerActiveIcon from \"../icons/customerActive.svg\";\r\nimport Dashboard from \"../admin/Dashboard\";\r\nimport Order from \"../admin/Order\";\r\nimport Product from \"../admin/Product\";\r\nimport Employee from \"../admin/Employee\";\r\nimport Customer from \"../admin/Customer\";\r\n\r\nconst AdminDashPanel = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setName(data.name);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preload(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section\">\r\n      <div className=\"wrap adminDashPanel-wrap\">\r\n        <div className=\"adminDashPanel-left\">\r\n          <ul className=\"adminDashPanel-left-ul\">\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/dashboard/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"dashboard\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  {\" \"}\r\n                  <img\r\n                    src={\r\n                      tabActive === \"dashboard\" ? DashboardActiveIcon : DashboardIcon\r\n                    }\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Dashboard\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/order/${user._id}`}\r\n                className=\"adminDashPanel-left-link \"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"order\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"order\" ? CartActiveIcon : CartIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Order\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/product/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"product\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"product\" ? ProductActiveIcon : ProductIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Product\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/employee/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"employee\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"employee\" ? EmployerActiveIcon : EmployerIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Employee\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/customer/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"customer\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"customer\" ? CustomerActiveIcon : CustomerIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Customer\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"adminDashPanel-right\">\r\n          {tabActive === 'dashboard' && <Dashboard />}\r\n          {tabActive === 'order' && <Order />}\r\n          {tabActive === 'product' && <Product />}\r\n          {tabActive === 'employee' && <Employee />}\r\n          {tabActive === 'customer' && <Customer />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminDashPanel;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js",["351","352","353","354"],[],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { getAllOrders } from \"../user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport EmployeeUpdate from \"./EmployeeUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Order = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] =\r\n    useState(\"\");\r\n    const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOrders = async (userId, token, status) => {\r\n    try {\r\n      const data = await getAllOrders(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = async (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handleEmployeeAssign = async (order) => {\r\n    return (\r\n      setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order)\r\n    );\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    loadOrders(user._id, token, status);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-right-section order-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Orders</h1>\r\n      <div className=\"adminDashPanel-right-subsection orders-filter-subSection\">\r\n        <button\r\n          className={`orders-filter-btn ${status === \"all\" ? \"active\" : \"\"}`}\r\n          onClick={() => setStatus(\"all\")}\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Not-Confirmed\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Not-Confirmed\")}\r\n        >\r\n          Not-Confirmed\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Ordered\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Ordered\")}\r\n        >\r\n          Ordered\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Processing\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Processing\")}\r\n        >\r\n          Processing\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Picking-Up\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Picking-Up\")}\r\n        >\r\n          Picking-Up\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Out-For-Delivery\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Out-For-Delivery\")}\r\n        >\r\n          Out-For-Delivery\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Delivered\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Delivered\")}\r\n        >\r\n          Delivered\r\n        </button>\r\n        <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Cancelled\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Cancelled\")}\r\n        >\r\n          Cancelled\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Total</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <div\r\n                        className={`adminDashPanel-right-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentStatus === \"Paid\" ? (\r\n                        order.OpaymentStatus\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handlePaymentStatus(order)}\r\n                        >\r\n                          Pending\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OemployeeName ? (\r\n                        order.OemployeeName\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handleEmployeeAssign(order)}\r\n                        >\r\n                          Not Assigned\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && (\r\n        <EmployeeUpdate\r\n          setOrderEmployeeAssignActive={setOrderEmployeeAssignActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js",["355","356","357","358","359"],[],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport CartIcon from \"../icons/cart.svg\";\r\nimport ProductIcon from \"../icons/product.svg\";\r\nimport EmployerIcon from \"../icons/employer.svg\";\r\nimport CustomerIcon from \"../icons/customer.svg\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getAllOrders,\r\n  getCountCustomers,\r\n  getCountEmployers,\r\n  getCountOrders,\r\n  getCountProducts,\r\n} from \"../user\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport EmployeeUpdate from \"./EmployeeUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Dashboard = () => {\r\n  const [statusValues, setStatusValues] = useState({\r\n    orderStatus: \"\",\r\n    productStatus: \"\",\r\n    employerStatus: \"\",\r\n    customerStatus: \"\",\r\n  });\r\n  const [pendingOrders, setPendingOrders] = useState();\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] =\r\n    useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { orderStatus, productStatus, employerStatus, customerStatus } =\r\n    statusValues;\r\n\r\n  const loadStatusValues = async (userId, token) => {\r\n    try {\r\n      const orderStatus = await getCountOrders(userId, token);\r\n      const productStatus = await getCountProducts(userId, token);\r\n      const employerStatus = await getCountEmployers(userId, token);\r\n      const customerStatus = await getCountCustomers(userId, token);\r\n\r\n      if (\r\n        orderStatus.error ||\r\n        productStatus.error ||\r\n        employerStatus.error ||\r\n        customerStatus.error\r\n      ) {\r\n        return console.log(\"status update error occured\");\r\n      } else {\r\n        return setStatusValues({\r\n          ...statusValues,\r\n          orderStatus: orderStatus,\r\n          productStatus: productStatus,\r\n          employerStatus: employerStatus,\r\n          customerStatus: customerStatus,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadPendingOrders = async (userId, token) => {\r\n    try {\r\n      const data = await getAllOrders(userId, token, \"pending\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setPendingOrders(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = async (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handleEmployeeAssign = async (order) => {\r\n    return (\r\n      setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order)\r\n    );\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadStatusValues(user._id, token);\r\n  }, [orderActive, orderUpdateActive, orderEmployeeAssignActive]);\r\n\r\n  useEffect(() => {\r\n    loadPendingOrders(user._id, token);\r\n  }, [orderActive, orderUpdateActive, orderEmployeeAssignActive]);\r\n  return (\r\n    <section className=\"adminDashPanel-right-section dashboard-section\">\r\n      <div className=\"adminDashPanel-right-subsection dashboard-subSection\">\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-orders\">\r\n          <p className=\"dashboard-status-tag\">Orders</p>\r\n          <h1 className=\"dashboard-status-value\">{orderStatus}</h1>\r\n          <img src={CartIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-products\">\r\n          <p className=\"dashboard-status-tag\">Products</p>\r\n          <h1 className=\"dashboard-status-value\">{productStatus}</h1>\r\n          <img src={ProductIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-employers\">\r\n          <p className=\"dashboard-status-tag\">Employers</p>\r\n          <h1 className=\"dashboard-status-value\">{employerStatus}</h1>\r\n          <img src={EmployerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-customers\">\r\n          <p className=\"dashboard-status-tag\">Customers</p>\r\n          <h1 className=\"dashboard-status-value\">{customerStatus}</h1>\r\n          <img src={CustomerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n      </div>\r\n\r\n      <h1 className=\"adminDashPanel-right-header\">Pending Orders</h1>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Total</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {pendingOrders &&\r\n              pendingOrders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr \"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <div\r\n                        className={`adminDashPanel-right-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentStatus === \"Paid\" ? (\r\n                        order.OpaymentStatus\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handlePaymentStatus(order)}\r\n                        >\r\n                          Pending\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OemployeeName ? (\r\n                        order.OemployeeName\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handleEmployeeAssign(order)}\r\n                        >\r\n                          Not Assigned\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && (\r\n        <EmployeeUpdate\r\n          setOrderEmployeeAssignActive={setOrderEmployeeAssignActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js",["360"],[],"import React, { useState, useEffect } from \"react\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport AddIcon from \"../icons/add.svg\";\r\nimport TrashIcon from \"../icons/Trash.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteProduct, getAllProducts } from \"../core/helper/productDetailHelper\";\r\nimport { API } from \"../backend\";\r\nimport AddProduct from \"./AddProduct\";\r\nimport ProductDetail from \"./ProductDetail\";\r\n\r\nconst Product = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [category, setCategory] = useState(\"all\");\r\n  const [addProductActive, setAddProductActive] = useState(\"\");\r\n  const [productDetail, setProductDetail] = useState(\"\");\r\n  const [product, setProduct] = useState();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadProducts = async (category) => {\r\n    try {\r\n      const data = await getAllProducts(category);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProducts(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (product) => {\r\n    return setProductDetail(\"productDetail\"), setProduct(product)\r\n  };\r\n  const handleEdit = async (product) => {\r\n    //\r\n  };\r\n  const handleDelete = async (product) => {\r\n    try {\r\n      const data = await deleteProduct(user._id, token, product._id);\r\n      if(data.error){\r\n        return console.log(data.error);\r\n      }else{\r\n        return loadProducts(category);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProducts(category);\r\n  }, [category]);\r\n  return (\r\n    <section className=\"adminDashPanel-section product-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Products</h1>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-add-btn-subSection\">\r\n        <button className=\"adminDashPanel-product-add-btn\" onClick={() => setAddProductActive(\"addProduct\")} ><img src={AddIcon} className=\"adminDashPanel-product-add-btn-icon\" alt=\"\" />ADD PRODUCT</button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-filter-subSection\">\r\n        <button\r\n          className={`adminDashPanel-product-filter-btn ${\r\n            category === \"all\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setCategory(\"all\")}\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          className={`adminDashPanel-product-filter-btn ${\r\n            category === \"fruit\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setCategory(\"fruit\")}\r\n        >\r\n          Fruit\r\n        </button>\r\n        <button\r\n          className={`adminDashPanel-product-filter-btn ${\r\n            category === \"vegetable\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setCategory(\"vegetable\")}\r\n        >\r\n          Vegetable\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Product Image\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Product Name\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Product ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Description\r\n              </th>\r\n\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Category\r\n              </th>\r\n\r\n              <th className=\"adminDashPanel-right-table-head-value\">Stock</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Price</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {products &&\r\n              products.map((product, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <img\r\n                        className=\"adminDashPanel-product-img\"\r\n                        src={`${API}/product/photo/${product._id}`}\r\n                        alt=\"\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pDescription}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pCategory}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pStock} Kg\r\n                    </td>\r\n\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pPrice}\r\n                    </td>\r\n                    {/* <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(product.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(product.updatedAt).format(\"DD-MMM-yyyy\")}\r\n                    </td> */}\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(product)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(product)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(product)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {addProductActive === \"addProduct\" && <AddProduct setAddProductActive={setAddProductActive}/>}\r\n      {productDetail === \"productDetail\" && <ProductDetail setProductDetail= {setProductDetail} product={product} />}\r\n\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js",["361","362"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteCustomer, getCustomers } from \"../user\";\r\nimport moment from \"moment\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport TrashIcon from \"../icons/Trash.svg\";\r\nimport CustomerDetail from \"./CustomerDetail\";\r\n\r\nconst Customer = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customerDetail, setCustomerDetail] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadCustomers = async (userId, token) => {\r\n    try {\r\n      const data = await getCustomers(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setCustomers(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (customer) => {\r\n    return setCustomerDetail(\"customerDetail\"), setCustomer(customer);\r\n  };\r\n\r\n  const handleDelete = async (customer) => {\r\n    try {\r\n      const data = await deleteCustomer(user._id, token, customer._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return loadCustomers(user._id, token);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCustomers(user._id, token);\r\n  }, []);\r\n\r\n  // console.log(\"Customers\", customers);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section customer-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Customers</h1>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Name</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Customer ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Email</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Phone Number\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Address</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Created At\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {customers &&\r\n              customers.map((customer, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.name}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.email}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.phoneNumber}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.address.houseName}\r\n                      <br />\r\n                      {customer.address.streetName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(customer.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(customer)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(customer)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {customerDetail === \"customerDetail\" && (\r\n        <CustomerDetail\r\n          customer={customer}\r\n          setCustomerDetail={setCustomerDetail}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js",["363"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { adminUpdateOrderStatus } from \"../user\";\r\n\r\nconst OrderUpdate = ({ setOrderUpdateActive, order }) => {\r\n  const [status, setStatus] = useState(order.Ostatus);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOptions = (orderStatus) => {\r\n    if (orderStatus === \"Not-Confirmed\") {\r\n      return (\r\n        <>\r\n          <option value=\"Not-Confirmed\">Not-Confirmed</option>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Ordered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Processing\") {\r\n      return (\r\n        <>\r\n          <option value=\"Processing\">Processing</option>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Picking-Up\") {\r\n      return (\r\n        <>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Out-For-Delivery\") {\r\n      return (\r\n        <>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Delivered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (userId, token, orderId, status) => {\r\n    try {\r\n      const data = adminUpdateOrderStatus(userId, token, orderId, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderUpdateActive(\"\");\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Order Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdateActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n                    {loadOptions(order.Ostatus)}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`popup-form-btn ${\r\n                  status === order.Ostatus ? \"button-unclickable\" : \"\"\r\n                }`}\r\n                onClick={() => handleUpdate(user._id, token, order._id, status)}\r\n              >\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js",["364"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\nimport { createProduct } from \"../user\";\r\n\r\nconst AddProduct = ({ setAddProductActive }) => {\r\n  const [values, setValues] = useState({\r\n    pName: \"\",\r\n    pDescription: \"\",\r\n    pStock: \"\",\r\n    pCategory: \"\",\r\n    pPrice: \"\",\r\n    pImg: \"\",\r\n  });\r\n\r\n  const { pName, pDescription, pStock, pCategory, pPrice, pImg } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const img = {\r\n      preview: URL.createObjectURL(e.target.files[0]),\r\n      data: e.target.file[0],\r\n    };\r\n    setValues({ ...values, pImg: img });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = await createProduct(user._id, token, {\r\n        pName,\r\n        pDescription,\r\n        pStock,\r\n        pPrice,\r\n        pCategory,\r\n        pImg,\r\n      });\r\n\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setAddProductActive(null);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <section className=\"addProduct-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Add Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAddProductActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <form className=\"popup-form\" encType=\"multipart/form-data\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={pName}\r\n                    onChange={handleChange(\"pName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">\r\n                    Product Description\r\n                  </label>\r\n                  <textarea\r\n                    className=\"popup-form-input adminDashPanel-addproduct-textArea\"\r\n                    name=\"popup-form-input\"\r\n                    id=\"popup-form-input\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    value={pDescription}\r\n                    onChange={handleChange(\"pDescription\")}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-triple-group adminDashPanel-addProducts-triple-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={pPrice}\r\n                    onChange={handleChange(\"pPrice\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Stock</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={pStock}\r\n                    onChange={handleChange(\"pStock\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Category</label>\r\n                  <select\r\n                    name=\"category\"\r\n                    id=\"category\"\r\n                    className=\"popup-form-value\"\r\n                    onChange={handleChange(\"pCategory\")}\r\n                  >\r\n                    <option value=\"fruit\">Select Category</option>\r\n                    <option value=\"fruit\">Fruit</option>\r\n                    <option value=\"vegetable\">Vegetable</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Image</label>\r\n                  <div className=\"popup-form-input-div adminDashPanel-addProducts-input-div\">\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"popup-form-input\"\r\n                      onChange={handleFileChange}\r\n                    />\r\n                    <button className=\"popup-form-input-btn\">\r\n                      Choose File\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n              Add Product\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {error && errorMessage()} */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js",["365","366"],[],"import React, { useState, useEffect } from \"react\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport TrashIcon from \"../icons/Trash.svg\";\r\nimport AddIcon from \"../icons/add.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteEmployee, getEmployees } from \"../user\";\r\nimport moment from \"moment\";\r\nimport AddEmployee from \"./AddEmployee\";\r\nimport EmployeeDetail from \"./EmployeeDetail\";\r\n\r\nconst Employee = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [employee, setEmployee] = useState();\r\n  const [addEmployeeActive, setAddEmployeeActive] = useState(\"\");\r\n  const [employeeDetail, setEmployeeDetail] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadEmployees = async (userId, token, status) => {\r\n    try {\r\n      const data = await getEmployees(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployees(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (employee) => {\r\n    return setEmployeeDetail(\"employeeDetail\"), setEmployee(employee);\r\n  };\r\n\r\n  const handleDelete = async (employee) => {\r\n    try {\r\n      const data = await deleteEmployee(user._id, token, employee._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return loadEmployees(user._id, token, status);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees(user._id, token, status);\r\n  }, [status, addEmployeeActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section employee-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Employees</h1>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-add-btn-subSection\">\r\n        <button\r\n          className=\"adminDashPanel-product-add-btn\"\r\n          onClick={() => setAddEmployeeActive(\"addEmployee\")}\r\n        >\r\n          <img\r\n            src={AddIcon}\r\n            className=\"adminDashPanel-product-add-btn-icon\"\r\n            alt=\"\"\r\n          />\r\n          ADD EMPLOYEE\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-filter-subSection\">\r\n        <button\r\n          className={`adminDashPanel-product-filter-btn ${\r\n            status === \"all\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"all\")}\r\n        >\r\n          All\r\n        </button>\r\n        <button\r\n          className={`adminDashPanel-product-filter-btn ${\r\n            status === \"Available\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Available\")}\r\n        >\r\n          Available\r\n        </button>\r\n        <button\r\n          className={`adminDashPanel-product-filter-btn ${\r\n            status === \"NotAvailable\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"NotAvailable\")}\r\n        >\r\n          Not-Available\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Name</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Employee ID</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Email</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Phone Number\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Address</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Created At\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {employees &&\r\n              employees.map((employee, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.name}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.email}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Estatus}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.phoneNumber}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.address.houseName}\r\n                      <br />\r\n                      {employee.Euser.address.streetName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(employee.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(employee)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(employee)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {addEmployeeActive === \"addEmployee\" && (\r\n        <AddEmployee setAddEmployeeActive={setAddEmployeeActive} />\r\n      )}\r\n      {employeeDetail === \"employeeDetail\" && (\r\n        <EmployeeDetail\r\n          employee={employee}\r\n          setEmployeeDetail={setEmployeeDetail}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js",["367"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\nimport { createEmployee } from \"../user\";\r\n\r\nconst AddEmployee = ({ setAddEmployeeActive }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n        const data = await createEmployee(user._id, token, email)\r\n        if(data.error){\r\n            return console.log(data.error)\r\n        }else{\r\n            return setAddEmployeeActive(null)\r\n        }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"addEmployee-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Add Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAddEmployeeActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <form className=\"popup-form\" encType=\"multipart/form-data\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n              Add Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {error && errorMessage()} */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js",["368","369","370","371","372"],[],"import React, { useState, useEffect } from \"react\";\r\n// import moment from \"moment\";\r\nimport CartIcon from \"../icons/cart.svg\";\r\nimport ProductIcon from \"../icons/product.svg\";\r\nimport EmployerIcon from \"../icons/employer.svg\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getAllDeliveries,\r\n  getCountDeliveries,\r\n  getCountNewDeliveries,\r\n  getEmployeeStatus,\r\n} from \"../user\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Dashboard = () => {\r\n  const [statusValues, setStatusValues] = useState({\r\n    totalDeliveries: \"\",\r\n    NewDeliveries: \"\",\r\n    EmployeeStatus: \"\",\r\n  });\r\n  const [newDeliveries, setNewDeliveires] = useState([]);\r\n  const [order, setOrder] = useState({});\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { totalDeliveries, NewDeliveries, EmployeeStatus } = statusValues;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadStatusValues = async (userId, token) => {\r\n    try {\r\n      const totalDeliveries = await getCountDeliveries(userId, token);\r\n      const NewDeliveries = await getCountNewDeliveries(userId, token);\r\n      const EmployeeStatus = await getEmployeeStatus(userId, token);\r\n\r\n      if (\r\n        totalDeliveries.error ||\r\n        NewDeliveries.error ||\r\n        EmployeeStatus.error\r\n      ) {\r\n        return console.log(\"status update error occured\");\r\n      } else {\r\n        return setStatusValues({\r\n          ...statusValues,\r\n          totalDeliveries: totalDeliveries,\r\n          NewDeliveries: NewDeliveries,\r\n          EmployeeStatus: EmployeeStatus,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadNewDelivery = async (userId, token) => {\r\n    try {\r\n      const data = await getAllDeliveries(userId, token, \"pending\");\r\n      // console.log(\"data\", data);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setNewDeliveires(data.Eorders);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadNewDelivery(user._id, token);\r\n  }, [orderUpdateActive, orderUpdatePayment]);\r\n\r\n  useEffect(() => {\r\n    loadStatusValues(user._id, token);\r\n  }, [orderUpdateActive, orderUpdatePayment]);\r\n\r\n  return (\r\n    <section className=\"employeeBoard-section\">\r\n      <div className=\"-right-subsection dashboard-subSection\">\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-TotalDeliveries\">\r\n          <p className=\"dashboard-status-tag\">Total Deliveries</p>\r\n          <h1 className=\"dashboard-status-value\">{totalDeliveries}</h1>\r\n          <img src={CartIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-DeliveryStatus\">\r\n          <p className=\"dashboard-status-tag\">New Deliveries</p>\r\n          <h1 className=\"dashboard-status-value\">{NewDeliveries}</h1>\r\n          <img src={ProductIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-EmpoyeeStatus\">\r\n          <p className=\"dashboard-status-tag\">My Status</p>\r\n          <h1 className=\"dashboard-status-value\">{EmployeeStatus}</h1>\r\n          <img src={EmployerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n      </div>\r\n\r\n      <h1 className=\"employeeBoard-right-header\">New Delivery</h1>\r\n\r\n      <div className=\"employeeBoard-right-subsection\">\r\n        <table className=\"employeeBoard-right-table\">\r\n          <thead className=\"employeeBoard-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"employeeBoard-right-table-head-value\">Order ID</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Status</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Total</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Address</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"employeeBoard-right-table-body-sec\">\r\n            {newDeliveries &&\r\n              newDeliveries.map((order, index) => {\r\n                return (\r\n                  order.EorderId.Ostatus !== (\"Delivered\" || \"Cancelled\") && (\r\n                    <tr\r\n                      key={index}\r\n                      className=\"employeeBoard-right-table-body-tr \"\r\n                    >\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId._id}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        <div\r\n                          className={`employeeBoard-right-table-body-div ${order.EorderId.Ostatus}`}\r\n                        >\r\n                          {order.EorderId.Ostatus}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OtotalPrice}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentMode}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentStatus === \"Paid\" ? (\r\n                          order.EorderId.OpaymentStatus\r\n                        ) : (\r\n                          <button\r\n                            className=\"adminDashPanel-right-table-body-value-btn\"\r\n                            onClick={() => handlePaymentStatus(order.EorderId)}\r\n                          >\r\n                            Pending\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderAddress.houseName}\r\n                        <br />\r\n                        {order.EorderAddress.streetName}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        <button onClick={() => handlePreview(order)}>\r\n                          <img\r\n                            src={ViewIcon}\r\n                            alt=\"\"\r\n                            className=\"employeeBoard-right-table-icon vie\"\r\n                          />\r\n                        </button>\r\n                        <button onClick={() => handleEdit(order.EorderId)}>\r\n                          <img\r\n                            src={EditIcon}\r\n                            alt=\"\"\r\n                            className=\"employeeBoard-right-table-icon vie\"\r\n                          />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js",["373","374","375","376"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getAllDeliveries } from \"../user\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Deliveries = () => {\r\n  const [deliveries, setDeliveires] = useState([]);\r\n  const [order, setOrder] = useState({});\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadDelivery = async (userId, token) => {\r\n    try {\r\n      const data = await getAllDeliveries(userId, token, \"pending\");\r\n\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeliveires(data.Eorders);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDelivery(user._id, token);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"employeeBoard-section\">\r\n      <h1 className=\"employeeBoard-right-header\">Deliveries</h1>\r\n\r\n      <div className=\"employeeBoard-right-subsection\">\r\n        <table className=\"employeeBoard-right-table\">\r\n          <thead className=\"employeeBoard-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"employeeBoard-right-table-head-value\">Order ID</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Status</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Total</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Address</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"employeeBoard-right-table-body-sec\">\r\n            {deliveries &&\r\n              deliveries.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"employeeBoard-right-table-body-tr \"\r\n                  >\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId._id}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <div\r\n                        className={`employeeBoard-right-table-body-div ${order.EorderId.Ostatus}`}\r\n                      >\r\n                        {order.EorderId.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentStatus === \"Paid\" ? (\r\n                          order.EorderId.OpaymentStatus\r\n                        ) : (\r\n                          <button\r\n                            className=\"adminDashPanel-right-table-body-value-btn\"\r\n                            onClick={() => handlePaymentStatus(order.EorderId)}\r\n                          >\r\n                            Pending\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderAddress.houseName}\r\n                      <br />\r\n                      {order.EorderAddress.streetName}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order.EorderId)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Deliveries;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js",["377"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { addEmployeeOrder, getEmployees } from \"../user\";\r\n\r\nconst EmployeeUpdate = ({ order, setOrderEmployeeAssignActive }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = async (userId, token) => {\r\n    try {\r\n      const data = await getEmployees(userId, token, \"Available\");\r\n      console.log(data);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployees(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeAssign = async (userId, token, orderId, employeeId) => {\r\n    \r\n    try {\r\n      const data = await addEmployeeOrder(userId, token, orderId, employeeId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderEmployeeAssignActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"employeeUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header employeeUpdate-popup-header\">\r\n                Assign Employee\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderEmployeeAssignActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Employee Name</label>\r\n                  <select\r\n                    name=\"employeeName\"\r\n                    id=\"employeeName\"\r\n                    value={employeeId}\r\n                    onChange={(e) => setEmployeeId(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n\r\n                    {employees &&\r\n                      employees.map((employee, index) => {\r\n                        return (\r\n                          <option key={index} value={employee._id}>\r\n                            {employee.Euser.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"popup-form-btn\"\r\n                onClick={() =>\r\n                  handleEmployeeAssign(user._id, token, order._id, employeeId)\r\n                }\r\n              >\r\n                Assign Employee\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EmployeeUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js",["378"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { getUser } from \"../user\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order.EorderId._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.EorderId.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.EorderTotal}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {order.EorderId._id}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ostatus}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OEmployeeName || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {/* {userDetails.name} */}\r\n                      {order.EorderId.Ouser.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js",["379"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js",["380"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { employeeUpdateOrderStatus } from \"../user\";\r\n\r\nconst OrderUpdate = ({ setOrderUpdateActive, order }) => {\r\n  const [status, setStatus] = useState(order.Ostatus);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOptions = (orderStatus) => {\r\n    if (orderStatus === \"Not-Confirmed\") {\r\n      return (\r\n        <>\r\n          <option value=\"Not-Confirmed\">Not-Confirmed</option>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Ordered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Processing\") {\r\n      return (\r\n        <>\r\n          <option value=\"Processing\">Processing</option>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Picking-Up\") {\r\n      return (\r\n        <>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Out-For-Delivery\") {\r\n      return (\r\n        <>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Delivered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (userId, token, orderId, status) => {\r\n    try {\r\n      const data = employeeUpdateOrderStatus(userId, token, orderId, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderUpdateActive(\"\");\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Order Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdateActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n                    {loadOptions(order.Ostatus)}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`popup-form-btn ${\r\n                  status === order.Ostatus ? \"button-unclickable\" : \"\"\r\n                }`}\r\n                onClick={() => handleUpdate(user._id, token, order._id, status)}\r\n              >\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js",["381"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { employeeUpdatePaymentStatus } from \"../user\";\r\n\r\nconst PaymentStatusUpdate = ({ setOrderUpdatePayment, order }) => {\r\n  const [status, setStatus] = useState(order.OpaymentStatus);\r\n  \r\n  const {user, token} = isAuthenticated();\r\n\r\nconst handleUpdate = (userId, token, orderId, status) => {\r\n  try {\r\n    const data = employeeUpdatePaymentStatus(userId, token, orderId, status);\r\n    if(data.error){\r\n      return console.log(data.error)\r\n    }else{\r\n      return setOrderUpdatePayment(\"\");\r\n    }\r\n  } catch (error) {\r\n    return console.log(error)\r\n  }\r\n}\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Payment Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdatePayment(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className= \"popup-form-value\"\r\n                  >\r\n                    <option value=\"Pending\">Pending</option>\r\n                    <option value=\"Paid\">Paid</option>\r\n                    \r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button className={`popup-form-btn ${\r\n                  status === order.OpaymentStatus ? \"button-unclickable\" : \"\"\r\n                }`} onClick={() =>  handleUpdate(user._id, token, order._id, status)}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PaymentStatusUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js",["382"],[],"import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\nconst ScrollToTop = ({ children }) => {\r\n  const location = useLocation();\r\n  useLayoutEffect(() => {\r\n    document.documentElement.scrollTo(0, 0);\r\n  }, [location.pathname]);\r\n  return children;\r\n};\r\n\r\nexport default ScrollToTop;","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js",["383","384","385","386"],[],{"ruleId":"387","severity":1,"message":"388","line":1,"column":27,"nodeType":"389","messageId":"390","endLine":1,"endColumn":37},{"ruleId":"391","severity":1,"message":"392","line":76,"column":6,"nodeType":"393","endLine":76,"endColumn":17,"suggestions":"394"},{"ruleId":"395","severity":1,"message":"396","line":51,"column":17,"nodeType":"397","endLine":54,"endColumn":19},{"ruleId":"387","severity":1,"message":"398","line":1,"column":9,"nodeType":"389","messageId":"390","endLine":1,"endColumn":12},{"ruleId":"387","severity":1,"message":"399","line":2,"column":7,"nodeType":"389","messageId":"390","endLine":2,"endColumn":12},{"ruleId":"391","severity":1,"message":"400","line":66,"column":6,"nodeType":"393","endLine":66,"endColumn":8,"suggestions":"401"},{"ruleId":"387","severity":1,"message":"399","line":2,"column":7,"nodeType":"389","messageId":"390","endLine":2,"endColumn":12},{"ruleId":"387","severity":1,"message":"402","line":14,"column":35,"nodeType":"389","messageId":"390","endLine":14,"endColumn":42},{"ruleId":"387","severity":1,"message":"403","line":14,"column":44,"nodeType":"389","messageId":"390","endLine":14,"endColumn":51},{"ruleId":"404","severity":1,"message":"405","line":37,"column":17,"nodeType":"406","messageId":"407","endLine":37,"endColumn":18,"suggestions":"408"},{"ruleId":"404","severity":1,"message":"405","line":37,"column":33,"nodeType":"406","messageId":"407","endLine":37,"endColumn":34,"suggestions":"409"},{"ruleId":"387","severity":1,"message":"410","line":1,"column":8,"nodeType":"389","messageId":"390","endLine":1,"endColumn":13},{"ruleId":"387","severity":1,"message":"410","line":1,"column":8,"nodeType":"389","messageId":"390","endLine":1,"endColumn":13},{"ruleId":"387","severity":1,"message":"411","line":11,"column":11,"nodeType":"389","messageId":"390","endLine":11,"endColumn":21},{"ruleId":"387","severity":1,"message":"412","line":11,"column":23,"nodeType":"389","messageId":"390","endLine":11,"endColumn":36},{"ruleId":"387","severity":1,"message":"410","line":1,"column":8,"nodeType":"389","messageId":"390","endLine":1,"endColumn":13},{"ruleId":"391","severity":1,"message":"413","line":44,"column":6,"nodeType":"393","endLine":44,"endColumn":18,"suggestions":"414"},{"ruleId":"387","severity":1,"message":"415","line":24,"column":11,"nodeType":"389","messageId":"390","endLine":24,"endColumn":15},{"ruleId":"391","severity":1,"message":"413","line":45,"column":6,"nodeType":"393","endLine":45,"endColumn":22,"suggestions":"416"},{"ruleId":"387","severity":1,"message":"415","line":16,"column":11,"nodeType":"389","messageId":"390","endLine":16,"endColumn":15},{"ruleId":"391","severity":1,"message":"417","line":31,"column":6,"nodeType":"393","endLine":31,"endColumn":8,"suggestions":"418"},{"ruleId":"419","severity":1,"message":"420","line":34,"column":42,"nodeType":"421","messageId":"422","endLine":34,"endColumn":43},{"ruleId":"387","severity":1,"message":"415","line":9,"column":11,"nodeType":"389","messageId":"390","endLine":9,"endColumn":15},{"ruleId":"387","severity":1,"message":"402","line":22,"column":61,"nodeType":"389","messageId":"390","endLine":22,"endColumn":68},{"ruleId":"387","severity":1,"message":"402","line":27,"column":44,"nodeType":"389","messageId":"390","endLine":27,"endColumn":51},{"ruleId":"387","severity":1,"message":"403","line":27,"column":53,"nodeType":"389","messageId":"390","endLine":27,"endColumn":60},{"ruleId":"387","severity":1,"message":"415","line":29,"column":11,"nodeType":"389","messageId":"390","endLine":29,"endColumn":15},{"ruleId":"391","severity":1,"message":"413","line":53,"column":6,"nodeType":"393","endLine":53,"endColumn":8,"suggestions":"423"},{"ruleId":"387","severity":1,"message":"402","line":27,"column":48,"nodeType":"389","messageId":"390","endLine":27,"endColumn":55},{"ruleId":"387","severity":1,"message":"403","line":27,"column":57,"nodeType":"389","messageId":"390","endLine":27,"endColumn":64},{"ruleId":"387","severity":1,"message":"415","line":29,"column":11,"nodeType":"389","messageId":"390","endLine":29,"endColumn":15},{"ruleId":"391","severity":1,"message":"413","line":53,"column":6,"nodeType":"393","endLine":53,"endColumn":8,"suggestions":"424"},{"ruleId":"387","severity":1,"message":"425","line":22,"column":10,"nodeType":"389","messageId":"390","endLine":22,"endColumn":24},{"ruleId":"387","severity":1,"message":"426","line":22,"column":26,"nodeType":"389","messageId":"390","endLine":22,"endColumn":43},{"ruleId":"387","severity":1,"message":"415","line":26,"column":11,"nodeType":"389","messageId":"390","endLine":26,"endColumn":15},{"ruleId":"391","severity":1,"message":"427","line":64,"column":6,"nodeType":"393","endLine":64,"endColumn":8,"suggestions":"428"},{"ruleId":"391","severity":1,"message":"429","line":77,"column":6,"nodeType":"393","endLine":77,"endColumn":12,"suggestions":"430"},{"ruleId":"391","severity":1,"message":"431","line":44,"column":6,"nodeType":"393","endLine":44,"endColumn":8,"suggestions":"432"},{"ruleId":"391","severity":1,"message":"433","line":48,"column":6,"nodeType":"393","endLine":48,"endColumn":16,"suggestions":"434"},{"ruleId":"391","severity":1,"message":"413","line":45,"column":6,"nodeType":"393","endLine":45,"endColumn":18,"suggestions":"435"},{"ruleId":"391","severity":1,"message":"413","line":44,"column":6,"nodeType":"393","endLine":44,"endColumn":18,"suggestions":"436"},{"ruleId":"387","severity":1,"message":"415","line":30,"column":11,"nodeType":"389","messageId":"390","endLine":30,"endColumn":15},{"ruleId":"391","severity":1,"message":"437","line":77,"column":6,"nodeType":"393","endLine":77,"endColumn":8,"suggestions":"438"},{"ruleId":"391","severity":1,"message":"439","line":81,"column":6,"nodeType":"393","endLine":81,"endColumn":8,"suggestions":"440"},{"ruleId":"391","severity":1,"message":"441","line":25,"column":6,"nodeType":"393","endLine":25,"endColumn":8,"suggestions":"442"},{"ruleId":"387","severity":1,"message":"443","line":24,"column":10,"nodeType":"389","messageId":"390","endLine":24,"endColumn":14},{"ruleId":"391","severity":1,"message":"417","line":44,"column":6,"nodeType":"393","endLine":44,"endColumn":18,"suggestions":"444"},{"ruleId":"419","severity":1,"message":"420","line":38,"column":42,"nodeType":"421","messageId":"422","endLine":38,"endColumn":43},{"ruleId":"419","severity":1,"message":"420","line":42,"column":53,"nodeType":"421","messageId":"422","endLine":42,"endColumn":54},{"ruleId":"419","severity":1,"message":"420","line":52,"column":55,"nodeType":"421","messageId":"422","endLine":52,"endColumn":56},{"ruleId":"391","severity":1,"message":"441","line":58,"column":6,"nodeType":"393","endLine":58,"endColumn":73,"suggestions":"445"},{"ruleId":"419","severity":1,"message":"420","line":84,"column":42,"nodeType":"421","messageId":"422","endLine":84,"endColumn":43},{"ruleId":"419","severity":1,"message":"420","line":88,"column":53,"nodeType":"421","messageId":"422","endLine":88,"endColumn":54},{"ruleId":"419","severity":1,"message":"420","line":98,"column":55,"nodeType":"421","messageId":"422","endLine":98,"endColumn":56},{"ruleId":"391","severity":1,"message":"446","line":103,"column":6,"nodeType":"393","endLine":103,"endColumn":65,"suggestions":"447"},{"ruleId":"391","severity":1,"message":"441","line":107,"column":6,"nodeType":"393","endLine":107,"endColumn":65,"suggestions":"448"},{"ruleId":"419","severity":1,"message":"420","line":35,"column":45,"nodeType":"421","messageId":"422","endLine":35,"endColumn":46},{"ruleId":"419","severity":1,"message":"420","line":30,"column":47,"nodeType":"421","messageId":"422","endLine":30,"endColumn":48},{"ruleId":"391","severity":1,"message":"441","line":48,"column":6,"nodeType":"393","endLine":48,"endColumn":8,"suggestions":"449"},{"ruleId":"387","severity":1,"message":"450","line":1,"column":27,"nodeType":"389","messageId":"390","endLine":1,"endColumn":36},{"ruleId":"387","severity":1,"message":"450","line":1,"column":27,"nodeType":"389","messageId":"390","endLine":1,"endColumn":36},{"ruleId":"419","severity":1,"message":"420","line":34,"column":47,"nodeType":"421","messageId":"422","endLine":34,"endColumn":48},{"ruleId":"391","severity":1,"message":"441","line":52,"column":6,"nodeType":"393","endLine":52,"endColumn":33,"suggestions":"451"},{"ruleId":"387","severity":1,"message":"450","line":1,"column":27,"nodeType":"389","messageId":"390","endLine":1,"endColumn":36},{"ruleId":"419","severity":1,"message":"420","line":75,"column":42,"nodeType":"421","messageId":"422","endLine":75,"endColumn":43},{"ruleId":"419","severity":1,"message":"420","line":79,"column":53,"nodeType":"421","messageId":"422","endLine":79,"endColumn":54},{"ruleId":"419","severity":1,"message":"420","line":83,"column":55,"nodeType":"421","messageId":"422","endLine":83,"endColumn":56},{"ruleId":"391","severity":1,"message":"441","line":88,"column":6,"nodeType":"393","endLine":88,"endColumn":45,"suggestions":"452"},{"ruleId":"391","severity":1,"message":"446","line":92,"column":6,"nodeType":"393","endLine":92,"endColumn":45,"suggestions":"453"},{"ruleId":"419","severity":1,"message":"420","line":34,"column":42,"nodeType":"421","messageId":"422","endLine":34,"endColumn":43},{"ruleId":"419","severity":1,"message":"420","line":38,"column":53,"nodeType":"421","messageId":"422","endLine":38,"endColumn":54},{"ruleId":"419","severity":1,"message":"420","line":42,"column":55,"nodeType":"421","messageId":"422","endLine":42,"endColumn":56},{"ruleId":"391","severity":1,"message":"441","line":47,"column":6,"nodeType":"393","endLine":47,"endColumn":8,"suggestions":"454"},{"ruleId":"391","severity":1,"message":"441","line":42,"column":6,"nodeType":"393","endLine":42,"endColumn":8,"suggestions":"455"},{"ruleId":"391","severity":1,"message":"441","line":25,"column":6,"nodeType":"393","endLine":25,"endColumn":8,"suggestions":"456"},{"ruleId":"387","severity":1,"message":"450","line":1,"column":27,"nodeType":"389","messageId":"390","endLine":1,"endColumn":36},{"ruleId":"387","severity":1,"message":"450","line":1,"column":27,"nodeType":"389","messageId":"390","endLine":1,"endColumn":36},{"ruleId":"387","severity":1,"message":"450","line":1,"column":27,"nodeType":"389","messageId":"390","endLine":1,"endColumn":36},{"ruleId":"387","severity":1,"message":"410","line":1,"column":8,"nodeType":"389","messageId":"390","endLine":1,"endColumn":13},{"ruleId":"387","severity":1,"message":"402","line":28,"column":5,"nodeType":"389","messageId":"390","endLine":28,"endColumn":12},{"ruleId":"387","severity":1,"message":"403","line":29,"column":5,"nodeType":"389","messageId":"390","endLine":29,"endColumn":12},{"ruleId":"404","severity":1,"message":"405","line":62,"column":17,"nodeType":"406","messageId":"407","endLine":62,"endColumn":18,"suggestions":"457"},{"ruleId":"404","severity":1,"message":"405","line":62,"column":33,"nodeType":"406","messageId":"407","endLine":62,"endColumn":34,"suggestions":"458"},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'token' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["459"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'API' is defined but never used.","'axios' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.",["460"],"'loading' is assigned a value but never used.","'success' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["461","462"],["463","464"],"'React' is defined but never used.","'authActive' is assigned a value but never used.","'setAuthActive' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'preLoad', 'token', and 'userId'. Either include them or remove the dependency array.",["465"],"'user' is assigned a value but never used.",["466"],"React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["467"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["468"],["469"],"'productDetails' is assigned a value but never used.","'setProductDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'preLoadShippingAddress', 'token', and 'userId'. Either include them or remove the dependency array.",["470"],"React Hook useEffect has a missing dependency: 'loadSubTotal_value'. Either include it or remove the dependency array.",["471"],"React Hook useEffect has missing dependencies: 'cartItemProductId' and 'getProductDetails'. Either include them or remove the dependency array.",["472"],"React Hook useEffect has missing dependencies: 'product._id' and 'updateQuantity'. Either include them or remove the dependency array. If 'updateQuantity' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["473"],["474"],["475"],"React Hook useEffect has missing dependencies: 'preLoadCart', 'token', and 'userId'. Either include them or remove the dependency array.",["476"],"React Hook useEffect has missing dependencies: 'preLoadUser', 'token', and 'userId'. Either include them or remove the dependency array.",["477"],"React Hook useEffect has missing dependencies: 'token' and 'user._id'. Either include them or remove the dependency array.",["478"],"'name' is assigned a value but never used.",["479"],["480"],"React Hook useEffect has missing dependencies: 'loadStatusValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["481"],["482"],["483"],"'useEffect' is defined but never used.",["484"],["485"],["486"],["487"],["488"],["489"],["490","491"],["492","493"],{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"messageId":"498","fix":"499","desc":"500"},{"messageId":"501","fix":"502","desc":"503"},{"messageId":"498","fix":"504","desc":"500"},{"messageId":"501","fix":"505","desc":"503"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"512","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"506","fix":"523"},{"desc":"506","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"529","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"529","fix":"546"},{"desc":"529","fix":"547"},{"desc":"529","fix":"548"},{"messageId":"498","fix":"549","desc":"500"},{"messageId":"501","fix":"550","desc":"503"},{"messageId":"498","fix":"551","desc":"500"},{"messageId":"501","fix":"552","desc":"503"},"Update the dependencies array to be: [cartCount, token, user]",{"range":"553","text":"554"},"Update the dependencies array to be: [productId]",{"range":"555","text":"556"},"removeEscape",{"range":"557","text":"558"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"559","text":"560"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"561","text":"558"},{"range":"562","text":"560"},"Update the dependencies array to be: [currentTab, preLoad, token, userId]",{"range":"563","text":"564"},"Update the dependencies array to be: [accountsActive, preLoad, token, userId]",{"range":"565","text":"566"},"Update the dependencies array to be: [token, userId]",{"range":"567","text":"568"},"Update the dependencies array to be: [preLoad, token, userId]",{"range":"569","text":"570"},{"range":"571","text":"570"},"Update the dependencies array to be: [preLoadShippingAddress, token, userId]",{"range":"572","text":"573"},"Update the dependencies array to be: [cart, loadSubTotal_value]",{"range":"574","text":"575"},"Update the dependencies array to be: [cartItemProductId, getProductDetails]",{"range":"576","text":"577"},"Update the dependencies array to be: [product._id, quantity, updateQuantity]",{"range":"578","text":"579"},{"range":"580","text":"564"},{"range":"581","text":"564"},"Update the dependencies array to be: [preLoadCart, token, userId]",{"range":"582","text":"583"},"Update the dependencies array to be: [preLoadUser, token, userId]",{"range":"584","text":"585"},"Update the dependencies array to be: [token, user._id]",{"range":"586","text":"587"},"Update the dependencies array to be: [currentTab, token, userId]",{"range":"588","text":"589"},"Update the dependencies array to be: [orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",{"range":"590","text":"591"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",{"range":"592","text":"593"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",{"range":"594","text":"595"},{"range":"596","text":"587"},"Update the dependencies array to be: [status, addEmployeeActive, user._id, token]",{"range":"597","text":"598"},"Update the dependencies array to be: [orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"599","text":"600"},"Update the dependencies array to be: [loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"601","text":"602"},{"range":"603","text":"587"},{"range":"604","text":"587"},{"range":"605","text":"587"},{"range":"606","text":"558"},{"range":"607","text":"560"},{"range":"608","text":"558"},{"range":"609","text":"560"},[1930,1941],"[cartCount, token, user]",[1755,1757],"[productId]",[902,903],"",[902,902],"\\",[918,919],[918,918],[1232,1244],"[currentTab, preLoad, token, userId]",[1292,1308],"[accountsActive, preLoad, token, userId]",[913,915],"[token, userId]",[1327,1329],"[preLoad, token, userId]",[1372,1374],[1875,1877],"[preLoadShippingAddress, token, userId]",[2164,2170],"[cart, loadSubTotal_value]",[1123,1125],"[cartItemProductId, getProductDetails]",[1201,1211],"[product._id, quantity, updateQuantity]",[1298,1310],[1232,1244],[1877,1879],"[preLoadCart, token, userId]",[1944,1946],"[preLoadUser, token, userId]",[719,721],"[token, user._id]",[1573,1585],"[currentTab, token, userId]",[1864,1931],"[orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",[3254,3313],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",[3386,3445],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",[1401,1403],[1629,1656],"[status, addEmployeeActive, user._id, token]",[2769,2808],"[orderUpdateActive, orderUpdatePayment, token, user._id]",[2880,2919],"[loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",[1491,1493],[1229,1231],[719,721],[1281,1282],[1281,1281],[1297,1298],[1297,1297]]