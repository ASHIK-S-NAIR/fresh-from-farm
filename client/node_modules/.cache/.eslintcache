[{"F:\\mern\\projects\\greenbeans\\client\\src\\index.js":"1","F:\\mern\\projects\\greenbeans\\client\\src\\App.js":"2","F:\\mern\\projects\\greenbeans\\client\\src\\Routes.js":"3","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js":"4","F:\\mern\\projects\\greenbeans\\client\\src\\backend.js":"5","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\index.js":"6","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js":"7","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js":"8","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js":"9","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js":"10","F:\\mern\\projects\\greenbeans\\client\\src\\context\\Context.js":"11","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js":"12","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\AdminRoutes.js":"13","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\CustomerRoutes.js":"14","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\EmployeeRoutes.js":"15","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js":"16","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js":"17","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js":"18","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js":"19","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js":"20","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js":"21","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js":"22","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js":"23","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js":"24","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js":"25","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js":"26","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js":"27","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js":"28","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js":"29","F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js":"30","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js":"31","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js":"32","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js":"33","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js":"34","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js":"35","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js":"36","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js":"37","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js":"38","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js":"39","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js":"40","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js":"41","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js":"42","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js":"43","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js":"44","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js":"45","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js":"46","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js":"47","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js":"48","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js":"49","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js":"50","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js":"51","F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js":"52","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js":"53","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EditProduct.js":"54","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteProduct.js":"55","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteEmployee.js":"56","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteCustomer.js":"57","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\BarChart.js":"58","F:\\mern\\projects\\greenbeans\\client\\src\\core\\data.js":"59","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\LineChart.js":"60","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\PieChart.js":"61","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Loading.js":"62","F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\store.js":"63","F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\reducers\\index.js":"64","F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\reducers\\productReducer.js":"65","F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\constants\\action-types.js":"66","F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductDetail.js":"67","F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductListing.js":"68","F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductComponent.js":"69","F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\actions\\productActions.js":"70","F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\reducers\\cartReducer.js":"71","F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\actions\\cartActions.js":"72"},{"size":408,"mtime":1658155217094,"results":"73","hashOfConfig":"74"},{"size":366,"mtime":1657882538187,"results":"75","hashOfConfig":"74"},{"size":4320,"mtime":1658125722446,"results":"76","hashOfConfig":"74"},{"size":21467,"mtime":1658291098991,"results":"77","hashOfConfig":"74"},{"size":49,"mtime":1650587647917,"results":"78","hashOfConfig":"74"},{"size":1491,"mtime":1656045399326,"results":"79","hashOfConfig":"74"},{"size":14165,"mtime":1658334331230,"results":"80","hashOfConfig":"74"},{"size":74,"mtime":1654823535619,"results":"81","hashOfConfig":"74"},{"size":5878,"mtime":1658240008201,"results":"82","hashOfConfig":"74"},{"size":2288,"mtime":1656601759635,"results":"83","hashOfConfig":"74"},{"size":233,"mtime":1656229436706,"results":"84","hashOfConfig":"74"},{"size":4278,"mtime":1656117863379,"results":"85","hashOfConfig":"74"},{"size":356,"mtime":1656060724822,"results":"86","hashOfConfig":"74"},{"size":490,"mtime":1656060536702,"results":"87","hashOfConfig":"74"},{"size":364,"mtime":1656060630163,"results":"88","hashOfConfig":"74"},{"size":1078,"mtime":1651432461264,"results":"89","hashOfConfig":"90"},{"size":3791,"mtime":1656124941765,"results":"91","hashOfConfig":"74"},{"size":4335,"mtime":1655865571670,"results":"92","hashOfConfig":"74"},{"size":4534,"mtime":1655976986896,"results":"93","hashOfConfig":"74"},{"size":5356,"mtime":1653404673405,"results":"94","hashOfConfig":"74"},{"size":5346,"mtime":1655865708719,"results":"95","hashOfConfig":"74"},{"size":5288,"mtime":1655865834594,"results":"96","hashOfConfig":"74"},{"size":16347,"mtime":1656521767193,"results":"97","hashOfConfig":"74"},{"size":8864,"mtime":1658165208275,"results":"98","hashOfConfig":"74"},{"size":3154,"mtime":1658144566309,"results":"99","hashOfConfig":"74"},{"size":4483,"mtime":1656124998316,"results":"100","hashOfConfig":"74"},{"size":3295,"mtime":1656124789401,"results":"101","hashOfConfig":"74"},{"size":8540,"mtime":1658252352168,"results":"102","hashOfConfig":"74"},{"size":913,"mtime":1653185782697,"results":"103","hashOfConfig":"74"},{"size":6318,"mtime":1657013897535,"results":"104","hashOfConfig":"74"},{"size":5803,"mtime":1656201493633,"results":"105","hashOfConfig":"74"},{"size":9675,"mtime":1657013940485,"results":"106","hashOfConfig":"74"},{"size":14925,"mtime":1657523416546,"results":"107","hashOfConfig":"74"},{"size":9209,"mtime":1657531269855,"results":"108","hashOfConfig":"74"},{"size":5002,"mtime":1657028949395,"results":"109","hashOfConfig":"74"},{"size":4266,"mtime":1655804802407,"results":"110","hashOfConfig":"74"},{"size":6015,"mtime":1656511826974,"results":"111","hashOfConfig":"74"},{"size":3979,"mtime":1656502629508,"results":"112","hashOfConfig":"74"},{"size":7768,"mtime":1657018534907,"results":"113","hashOfConfig":"74"},{"size":2020,"mtime":1655030746252,"results":"114","hashOfConfig":"74"},{"size":5259,"mtime":1655254348856,"results":"115","hashOfConfig":"74"},{"size":5158,"mtime":1655268492591,"results":"116","hashOfConfig":"74"},{"size":11515,"mtime":1657524505626,"results":"117","hashOfConfig":"74"},{"size":5841,"mtime":1657013631713,"results":"118","hashOfConfig":"74"},{"size":3625,"mtime":1656930849187,"results":"119","hashOfConfig":"74"},{"size":6581,"mtime":1655834417190,"results":"120","hashOfConfig":"74"},{"size":4272,"mtime":1655804956610,"results":"121","hashOfConfig":"74"},{"size":4261,"mtime":1656997893019,"results":"122","hashOfConfig":"74"},{"size":2733,"mtime":1655812055343,"results":"123","hashOfConfig":"74"},{"size":2773,"mtime":1656930732027,"results":"124","hashOfConfig":"74"},{"size":5340,"mtime":1658285406379,"results":"125","hashOfConfig":"74"},{"size":351,"mtime":1655957674061,"results":"126","hashOfConfig":"74"},{"size":7816,"mtime":1656118388270,"results":"127","hashOfConfig":"74"},{"size":6813,"mtime":1657017645257,"results":"128","hashOfConfig":"74"},{"size":2874,"mtime":1657017275687,"results":"129","hashOfConfig":"74"},{"size":2865,"mtime":1657018923131,"results":"130","hashOfConfig":"74"},{"size":2862,"mtime":1657029115794,"results":"131","hashOfConfig":"74"},{"size":206,"mtime":1657035303203,"results":"132","hashOfConfig":"74"},{"size":501,"mtime":1657034562427,"results":"133","hashOfConfig":"74"},{"size":210,"mtime":1657036502587,"results":"134","hashOfConfig":"74"},{"size":206,"mtime":1657036687155,"results":"135","hashOfConfig":"74"},{"size":671,"mtime":1658254586066,"results":"136","hashOfConfig":"74"},{"size":331,"mtime":1658024771096,"results":"137","hashOfConfig":"74"},{"size":378,"mtime":1658138960418,"results":"138","hashOfConfig":"74"},{"size":781,"mtime":1658033380497,"results":"139","hashOfConfig":"74"},{"size":331,"mtime":1658119131543,"results":"140","hashOfConfig":"74"},{"size":1571,"mtime":1658119248708,"results":"141","hashOfConfig":"74"},{"size":926,"mtime":1658033755615,"results":"142","hashOfConfig":"74"},{"size":926,"mtime":1657912678711,"results":"143","hashOfConfig":"74"},{"size":1119,"mtime":1658125184613,"results":"144","hashOfConfig":"74"},{"size":514,"mtime":1658138875222,"results":"145","hashOfConfig":"74"},{"size":1102,"mtime":1658139471630,"results":"146","hashOfConfig":"74"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"1kpwsys",{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"150"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"150"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"150"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"150"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"150"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lc3eax",{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"150"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"150"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"150"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"150"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"150"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"150"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"150"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"150"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"150"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"150"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"150"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"150"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"150"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"150"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"150"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"150"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"150"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"150"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"150"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"150"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"150"},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"150"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"150"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"150"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"150"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"150"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"150"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"150"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"150"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"150"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"150"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"150"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"150"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"150"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"150"},"F:\\mern\\projects\\greenbeans\\client\\src\\index.js",[],[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\App.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Routes.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Nav.js",["405","406","407","408","409"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\backend.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\auth\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Shop.js",["410","411","412","413"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\shopHelper.js",["414","415"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\ProductDetail.js",["416","417","418","419"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { API } from \"../backend\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getProduct, getAllProducts } from \"./helper/productDetailHelper\";\r\nimport { isAuthenticated } from \"../auth/index\";\r\nimport { addToUserCart } from \"../user\";\r\nimport { CartContext } from \"../context/Context\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchCart } from \"../Redux/actions/cartActions\";\r\n\r\nconst ProductDetail = () => {\r\n  const [product, setProduct] = useState();\r\n  const [products, setProducts] = useState([]);\r\n  const [quantity, setQuantity] = useState(\"1\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { productId } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const { preLoadCart } = useContext(CartContext);\r\n\r\n  const loadProduct = async (productId) => {\r\n    try {\r\n      const data = await getProduct(productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProduct(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadProducts = async () => {\r\n    try {\r\n      const data = await getAllProducts(product.pCategory);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProducts(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = async (productId, quantity) => {\r\n    try {\r\n      if (isAuthenticated() && user.role === 0) {\r\n        var data = await addToUserCart(user._id, token, {\r\n          productId,\r\n          quantity,\r\n        });\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          // preLoadCart(user._id, token);\r\n          dispatch(fetchCart());\r\n          return navigate(`/cart/${user._id}`);\r\n        }\r\n      } else if (isAuthenticated()) {\r\n        return \"\";\r\n      } else {\r\n        navigate(\"/login\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProduct(productId);\r\n  }, [productId]);\r\n\r\n  useEffect(() => {\r\n    loadProducts(productId);\r\n  }, [product]);\r\n\r\n  return (\r\n    <section className=\"productDetail productDetail-section\">\r\n      {product && (\r\n        <div className=\"wrap productDetail-wrap\">\r\n          <div className=\"productDetail-img-sec\">\r\n            <div className=\"productDetail-img-container\">\r\n              <div\r\n                className={`productDetail-category-sec ${\r\n                  product.pCategory === \"vegetable\"\r\n                    ? \"color-green\"\r\n                    : \"color-orange\"\r\n                }`}\r\n              >\r\n                <p className=\"productDetail-category\">\r\n                  {product.pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                </p>\r\n              </div>\r\n              <img\r\n                className=\"productDetail-img\"\r\n                src={`${API}/product/photo/${product.pImg.key}`}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"productDetail-info\">\r\n            <h1 className=\"productDetail-name\">{product.pName}</h1>\r\n            <h2 className=\"productDetail-price\">\r\n              ₹<span>{product.pPrice + \"/Kg\"}</span>\r\n            </h2>\r\n            <p className=\"productDetail-description\">{product.pDescription}</p>\r\n            <h3 className=\"productDetail-stock\">{product.pStock}kg in stock</h3>\r\n            <div className=\"productDetail-quantity-sec\">\r\n              <p className=\"productDetail-quantity-p\">QTY:</p>{\" \"}\r\n              <input\r\n                type=\"text\"\r\n                className=\"productDetail-quantity\"\r\n                onChange={(e) => setQuantity(e.target.value)}\r\n                value={quantity}\r\n              />\r\n              <p className=\"productDetail-quantity-p\">Kg</p>\r\n            </div>\r\n            <button\r\n              className={`productDetail-btn ${\r\n                product.pStock === 0 ? \"button-unclickable\" : \"\"\r\n              }`}\r\n              onClick={() => handleAddToCart(product._id, quantity)}\r\n            >\r\n              Add to Cart\r\n            </button>\r\n            {product.pStock === 0 && (\r\n              <p className=\"productDetail-OOS\">Currently Out of Stock</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {products && (\r\n        <div className=\"wrap products-wrap\">\r\n          {products.map((product, index) => {\r\n            return (\r\n              <Link to={`/product/${product._id}`} key={index}>\r\n                <div className=\"product-sec\">\r\n                  <div\r\n                    className={`product-category-sec ${\r\n                      product.pCategory === \"vegetable\"\r\n                        ? \"color-green\"\r\n                        : \"color-orange\"\r\n                    }`}\r\n                  >\r\n                    <p className=\"product-category\">\r\n                      {product.pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                    </p>\r\n                  </div>\r\n                  <img\r\n                    className=\"product-img\"\r\n                    src={`${API}/product/photo/${product.pImg.key}`}\r\n                    alt=\"\"\r\n                  />\r\n                  <div className=\"product-info\">\r\n                    <h2 className=\"product-name\">{product.pName}</h2>\r\n                    <h3 className=\"product-stock\">\r\n                      {product.pStock} Kg in stock\r\n                    </h3>\r\n                    <h1 className=\"product-price\">{product.pPrice}/Kg</h1>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\helper\\productDetailHelper.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\context\\Context.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\Login.js",["420","421","422","423"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { login, authenticate } from \"../auth\";\r\n\r\nconst Login = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { email, password, error, loading, success } = values;\r\n\r\n  const naviagte = useNavigate();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(email && password)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      console.log(\"Please enter a valid email address\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid email\",\r\n      });\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      const data = await login({ email, password });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n      authenticate(data);\r\n\r\n      return naviagte(\"/\");\r\n    } catch (error) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <section className=\"login-section\">\r\n      <div className=\"wrap login-wrap\">\r\n        <div className=\"popup-small-sec login-popup\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec login-head-sec\">\r\n              <h1 className=\"popup-header\">Log In</h1>\r\n              <p className=\"popup-header-p\">\r\n                Don't have an account ?{\" \"}\r\n                <Link to=\"/signup\" className=\"popup-header-link\">\r\n                  Signup\r\n                </Link>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    onChange={handleChange(\"email\")}\r\n                    value={email}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"popup-form-input\"\r\n                    onChange={handleChange(\"password\")}\r\n                    value={password}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"popup-form-btn login-popup-btn\"\r\n                onClick={onSubmit}\r\n              >\r\n                Log In\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\AdminRoutes.js",["424"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 2)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\CustomerRoutes.js",["425","426","427"],[],"import React, {useContext} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/Context\";\r\nimport {isAuthenticated} from \"./index\";\r\n\r\nconst CustomerRoutes = ({children}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n  const { authActive, setAuthActive } = useContext(AuthContext);\r\n\r\n  if(!(isAuthenticated() && isAuthenticated().user.role === 0)){\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default CustomerRoutes","F:\\mern\\projects\\greenbeans\\client\\src\\auth\\EmployeeRoutes.js",["428"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst EmployeeRoutes = ({ children }) => {\r\n  const navigate = useNavigate();\r\n\r\n  if (!(isAuthenticated() && isAuthenticated().user.role === 1)) {\r\n    return navigate(\"/\");\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default EmployeeRoutes;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\UserPanel.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\CustomerBoard.js",["429"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../icons/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Orders from \"./Orders\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst CustomerBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n            <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <div className=\"userBoard-user-detail-sec\">\r\n                <h3 className=\"userBoard-user-detail-name\">\r\n                  {name.length > 6 ? name.substring(0, 6) : name}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/orders/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"orders\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Orders\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Accounts\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/customerboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Settings\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"accounts\" && <Accounts userValues={values} />}\r\n          {tabActive === \"orders\" && <Orders userValues={values} />}\r\n          {tabActive === \"settings\" && <Settings userValues={values} />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CustomerBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Accounts.js",["430","431"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport EditPersonalInformation from \"./EditPersonalInformation\";\r\nimport EditAddress from \"./EditAddress\";\r\nimport { getUser } from \"../user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Accounts = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [accountsActive, setAccountsActive] = useState(null);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name, email, phoneNumber, houseName, streetName } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, [accountsActive]);\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <AccountsContext.Provider value={{ accountsActive, setAccountsActive }}>\r\n        <h1 className=\"userBoard-right-header\">Account</h1>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <h2 className=\"userBoard-subHeader\">Personal Information</h2>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editpersonalinformation\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-single-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Email</label>\r\n                  <p className=\"userBoard-right-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Name</label>\r\n                  <p className=\"userBoard-right-value\">{name}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Phone</label>\r\n                  <p className=\"userBoard-right-value\">{phoneNumber}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userBoard-right-subSec\">\r\n          <div className=\"userBoard-right-subSec-small\">\r\n            <div className=\"userBoard-right-subHead\">\r\n              <div className=\"userBoard-subHeader\">Address</div>\r\n              <img\r\n                src={EditIcon}\r\n                alt=\"\"\r\n                className=\"userBoard-icon\"\r\n                onClick={() => setAccountsActive(\"editaddress\")}\r\n              />\r\n            </div>\r\n            <div className=\"userBoard-right-subInner\">\r\n              <div className=\"userBoard-right-double-group\">\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">House Name</label>\r\n                  <p className=\"userBoard-right-value\">{houseName}</p>\r\n                </div>\r\n                <div className=\"userBoard-right-group\">\r\n                  <label className=\"userBoard-right-label\">Street</label>\r\n                  <p className=\"userBoard-right-value\">{streetName}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {accountsActive === \"editpersonalinformation\" && (\r\n          <EditPersonalInformation />\r\n        )}\r\n        {accountsActive === \"editaddress\" && <EditAddress />}\r\n      </AccountsContext.Provider>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Orders.js",["432","433","434"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUserOrders } from \"../user\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport moment from \"moment\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\n\r\nconst Orders = () => {\r\n  const { userId } = useParams();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(null);\r\n  const [order, setOrder] = useState();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const getUserOrderDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUserOrders(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserOrderDetails(userId, token);\r\n  }, []);\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Orders</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <table className=\"userBoard-right-customer-order-table\">\r\n          <thead className=\"userBoard-right-customer-order-table-head-sec\">\r\n            <tr>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Status\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Total\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"userBoard-right-customer-order-table-head-value\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"userBoard-right-customer-order-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"userBoard-right-customer-order-table-body-tr\"\r\n                  >\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      <div\r\n                        className={`userBoard-right-customer-order-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-body-value\">\r\n                      {order.OemployeeId ? order.OemployeeId : \"Not Assigned\"}\r\n                    </td>\r\n                    <td className=\"userBoard-right-customer-order-table-head-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                      <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Settings.js",["435","436"],[],"import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated, logout } from \"../auth\";\r\nimport { changePassword } from \"../user\";\r\n\r\nconst Settings = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const { oldPassword, newPassword, confirmPassword, error, loading, success } =\r\n    values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(oldPassword && newPassword && confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      oldPassword.length < 6 ||\r\n      newPassword.length < 6 ||\r\n      confirmPassword < 6\r\n    ) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    if (!(newPassword === confirmPassword)) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Password confirmation does not match\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await changePassword(userId, token, {\r\n        oldPassword,\r\n        newPassword,\r\n      });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      console.log(\"Success\");\r\n      setValues({ ...values, success: true, loading: \"\", error: \"\" });\r\n      logout(() => navigate(\"/\"));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, success: false })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"userBoard-right-section accounts-section\">\r\n      <h1 className=\"userBoard-right-header\">Settings</h1>\r\n      <div className=\"userBoard-right-subSec\">\r\n        <div className=\"userBoard-righ-subsec-small\">\r\n          <div className=\"userBoard-right-subHead\">\r\n            <h2 className=\"userBoard-subHeader\">Change Password</h2>\r\n          </div>\r\n          <div className=\"userBoard-right-subInner\">\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">Old Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"oldPassword\")}\r\n                  value={oldPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"newPassword\")}\r\n                  value={newPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"userBoard-right-single-group\">\r\n              <div className=\"userBoard-right-group\">\r\n                <label className=\"userBoard-right-label\">\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"userBoard-right-input\"\r\n                  onChange={handleChange(\"confirmPassword\")}\r\n                  value={confirmPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className=\"userBoard-right-btn\" onClick={onSubmit}>\r\n              Change\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {error && errorMessage()}\r\n      {success && successMessage()}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditPersonalInformation.js",["437","438","439","440"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst EditPersonalInformation = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n  };\r\n\r\n  const { email, name, phoneNumber, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        name: userDetails.name,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      };\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(name && phoneNumber)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      name === preLoadValues.name &&\r\n      phoneNumber === preLoadValues.phoneNumber\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    if (phoneNumber.length !== 10) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid phone Number\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({ name, phoneNumber }, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n      return setAccountsActive(null);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Personal Information</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={name}\r\n                    onChange={handleChange(\"name\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={phoneNumber}\r\n                    onChange={handleChange(\"phoneNumber\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditPersonalInformation;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EditAddress.js",["441","442","443","444"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { AccountsContext } from \"../context/Context\";\r\nimport { updateUser, getUser } from \"../user\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst EditAddress = () => {\r\n  const { userId } = useParams();\r\n\r\n  const { setAccountsActive } = useContext(AccountsContext);\r\n\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  var preLoadValues = {\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  };\r\n\r\n  const { email, houseName, streetName, error, loading, success } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      preLoadValues = {\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName\r\n      }\r\n\r\n      return setValues({\r\n        ...values,\r\n        houseName: userDetails.address.houseName,\r\n        email: userDetails.email,\r\n        streetName: userDetails.address.streetName\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (!(houseName && streetName)) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (\r\n      houseName === preLoadValues.houseName &&\r\n      streetName === preLoadValues.streetName\r\n    ) {\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"No Change\",\r\n      });\r\n    }\r\n\r\n    const address = {\r\n      houseName: houseName,\r\n      streetName: streetName\r\n    }\r\n\r\n    try {\r\n      var data = await updateUser({address}, userId, token);\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n\r\n\r\n      return setAccountsActive(null);\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Address</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAccountsActive(null)}\r\n              >\r\n              <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <p className=\"popup-form-value\">{email}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">House Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={houseName}\r\n                    onChange={handleChange(\"houseName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Street Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={streetName}\r\n                    onChange={handleChange(\"streetName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditAddress;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\user\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Cart.js",["445","446","447","448","449","450","451","452","453"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { CartContext } from \"../context/Context\";\r\nimport {\r\n  deleteFromCart,\r\n  getUser,\r\n  getUserCart,\r\n  // getUserCart,\r\n  updateFromUserCart,\r\n} from \"../user\";\r\nimport CartItem from \"./CartItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchCart } from \"../Redux/actions/cartActions\";\r\n\r\nconst Cart = () => {\r\n  const cart = useSelector((state) => state.allCart.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(\"cartcart\", cart);\r\n\r\n  // const { cart, setCart} = useContext(CartContext);\r\n  // const [cart, setCart] = useState([]);\r\n  const [subTotal_items, setSubTotal_items] = useState(0);\r\n  const [subTotal_value, setSubTotal_value] = useState(0);\r\n  const [shippingAddress_state, setShippingAddress_state] = useState(\"default\");\r\n  const [shippingAddress, setShippingAddress] = useState({\r\n    shippingAddress_houseName: \" \",\r\n    shippingAddress_streetName: \" \",\r\n  });\r\n  const [productDetails, setProductDetails] = useState();\r\n\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { shippingAddress_houseName, shippingAddress_streetName } =\r\n    shippingAddress;\r\n\r\n  const preLoadShippingAddress = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        return setShippingAddress({\r\n          ...shippingAddress,\r\n          shippingAddress_houseName: data.address.houseName,\r\n          shippingAddress_streetName: data.address.streetName,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCart());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    preLoadShippingAddress(userId, token);\r\n  }, []);\r\n\r\n  const loadSubTotal_value = async () => {\r\n    var total = 0;\r\n    cart.map((cartItem) => {\r\n      return (total = total + cartItem.product.pPrice * cartItem.quantity);\r\n    });\r\n\r\n    return setSubTotal_value(total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSubTotal_value();\r\n  }, [cart]);\r\n\r\n  useEffect(() => {\r\n    setSubTotal_items(cart.length);\r\n  }, [cart]);\r\n\r\n  // const preLoadCart = async (userId, token) => {\r\n  //   try {\r\n  //     const data = await getUserCart(userId, token);\r\n  //     // return setCart(data.cart);\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"reaching here awsome vini\")\r\n  //   preLoadCart(userId, token);\r\n  // }, []);\r\n\r\n  const updateQuantity = async (productId, quantity) => {\r\n    try {\r\n      const data = await updateFromUserCart(userId, token, {\r\n        productId,\r\n        quantity,\r\n      });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        dispatch(fetchCart());\r\n        // return preLoadCart(userId, token);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (productId) => {\r\n    try {\r\n      const data = await deleteFromCart(userId, token, productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        dispatch(fetchCart());\r\n        // return preLoadCart(userId, token);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // const loadCartItems = (cart) => {\r\n  //   console.log(\"cartItem\", cart)\r\n  //   cart.map((cartItem, index) => {\r\n  //     return (\r\n  //       <CartItem\r\n  //         cartItemProductId={cartItem.product._id}\r\n  //         cartItemQuantity={cartItem.quantity}\r\n  //         key={index}\r\n  //         updateQuantity={updateQuantity}\r\n  //         deleteProduct={deleteProduct}\r\n  //       />\r\n  //     );\r\n  //   });\r\n  // };\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setShippingAddress({ ...shippingAddress, [name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <section className=\"cart-section\">\r\n      <div className=\"wrap cart-wrap\">\r\n        <div className=\"cart-header-sec\">\r\n          <h1 className=\"cart-header\">My Cart </h1>\r\n        </div>\r\n        <div className=\"cart-subsection\">\r\n          <div className=\"cartDetail-sec\">\r\n            {/* <div className=\"cartDetail-sec-hr\"></div> */}\r\n            {cart &&\r\n              cart.map((cartItem, index) => {\r\n                return (\r\n                  <CartItem\r\n                    cartItemProductId={cartItem.product._id}\r\n                    cartItemQuantity={cartItem.quantity}\r\n                    key={index}\r\n                    updateQuantity={updateQuantity}\r\n                    deleteProduct={deleteProduct}\r\n                  />\r\n                );\r\n              })}\r\n            <div className=\"cart-subTotal-sec\">\r\n              <h2 className=\"cart-subTotal-h2\">\r\n                {`Subtotal (${subTotal_items} items)`} :{\" \"}\r\n                <span className=\"cart-subTotal-price\">{`${subTotal_value}`}</span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"cart-placeOrder-sec\">\r\n            <div className=\"cart-subTotal-sec cart-placeOrder-subTotal-sec\">\r\n              <h2 className=\"cart-subTotal-h2\">\r\n                {`Subtotal (${subTotal_items} items)`} :{\" \"}\r\n                <span className=\"cart-subTotal-price\">{`${subTotal_value}`}</span>\r\n              </h2>\r\n            </div>\r\n            <div className=\"cart-shippingAddress-sec\">\r\n              <h3 className=\"cart-shippingAddress-header\">Shipping Address</h3>\r\n              {shippingAddress_state === \"default\" && (\r\n                <div className=\"cart-shippingAddress-default-sec\">\r\n                  <div className=\"cart-shippingAddress-default-address-sec\">\r\n                    <p className=\"cart-shippingAddress-default-address cart-shippingAddress-default-HouseName\">\r\n                      {shippingAddress_houseName}\r\n                    </p>\r\n                    <p className=\"cart-shippingAddress-default-address cart-shippingAddress-default-StreetName\">\r\n                      {shippingAddress_streetName}\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    className=\"cart-shippingAddress-edit-btn\"\r\n                    onClick={() => setShippingAddress_state(\"edit\")}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <Link to={`/cart/payment/${userId}`} state={shippingAddress}>\r\n                    <button className=\"cart-shippingAddress-cta-btn\">\r\n                      Deliver to this Address\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n              {shippingAddress_state === \"edit\" && (\r\n                <div className=\"cart-shippingAddress-edit-sec\">\r\n                  <form className=\"cart-shippingAddress-edit-address-form\">\r\n                    <p\r\n                      className=\"cart-shippingAddress-edit-address-default_state\"\r\n                      onClick={() => setShippingAddress_state(\"default\")}\r\n                    >\r\n                      Go back to default address\r\n                    </p>\r\n                    <div className=\"cart-shippingAddress-edit-address-sec\">\r\n                      <p className=\"cart-shippingAddress-edit-address-label\">\r\n                        House Name\r\n                      </p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"cart-shippingAddress-edit-address-input\"\r\n                        value={shippingAddress_houseName || \" \"}\r\n                        onChange={handleChange(\"shippingAddress_houseName\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"cart-shippingAddress-edit-address-sec\">\r\n                      <p className=\"cart-shippingAddress-edit-address-label\">\r\n                        Street Name\r\n                      </p>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"cart-shippingAddress-edit-address-input\"\r\n                        value={shippingAddress_streetName || \" \"}\r\n                        onChange={handleChange(\"shippingAddress_streetName\")}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                  <Link\r\n                    to={`/cart/payment/${userId}`}\r\n                    state={{ shippingAddress }}\r\n                  >\r\n                    <button className=\"cart-shippingAddress-cta-btn\">\r\n                      Deliver to this Address\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartItem.js",["454","455"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { API } from \"../backend\";\r\nimport Trash from \"../icons/Trash.svg\";\r\nimport { getProduct } from \"./helper/productDetailHelper\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CartItem = ({\r\n  cartItemProductId,\r\n  cartItemQuantity,\r\n  updateQuantity,\r\n  deleteProduct,\r\n}) => {\r\n\r\n  const cart = useSelector((state) => state.allCart.cart);\r\n\r\n  const [product, setProduct] = useState({\r\n    _id: \"\",\r\n    pName: \"\",\r\n    pPrice: \"\",\r\n    pCategory: \"\",\r\n    pImg: \"\",\r\n  });\r\n  const [quantity, setQuantity] = useState(cartItemQuantity);\r\n\r\n  const { _id, pName, pPrice, pCategory, pImg } = product;\r\n\r\n  const getProductDetails = async (productId) => {\r\n    try {\r\n      const data = await getProduct(productId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProduct({\r\n          ...product,\r\n          _id: data._id,\r\n          pName: data.pName,\r\n          pPrice: data.pPrice,\r\n          pCategory: data.pCategory,\r\n          pImg: data.pImg,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductDetails(cartItemProductId);\r\n  }, [cart]);\r\n\r\n  useEffect(() => {\r\n    updateQuantity(product._id, quantity);\r\n  }, [quantity]);\r\n    \r\n  return (\r\n    <div className=\"cartItem-item\">\r\n      {pImg !== \"\" && (\r\n        <>\r\n          <div className=\"cartItem-item-left\">\r\n            <div className=\"cartItem-item-img-sec\">\r\n              <img\r\n                src={`${API}/product/photo/${pImg.key}`}\r\n                alt=\"\"\r\n                className=\"cartItem-item-img\"\r\n              />\r\n            </div>\r\n            <div className=\"cartItem-item-info\">\r\n              <h2 className=\"cartItem-item-productName\">{pName}</h2>\r\n              <div\r\n                className={`cartItem-item-category-sec ${\r\n                  pCategory === \"vegetable\" ? \"color-green\" : \"color-orange\"\r\n                }`}\r\n              >\r\n                <p className=\"cartItem-item-category\">\r\n                  {pCategory === \"vegetable\" ? \"Veg\" : \"Fruit\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"cartItem-item-action\">\r\n              <div className=\"cartItem-item-quantity-sec\">\r\n                <h4 className=\"cartItem-item-quantity-h3\">QTY:</h4>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"cartItem-item-quantity-input\"\r\n                  onChange={(e) => setQuantity(e.target.value)}\r\n                  value={quantity}\r\n                />\r\n                <h4 className=\"cartItem-item-quantity-h3\">Kg</h4>\r\n              </div>\r\n              <img\r\n                src={Trash}\r\n                alt=\"\"\r\n                className=\"cartItem-item-delete-icon\"\r\n                onClick={() => deleteProduct(_id)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"cartItem-item-right\">\r\n            <h2 className=\"cartItem-item-price\">{`${pPrice}/Kg`}</h2>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\EmployeeBoard..js",["456"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Dashboard from \"../employee/Dashboard\";\r\nimport Deliveries from \"../employee/Deliveries\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../icons/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst EmployeeBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n          <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <div className=\"userBoard-user-detail-sec\">\r\n                <h3 className=\"userBoard-user-detail-name\">\r\n                  {name.length > 6 ? name.substring(0, 6) : name}\r\n                </h3>\r\n\r\n                <p className=\"userBoard-user-detail-role\">(Employee)</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/dashboard/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"dashboard\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  Dashboard\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/deliveries/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                {\" \"}\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"deliveries\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  Deliveries\r\n                </div>{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Accounts\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/employeeboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Settings\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"dashboard\" && <Dashboard />}\r\n          {tabActive === \"deliveries\" && <Deliveries />}\r\n          {tabActive === \"accounts\" && <Accounts userValues={values} />}\r\n          {tabActive === \"settings\" && <Settings userValues={values} />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EmployeeBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminBoard.js",["457"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUser } from \"../user\";\r\nimport Profile from \"../icons/profile.svg\";\r\nimport Accounts from \"./Accounts\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst AdminBoard = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n  });\r\n\r\n  const { name } = values;\r\n  const { token, user } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const userDetails = await getUser(userId, token);\r\n\r\n      return setValues({\r\n        ...values,\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        phoneNumber: userDetails.phoneNumber,\r\n        houseName: userDetails.address.houseName,\r\n        streetName: userDetails.address.streetName,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preLoad(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"userBoard-section\">\r\n      <div className=\"wrap userBoard-wrap\">\r\n        <div className=\"userBoard-left\">\r\n          <div className=\"userBoard-user-detail\">\r\n            <img className=\"userBoard-user-detail-image\" src={Profile} alt=\"\" />\r\n            <div className=\"userBoard-user-detail-info\">\r\n              <p className=\"userBoard-user-detail-greetings\">Hello</p>\r\n              <div className=\"userBoard-user-detail-sec\">\r\n                <h3 className=\"userBoard-user-detail-name\">\r\n                  {name.length > 6 ? name.substring(0, 6) : name}\r\n                </h3>\r\n\r\n                <p className=\"userBoard-user-detail-role\">(Admin)</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ul className=\"userBoard-left-ul\">\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/adminboard/accounts/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"accounts\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Accounts\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"userBoard-left-li\">\r\n              <Link\r\n                to={`/adminboard/settings/${user._id}`}\r\n                className=\"userBoard-left-link\"\r\n              >\r\n                <div\r\n                  className={`userBoard-left-tag ${\r\n                    tabActive === \"settings\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  My Settings\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"userBoard-right\">\r\n          {tabActive === \"accounts\" && <Accounts />}\r\n          {/* {tabActive === \"orders\" && <Orders userValues={values} />} */}\r\n          {tabActive === \"settings\" && <Settings />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminBoard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\CartPayment.js",["458","459","460"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams, useNavigate } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getUserCart,\r\n  createOrder,\r\n  getUser,\r\n  razorPayOrder,\r\n  paymentVerify,\r\n  updateOrderConfirmation,\r\n} from \"../user\";\r\n\r\nexport const CartPayment = () => {\r\n  const { userId } = useParams();\r\n\r\n  const naviagte = useNavigate();\r\n  const location = useLocation();\r\n  const shippingAddress = location.state;\r\n  const [values, setValues] = useState({\r\n    paymentMode: \"RazorPay\",\r\n    total: 10,\r\n    userDetails: \"\",\r\n  });\r\n\r\n  var cart = [];\r\n  var order = \"\";\r\n\r\n  const { paymentMode, total, userDetails } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const isRadioSelected = (value) => {\r\n    if (paymentMode === value) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const preLoadCart = async (userId, token) => {\r\n    try {\r\n      const data = await getUserCart(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        cart = data.cart;\r\n        console.log(cart);\r\n        var tempTotal = 0;\r\n        cart.map(\r\n          (cartItem) =>\r\n            (tempTotal =\r\n              tempTotal + cartItem.product.pPrice * cartItem.quantity)\r\n        );\r\n        setValues({ ...values, total: tempTotal });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const preLoadUser = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        // return (userDetails = data);\r\n        console.log(\"Userdata\", data)\r\n        return setValues({ ...values, userDetails: data });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleOrder = async (userId, token) => {\r\n    try {\r\n      const data = await createOrder(userId, token, {\r\n        shippingAddress,\r\n        paymentMode,\r\n      });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        order = data.order;\r\n        if (paymentMode === \"RazorPay\") {\r\n          await handlePayment(total);\r\n        } else {\r\n          try {\r\n            const data = await updateOrderConfirmation(userId, token, order._id, {\r\n              Ostatus: \"Ordered\",\r\n            });\r\n            if (data.error) {\r\n              return console.log(data.error);\r\n            } else {\r\n              console.log(data);\r\n              naviagte(`/thankyou/${order._id}`);\r\n            }\r\n          } catch (error) {}\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePayment = async (total) => {\r\n    try {\r\n      const data = await razorPayOrder({ total });\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        console.log(data);\r\n        initPayment(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const initPayment = (data) => {\r\n    const options = {\r\n      key: process.env.RAZORPAY_KEY_SECRET,\r\n      amount: data.amount,\r\n      currency: data.currency,\r\n      name: \"Fruits and Veggies\",\r\n      order_id: data.id,\r\n      prefill: {\r\n        name: userDetails.name,\r\n        email: userDetails.email,\r\n        contact: userDetails.phoneNumber,\r\n      },\r\n      handler: async (response) => {\r\n        try {\r\n          const data = await paymentVerify({ response, order });\r\n          if (data.error) {\r\n            return console.log(data.error);\r\n          }\r\n          console.log(data);\r\n          naviagte(`/thankyou/${order._id}`);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n      theme: {\r\n        color: \"#3399cc\",\r\n      },\r\n    };\r\n    const rzp1 = new window.Razorpay(options);\r\n    rzp1.open();\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadCart(userId, token);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    preLoadUser(userId, token);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"cardPayment-section\">\r\n      <div className=\"wrap cardPayment-wrap\">\r\n        <div className=\"cardPayment-info-sec\">\r\n          <div className=\"cardPayment-delivery-details-sec\">\r\n            <h2 className=\"cardpayment-delivery-details-header\">\r\n              Delivery Details\r\n            </h2>\r\n            <div className=\"cardPayment-delivery-details\">\r\n              <div className=\"cardPayment-delivery-details-single-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">{userDetails.name}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Email\r\n                  </label>\r\n                  {/* <p className=\"cardPa yment-delivery-details-value\">{userDetails.email}</p> */}\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Phone\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                  {/* {userDetails.phoneNumber} */}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"cardPayment-delivery-details-subheader\">\r\n                Shipping Address\r\n              </h3>\r\n              <div className=\"cardPayment-delivery-details-double-group\">\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    House Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                  {/* {userDetails.address.houseName} */}\r\n                  </p>\r\n                </div>\r\n                <div className=\"cardPayment-delivery-details-group\">\r\n                  <label className=\"cardPayment-delivery-details-label\">\r\n                    Street Name\r\n                  </label>\r\n                  <p className=\"cardPayment-delivery-details-value\">\r\n                  {/* {userDetails.address.streetName} */}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"cardPayment-payment-details-sec\">\r\n            <h2 className=\"cardPayment-payment-details-header\">Payment Mode</h2>\r\n            <div className=\"cardPayment-payment-details-form\">\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"RazorPay\"\r\n                  value=\"RazorPay\"\r\n                  checked={isRadioSelected(\"RazorPay\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"RazorPay\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Make Payment Online (RazorPay)\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"cardPayment-payment-details-group\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"payment_mode\"\r\n                  id=\"CashOnDelivery\"\r\n                  value=\"CashOnDelivery\"\r\n                  checked={isRadioSelected(\"CashOnDelivery\")}\r\n                  onChange={(e) =>\r\n                    setValues({ ...values, paymentMode: e.target.value })\r\n                  }\r\n                />\r\n                <label\r\n                  htmlFor=\"CashOnDelivery\"\r\n                  className=\"cardPayment-payment-details-label\"\r\n                >\r\n                  Cash On Delivery\r\n                </label>\r\n              </div>\r\n              <button\r\n                className=\"cardPayment-payment-details-btn\"\r\n                onClick={() => handleOrder(userId, token)}\r\n              >\r\n                Make Payment\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\ThankYou.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\user\\OrderDetails.js",["461"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { getUser } from \"./index\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.OtotalPrice}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">{order._id}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\"> {order.Ostatus}</p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.OEmployeeId || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Ouser.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Ouser.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Ouser.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.Oaddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\core\\AdminDashPanel.js",["462","463"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUser } from \"../user\";\r\nimport DashboardIcon from \"../icons/dashboard.svg\";\r\nimport DashboardActiveIcon from \"../icons/dashboardActive.svg\";\r\nimport CartIcon from \"../icons/cart.svg\";\r\nimport CartActiveIcon from \"../icons/cart-active.svg\";\r\nimport ProductIcon from \"../icons/product.svg\";\r\nimport ProductActiveIcon from \"../icons/productActive.svg\";\r\nimport EmployerIcon from \"../icons/employer.svg\";\r\nimport EmployerActiveIcon from \"../icons/employerActive.svg\";\r\nimport CustomerIcon from \"../icons/customer.svg\";\r\nimport CustomerActiveIcon from \"../icons/customerActive.svg\";\r\nimport Dashboard from \"../admin/Dashboard\";\r\nimport Order from \"../admin/Order\";\r\nimport Product from \"../admin/Product\";\r\nimport Employee from \"../admin/Employee\";\r\nimport Customer from \"../admin/Customer\";\r\n\r\nconst AdminDashPanel = () => {\r\n  const { currentTab, userId } = useParams();\r\n  const [tabActive, setTabActive] = useState(currentTab);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setName(data.name);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTabActive(currentTab);\r\n    preload(userId, token);\r\n  }, [currentTab]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section\">\r\n      <div className=\"wrap adminDashPanel-wrap\">\r\n        <div className=\"adminDashPanel-left\">\r\n          <ul className=\"adminDashPanel-left-ul\">\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/dashboard/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"dashboard\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  {\" \"}\r\n                  <img\r\n                    src={\r\n                      tabActive === \"dashboard\" ? DashboardActiveIcon : DashboardIcon\r\n                    }\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Dashboard\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/order/${user._id}`}\r\n                className=\"adminDashPanel-left-link \"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"order\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"order\" ? CartActiveIcon : CartIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Order\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/product/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"product\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"product\" ? ProductActiveIcon : ProductIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Product\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/employee/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"employee\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"employee\" ? EmployerActiveIcon : EmployerIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Employee\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li className=\"adminDashPanel-left-li\">\r\n              <Link\r\n                to={`/admindashpanel/customer/${user._id}`}\r\n                className=\"adminDashPanel-left-link\"\r\n              >\r\n                <div\r\n                  className={`adminDashPanel-left-tag ${\r\n                    tabActive === \"customer\" ? \"active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={tabActive === \"customer\" ? CustomerActiveIcon : CustomerIcon}\r\n                    alt=\"\"\r\n                    className=\"adminDashPanel-left-img\"\r\n                  />\r\n                  Customer\r\n                </div>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"adminDashPanel-right\">\r\n          {tabActive === 'dashboard' && <Dashboard />}\r\n          {tabActive === 'order' && <Order />}\r\n          {tabActive === 'product' && <Product />}\r\n          {tabActive === 'employee' && <Employee />}\r\n          {tabActive === 'customer' && <Customer />}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminDashPanel;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Order.js",["464","465","466","467","468"],[],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { getAllOrders } from \"../user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport EmployeeUpdate from \"./EmployeeUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Order = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] =\r\n    useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n  const [countValues, setCountValues] = useState({\r\n    all: 0,\r\n    NotConfirmed: 0,\r\n    Ordered: 0,\r\n    Processing: 0,\r\n    PickingUp: 0,\r\n    OutForDelivery: 0,\r\n    Delivered: 0,\r\n    Cancelled: 0,\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const {\r\n    all,\r\n    NotConfirmed,\r\n    Ordered,\r\n    Processing,\r\n    PickingUp,\r\n    OutForDelivery,\r\n    Delivered,\r\n    Cancelled,\r\n  } = countValues;\r\n\r\n  const loadOrders = async (userId, token, status) => {\r\n    try {\r\n      const data = await getAllOrders(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = async (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handleEmployeeAssign = async (order) => {\r\n    return (\r\n      setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order)\r\n    );\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  const filterBtn = (statusState, statusValue, statusBtnValue) => {\r\n    return (\r\n      <button\r\n        className={`orders-filter-btn ${\r\n          status === statusState ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setStatus(statusState)}\r\n      >\r\n        {statusBtnValue} <span className=\"filter-btn-value\">{statusValue}</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const loadCountValues = async (userId, token) => {\r\n    var orders = [];\r\n    try {\r\n      const data = await getAllOrders(userId, token, \"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        orders = data;\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n\r\n    setCountValues({\r\n      ...countValues,\r\n      all: orders.length,\r\n      NotConfirmed: orders.filter((order) => order.Ostatus === \"Not-Confirmed\")\r\n        .length,\r\n      Ordered: orders.filter((order) => order.Ostatus === \"Ordered\").length,\r\n      Processing: orders.filter((order) => order.Ostatus === \"Processing\")\r\n        .length,\r\n      PickingUp: orders.filter((order) => order.Ostatus === \"Picking-Up\")\r\n        .length,\r\n      OutForDelivery: orders.filter(\r\n        (order) => order.Ostatus === \"Out-For-Delivery\"\r\n      ).length,\r\n      Delivered: orders.filter((order) => order.Ostatus === \"Delivered\").length,\r\n      Cancelled: orders.filter((order) => order.Ostatus === \"Cancelled\").length,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadOrders(user._id, token, status);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  useEffect(() => {\r\n    loadCountValues(user._id, token);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-right-section order-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Orders</h1>\r\n      <div className=\"adminDashPanel-right-subsection orders-filter-subSection\">\r\n        {filterBtn(\"all\", all, \"All\")}\r\n        {filterBtn(\"Not-Confirmed\", NotConfirmed, \"Not-Confirmed\")}\r\n        {filterBtn(\"Ordered\", Ordered, \"Ordered\")}\r\n        {filterBtn(\"Processing\", Processing, \"Processing\")}\r\n        {filterBtn(\"Picking-Up\", PickingUp, \"Picking-Up\")}\r\n        {filterBtn(\"Out-For-Delivery\", OutForDelivery, \"Out-For-Delivery\")}\r\n        {filterBtn(\"Delivered\", Delivered, \"Delivered\")}\r\n        {filterBtn(\"Cancelled\", Cancelled, \"Cancelled\")}\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Total</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <div\r\n                        className={`adminDashPanel-right-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentStatus === \"Paid\" ? (\r\n                        order.OpaymentStatus\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handlePaymentStatus(order)}\r\n                        >\r\n                          Pending\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                    {order.Ostatus === \"Not-Confirmed\" ? (\r\n                        \" \"\r\n                      ) : order.OemployeeName ? (\r\n                        order.OemployeeName\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handleEmployeeAssign(order)}\r\n                        >\r\n                          Not Assigned\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && (\r\n        <EmployeeUpdate\r\n          setOrderEmployeeAssignActive={setOrderEmployeeAssignActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Dashboard.js",["469","470","471","472","473","474","475","476","477","478","479","480"],[],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport CartIcon from \"../icons/cart.svg\";\r\nimport ProductIcon from \"../icons/product.svg\";\r\nimport EmployerIcon from \"../icons/employer.svg\";\r\nimport CustomerIcon from \"../icons/customer.svg\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getAllOrders,\r\n  getCountCustomers,\r\n  getCountEmployers,\r\n  getCountOrders,\r\n  getCountProducts,\r\n  getCustomers,\r\n  getEmployees,\r\n} from \"../user\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport EmployeeUpdate from \"./EmployeeUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\nimport BarChart from \"../Charts/BarChart\";\r\nimport { UserData } from \"../core/data\";\r\nimport LineChart from \"../Charts/LineChart\";\r\nimport PieChart from \"../Charts/PieChart\";\r\nimport { getAllProducts } from \"../core/helper/productDetailHelper\";\r\n\r\nconst Dashboard = () => {\r\n  const [statusValues, setStatusValues] = useState({\r\n    orderStatus: \"\",\r\n    productStatus: \"\",\r\n    employerStatus: \"\",\r\n    customerStatus: \"\",\r\n  });\r\n  const [commentValues, setCommentValues] = useState({\r\n    orderCommentValue: 0,\r\n    productCommentValue: 0,\r\n    employeeCommentValue: 0,\r\n    customerCommentValue: 0,\r\n  });\r\n  const [pendingOrders, setPendingOrders] = useState();\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] =\r\n    useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const [userData, setUserData] = useState({\r\n    labels: UserData.map((data) => data.year),\r\n    datasets: [\r\n      {\r\n        label: \"User Gain\",\r\n        data: UserData.map((data) => data.userGain),\r\n        backgroundColor: [\"#9db8d1\"],\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { orderStatus, productStatus, employerStatus, customerStatus } =\r\n    statusValues;\r\n\r\n  const {\r\n    orderCommentValue,\r\n    productCommentValue,\r\n    employeeCommentValue,\r\n    customerCommentValue,\r\n  } = commentValues;\r\n\r\n  const loadStatusValues = async (userId, token) => {\r\n    try {\r\n      const orderStatus = await getCountOrders(userId, token);\r\n      const productStatus = await getCountProducts(userId, token);\r\n      const employerStatus = await getCountEmployers(userId, token);\r\n      const customerStatus = await getCountCustomers(userId, token);\r\n\r\n      if (\r\n        orderStatus.error ||\r\n        productStatus.error ||\r\n        employerStatus.error ||\r\n        customerStatus.error\r\n      ) {\r\n        return console.log(\"status update error occured\");\r\n      } else {\r\n        return setStatusValues({\r\n          ...statusValues,\r\n          orderStatus: orderStatus,\r\n          productStatus: productStatus,\r\n          employerStatus: employerStatus,\r\n          customerStatus: customerStatus,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadCommentValues = async (userId, token) => {\r\n    try {\r\n      const orderCommentArray = await getAllOrders(userId, token, \"all\");\r\n      const productCommentArray = await getAllProducts(\"all\");\r\n      const emploeeCommentArray = await getEmployees(userId, token, \"all\");\r\n      const customerCommentArray = await getAllOrders(userId, token, \"all\");\r\n\r\n      if (\r\n        orderCommentArray.error ||\r\n        productCommentArray.error ||\r\n        emploeeCommentArray.error ||\r\n        customerCommentArray.error\r\n      ) {\r\n        return console.log(\"comment values update error occured\");\r\n      } else {\r\n        return setCommentValues({\r\n          ...commentValues,\r\n          orderCommentValue: orderCommentArray.filter(\r\n            (orderComment) =>\r\n              orderComment.Ostatus === \"Not-Confirmed\" ||\r\n              orderComment.Ostatus === \"Ordered\" ||\r\n              orderComment.Ostatus === \"Processing\" ||\r\n              orderComment.Ostatus === \"Picking-Up\" ||\r\n              orderComment.Ostatus === \"Out-For-Delivery\"\r\n          ).length,\r\n          productCommentValue: productCommentArray.filter(\r\n            (productComment) => productComment.pStock === 0\r\n          ).length,\r\n          employeeCommentValue: emploeeCommentArray.filter(\r\n            (employeeComment) => employeeComment.Estatus === \"Available\"\r\n          ).length,\r\n          customerCommentValue: customerCommentArray.filter(\r\n            (customerComment) =>\r\n              customerComment.Ostatus === \"Not-Confirmed\" ||\r\n              customerComment.Ostatus === \"Ordered\"\r\n          ).length,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadPendingOrders = async (userId, token) => {\r\n    try {\r\n      const data = await getAllOrders(userId, token, \"pending\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setPendingOrders(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  // const loadFromZero = async (value, setState) => {\r\n  //   for (var i = 0; i <= value; i++) {\r\n  //     return i;\r\n  //   }\r\n  // };\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = async (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handleEmployeeAssign = async (order) => {\r\n    return (\r\n      setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order)\r\n    );\r\n  };\r\n\r\n  // const handleEvent = () => {\r\n\r\n  // }\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadStatusValues(user._id, token);\r\n  }, [orderActive, orderUpdateActive, orderEmployeeAssignActive]);\r\n\r\n  useEffect(() => {\r\n    loadCommentValues(user._id, token);\r\n  }, [orderActive, orderUpdateActive, orderEmployeeAssignActive]);\r\n\r\n  useEffect(() => {\r\n    loadPendingOrders(user._id, token);\r\n  }, [orderActive, orderUpdateActive, orderEmployeeAssignActive]);\r\n  return (\r\n    <section className=\"adminDashPanel-right-section dashboard-section\">\r\n      <div className=\"adminDashPanel-right-subsection dashboard-subSection\">\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-orders\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Orders</p>\r\n            <h1 className=\"dashboard-status-value\">{orderStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-orders\">\r\n              {orderCommentValue} orders\r\n              not delivered\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={CartIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-products\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Products</p>\r\n            <h1 className=\"dashboard-status-value\">{productStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-products\">\r\n              {productCommentValue} products out of Stock\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={ProductIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-employers\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Employers</p>\r\n            <h1 className=\"dashboard-status-value\">{employerStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-employers\">\r\n              {employeeCommentValue} Employees available\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={EmployerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-customers\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Customers</p>\r\n\r\n            <h1 className=\"dashboard-status-value\">{customerStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-customers\">\r\n              {customerCommentValue} Customer order pending\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={CustomerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"adminDashPanel-right-subsection\">\r\n        <BarChart chartData= {userData} />\r\n        <LineChart chartData={userData} />\r\n        <PieChart chartData={userData} />\r\n      </div> */}\r\n\r\n      <h1 className=\"adminDashPanel-right-header\">Pending Orders</h1>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Total</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {pendingOrders &&\r\n              pendingOrders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr \"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <div\r\n                        className={`adminDashPanel-right-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentStatus === \"Paid\" ? (\r\n                        order.OpaymentStatus\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handlePaymentStatus(order)}\r\n                        >\r\n                          Pending\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.Ostatus === \"Not-Confirmed\" ? (\r\n                        \" \"\r\n                      ) : order.OemployeeName ? (\r\n                        order.OemployeeName\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handleEmployeeAssign(order)}\r\n                        >\r\n                          Not Assigned\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && (\r\n        <EmployeeUpdate\r\n          setOrderEmployeeAssignActive={setOrderEmployeeAssignActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Product.js",["481","482","483","484","485","486","487"],[],"import React, { useState, useEffect } from \"react\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport AddIcon from \"../icons/add.svg\";\r\nimport TrashIcon from \"../icons/Trash.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getAllProducts } from \"../core/helper/productDetailHelper\";\r\nimport { API } from \"../backend\";\r\nimport AddProduct from \"./AddProduct\";\r\nimport ProductDetail from \"./ProductDetail\";\r\nimport EditProduct from \"./EditProduct\";\r\nimport DeleteProduct from \"./DeleteProduct\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\n\r\nconst Product = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [category, setCategory] = useState(\"all\");\r\n  const [addProductActive, setAddProductActive] = useState(\"\");\r\n  const [editProductActive, setEditProductActive] = useState(\"\");\r\n  const [deleteProductActive, setDeleteProductActive] = useState(\"\");\r\n  const [productDetail, setProductDetail] = useState(\"\");\r\n  const [product, setProduct] = useState();\r\n  const [countValues, setCountValues] = useState({\r\n    all: 0,\r\n    Fruit: 0,\r\n    Vegetable: 0,\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { all, Fruit, Vegetable } = countValues;\r\n\r\n  const loadProducts = async (category) => {\r\n    try {\r\n      const data = await getAllProducts(category);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setProducts(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const filterBtn = (CategoryState, CategoryValue, CategoryBtnValue) => {\r\n    return (\r\n      <button\r\n        className={`orders-filter-btn ${\r\n          category === CategoryState ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setCategory(CategoryState)}\r\n      >\r\n        {CategoryBtnValue}{\" \"}\r\n        <span className=\"filter-btn-value\">{CategoryValue}</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const loadCountValues = async () => {\r\n    var products = [];\r\n    try {\r\n      const data = await getAllProducts(\"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        products = data;\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n\r\n    setCountValues({\r\n      ...countValues,\r\n      all: products.length,\r\n      Fruit: products.filter((product) => product.pCategory === \"fruit\").length,\r\n      Vegetable: products.filter((product) => product.pCategory === \"vegetable\")\r\n        .length,\r\n    });\r\n  };\r\n\r\n  // const loadMessage = () => {\r\n  //   set\r\n  // }\r\n\r\n  const handlePreview = (product) => {\r\n    return setProductDetail(\"productDetail\"), setProduct(product);\r\n  };\r\n  const handleEdit = (product) => {\r\n    return setEditProductActive(\"editProduct\"), setProduct(product);\r\n  };\r\n  const handleDelete = async (product) => {\r\n    return setDeleteProductActive(\"deleteProduct\"), setProduct(product);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProducts(category);\r\n  }, [category, addProductActive, editProductActive]);\r\n\r\n  useEffect(() => {\r\n    loadCountValues();\r\n  }, [category, addProductActive, editProductActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section product-section\">\r\n      {/* <div className=\"adminDashPanel-right-delete-Message-sec\">\r\n        <p className=\"adminDashPanel-right-delete-Message\">\r\n          Product Product Name - 99999999999999 was successfully deleted\r\n        </p>\r\n        <div className=\"cross-sec\">\r\n          <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n        </div>\r\n      </div> */}\r\n      <h1 className=\"adminDashPanel-right-header\">Products</h1>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-add-btn-subSection\">\r\n        <button\r\n          className=\"adminDashPanel-product-add-btn\"\r\n          onClick={() => setAddProductActive(\"addProduct\")}\r\n        >\r\n          <img\r\n            src={AddIcon}\r\n            className=\"adminDashPanel-product-add-btn-icon\"\r\n            alt=\"\"\r\n          />\r\n          ADD PRODUCT\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-filter-subSection\">\r\n        {filterBtn(\"all\", all, \"All\")}\r\n        {filterBtn(\"fruit\", Fruit, \"Fruit\")}\r\n        {filterBtn(\"vegetable\", Vegetable, \"Vegetable\")}\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Product Image\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Product Name\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Product ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Description\r\n              </th>\r\n\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Category\r\n              </th>\r\n\r\n              <th className=\"adminDashPanel-right-table-head-value\">Stock</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Price</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {products &&\r\n              products.map((product, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <img\r\n                        className=\"adminDashPanel-product-img\"\r\n                        src={`${API}/product/photo/${product.pImg.key}`}\r\n                        alt=\"\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pDescription}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pCategory}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pStock !== 0\r\n                        ? `${product.pStock} Kg`\r\n                        : \"Out of Stock\"}\r\n                    </td>\r\n\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {product.pPrice}\r\n                    </td>\r\n                    {/* <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(product.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(product.updatedAt).format(\"DD-MMM-yyyy\")}\r\n                    </td> */}\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(product)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(product)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(product)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {addProductActive === \"addProduct\" && (\r\n        <AddProduct setAddProductActive={setAddProductActive} />\r\n      )}\r\n      {editProductActive === \"editProduct\" && (\r\n        <EditProduct\r\n          setEditProductActive={setEditProductActive}\r\n          product={product}\r\n        />\r\n      )}\r\n      {deleteProductActive === \"deleteProduct\" && (\r\n        <DeleteProduct\r\n          setDeleteProductActive={setDeleteProductActive}\r\n          product={product}\r\n        />\r\n      )}\r\n      {productDetail === \"productDetail\" && (\r\n        <ProductDetail setProductDetail={setProductDetail} product={product} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Customer.js",["488","489","490","491"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteCustomer, getCustomers } from \"../user\";\r\nimport moment from \"moment\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport TrashIcon from \"../icons/Trash.svg\";\r\nimport CustomerDetail from \"./CustomerDetail\";\r\nimport DeleteCustomer from \"./DeleteCustomer\";\r\n\r\nconst Customer = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [customerDetail, setCustomerDetail] = useState(\"\");\r\n  const [deleteCustomerActive, setDeleteCustomerActive] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadCustomers = async (userId, token) => {\r\n    try {\r\n      const data = await getCustomers(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setCustomers(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (customer) => {\r\n    return setCustomerDetail(\"customerDetail\"), setCustomer(customer);\r\n  };\r\n\r\n  const handleDelete = async (customer) => {\r\n    return setDeleteCustomerActive(\"deleteCustomer\"), setCustomer(customer);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCustomers(user._id, token);\r\n  }, []);\r\n\r\n  // console.log(\"Customers\", customers);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section customer-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Customers</h1>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Name</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Customer ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Email</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Phone Number\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Address</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Created At\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {customers &&\r\n              customers.map((customer, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.name}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.email}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.phoneNumber}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {customer.address.houseName}\r\n                      <br />\r\n                      {customer.address.streetName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(customer.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(customer)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(customer)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {customerDetail === \"customerDetail\" && (\r\n        <CustomerDetail\r\n          customer={customer}\r\n          setCustomerDetail={setCustomerDetail}\r\n        />\r\n      )}\r\n      {deleteCustomerActive === \"deleteCustomer\" && (\r\n        <DeleteCustomer\r\n          customer={customer}\r\n          setDeleteCustomerActive={setDeleteCustomerActive}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\OrderUpdate.js",["492"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { adminUpdateOrderStatus } from \"../user\";\r\n\r\nconst OrderUpdate = ({ setOrderUpdateActive, order }) => {\r\n  const [status, setStatus] = useState(order.Ostatus);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOptions = (orderStatus) => {\r\n    if (orderStatus === \"Not-Confirmed\") {\r\n      return (\r\n        <>\r\n          <option value=\"Not-Confirmed\">Not-Confirmed</option>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Ordered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Ordered\">Ordered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Processing\") {\r\n      return (\r\n        <>\r\n          <option value=\"Processing\">Processing</option>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Picking-Up\") {\r\n      return (\r\n        <>\r\n          <option value=\"Picking-Up\">Picking-Up</option>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Out-For-Delivery\") {\r\n      return (\r\n        <>\r\n          <option value=\"Out-For-Delivery\">Out-For-Delivery</option>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (orderStatus === \"Delivered\") {\r\n      return (\r\n        <>\r\n          <option value=\"Delivered\">Delivered</option>\r\n          <option value=\"Cancelled\">Cancelled</option>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (userId, token, orderId, status) => {\r\n    try {\r\n      const data = adminUpdateOrderStatus(userId, token, orderId, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderUpdateActive(\"\");\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Order Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdateActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n                    {loadOptions(order.Ostatus)}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`popup-form-btn ${\r\n                  status === order.Ostatus ? \"button-unclickable\" : \"\"\r\n                }`}\r\n                onClick={() => handleUpdate(user._id, token, order._id, status)}\r\n              >\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddProduct.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\ProductDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\Employee.js",["493","494","495","496","497"],[],"import React, { useState, useEffect } from \"react\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport TrashIcon from \"../icons/Trash.svg\";\r\nimport AddIcon from \"../icons/add.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteEmployee, getEmployees } from \"../user\";\r\nimport moment from \"moment\";\r\nimport AddEmployee from \"./AddEmployee\";\r\nimport EmployeeDetail from \"./EmployeeDetail\";\r\nimport DeleteEmployee from \"./DeleteEmployee\";\r\n\r\nconst Employee = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [employee, setEmployee] = useState();\r\n  const [addEmployeeActive, setAddEmployeeActive] = useState(\"\");\r\n  const [deleteEmployeeActive, setDeleteEmployeeActive] = useState(\"\");\r\n  const [employeeDetail, setEmployeeDetail] = useState(\"\");\r\n  const [countValues, setCountValues] = useState({\r\n    all: 0,\r\n    Available: 0,\r\n    NotAvailable: 0,\r\n    OnDuty: 0,\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { all, Available, NotAvailable, OnDuty } = countValues;\r\n\r\n  const loadEmployees = async (userId, token, status) => {\r\n    try {\r\n      const data = await getEmployees(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployees(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const filterBtn = (statusState, statusValue, statusBtnValue) => {\r\n    return (\r\n      <button\r\n        className={`orders-filter-btn ${\r\n          status === statusState ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setStatus(statusState)}\r\n      >\r\n        {statusBtnValue} <span className=\"filter-btn-value\">{statusValue}</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const loadCountValues = async (userId, token) => {\r\n    var employees = [];\r\n    try {\r\n      const data = await getEmployees(userId, token, \"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        employees = data;\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n\r\n    setCountValues({\r\n      ...countValues,\r\n      all: employees.length,\r\n      Available: employees.filter(\r\n        (employee) => employee.Estatus === \"Available\"\r\n      ).length,\r\n      NotAvailable: employees.filter(\r\n        (employee) => employee.Estatus === \"NotAvailable\"\r\n      ).length,\r\n      OnDuty: employees.filter((employee) => employee.Estatus === \"OnDuty\")\r\n        .length,\r\n    });\r\n  };\r\n\r\n  const handlePreview = (employee) => {\r\n    return setEmployeeDetail(\"employeeDetail\"), setEmployee(employee);\r\n  };\r\n\r\n  const handleDelete = async (employee) => {\r\n    return setDeleteEmployeeActive(\"deleteEmployee\"), setEmployee(employee);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees(user._id, token, status);\r\n  }, [status, addEmployeeActive]);\r\n\r\n  useEffect(() => {\r\n    loadCountValues(user._id, token);\r\n  }, [status, addEmployeeActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-section employee-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Employees</h1>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-add-btn-subSection\">\r\n        <button\r\n          className=\"adminDashPanel-product-add-btn\"\r\n          onClick={() => setAddEmployeeActive(\"addEmployee\")}\r\n        >\r\n          <img\r\n            src={AddIcon}\r\n            className=\"adminDashPanel-product-add-btn-icon\"\r\n            alt=\"\"\r\n          />\r\n          ADD EMPLOYEE\r\n        </button>\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection adminDashPanel-product-filter-subSection\">\r\n        {filterBtn(\"all\", all, \"All\")}\r\n        {filterBtn(\"Available\", Available, \"Available\")}\r\n        {filterBtn(\"NotAvailable\", NotAvailable, \"NotAvailable\")}\r\n        {filterBtn(\"OnDuty\", OnDuty, \"On-Duty\")}\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Name</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Employee ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Email</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Phone Number\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Address</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Created At\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {employees &&\r\n              employees.map((employee, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.name}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.email}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Estatus}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.phoneNumber}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {employee.Euser.address.houseName}\r\n                      <br />\r\n                      {employee.Euser.address.streetName}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(employee.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(employee)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleDelete(employee)}>\r\n                        <img\r\n                          src={TrashIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {addEmployeeActive === \"addEmployee\" && (\r\n        <AddEmployee setAddEmployeeActive={setAddEmployeeActive} />\r\n      )}\r\n      {deleteEmployeeActive === \"deleteEmployee\" && (\r\n        <DeleteEmployee\r\n          setDeleteEmployeeActive={setDeleteEmployeeActive}\r\n          employee={employee}\r\n        />\r\n      )}\r\n      {employeeDetail === \"employeeDetail\" && (\r\n        <EmployeeDetail\r\n          employee={employee}\r\n          setEmployeeDetail={setEmployeeDetail}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\AddEmployee.js",["498"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\nimport { createEmployee } from \"../user\";\r\n\r\nconst AddEmployee = ({ setAddEmployeeActive }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n        const data = await createEmployee(user._id, token, email)\r\n        if(data.error){\r\n            return console.log(data.error)\r\n        }else{\r\n            return setAddEmployeeActive(null)\r\n        }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"addEmployee-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Add Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setAddEmployeeActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <form className=\"popup-form\" encType=\"multipart/form-data\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <button className=\"popup-form-btn\" onClick={onSubmit}>\r\n              Add Employee\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {error && errorMessage()} */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\admin\\CustomerDetail.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Dashboard.js",["499","500","501","502","503"],[],"import React, { useState, useEffect } from \"react\";\r\n// import moment from \"moment\";\r\nimport CartIcon from \"../icons/cart.svg\";\r\nimport ProductIcon from \"../icons/product.svg\";\r\nimport EmployerIcon from \"../icons/employer.svg\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getAllDeliveries,\r\n  getCountDeliveries,\r\n  getCountNewDeliveries,\r\n  getEmployeeStatus,\r\n} from \"../user\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Dashboard = () => {\r\n  const [statusValues, setStatusValues] = useState({\r\n    totalDeliveries: \"\",\r\n    NewDeliveries: \"\",\r\n    EmployeeStatus: \"\",\r\n  });\r\n  const [newDeliveries, setNewDeliveires] = useState([]);\r\n  const [order, setOrder] = useState({});\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { totalDeliveries, NewDeliveries, EmployeeStatus } = statusValues;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadStatusValues = async (userId, token) => {\r\n    try {\r\n      const totalDeliveries = await getCountDeliveries(userId, token);\r\n      const NewDeliveries = await getCountNewDeliveries(userId, token);\r\n      const EmployeeStatus = await getEmployeeStatus(userId, token);\r\n\r\n      if (\r\n        totalDeliveries.error ||\r\n        NewDeliveries.error ||\r\n        EmployeeStatus.error\r\n      ) {\r\n        return console.log(\"status update error occured\");\r\n      } else {\r\n        return setStatusValues({\r\n          ...statusValues,\r\n          totalDeliveries: totalDeliveries,\r\n          NewDeliveries: NewDeliveries,\r\n          EmployeeStatus: EmployeeStatus,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const loadNewDelivery = async (userId, token) => {\r\n    try {\r\n      const data = await getAllDeliveries(userId, token, \"pending\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setNewDeliveires(data.Eorders);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadNewDelivery(user._id, token);\r\n  }, [orderUpdateActive, orderUpdatePayment]);\r\n\r\n  useEffect(() => {\r\n    loadStatusValues(user._id, token);\r\n  }, [orderUpdateActive, orderUpdatePayment]);\r\n\r\n  return (\r\n    <section className=\"employeeBoard-section\">\r\n      <div className=\"-right-subsection dashboard-subSection\">\r\n        {/* <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-TotalDeliveries\">\r\n          <p className=\"dashboard-status-tag\">Total Deliveries</p>\r\n          <h1 className=\"dashboard-status-value\">{totalDeliveries}</h1>\r\n          <img src={CartIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-DeliveryStatus\">\r\n          <p className=\"dashboard-status-tag\">New Deliveries</p>\r\n          <h1 className=\"dashboard-status-value\">{NewDeliveries}</h1>\r\n          <img src={ProductIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div>\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-EmpoyeeStatus\">\r\n          <p className=\"dashboard-status-tag\">My Status</p>\r\n          <h1 className=\"dashboard-status-value\">{EmployeeStatus}</h1>\r\n          <img src={EmployerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n        </div> */}\r\n\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-TotalDeliveries\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Orders</p>\r\n            <h1 className=\"dashboard-status-value\">{totalDeliveries}</h1>\r\n            {/* <p className=\"dashboard-status-comment dashboard-status-comment-orders\">\r\n              {orderCommentValue} orders\r\n              not delivered\r\n            </p> */}\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={CartIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-DeliveryStatus\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Products</p>\r\n            <h1 className=\"dashboard-status-value\">{NewDeliveries}</h1>\r\n            {/* <p className=\"dashboard-status-comment dashboard-status-comment-products\">\r\n              {productCommentValue} products out of Stock\r\n            </p> */}\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={ProductIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"employeeBoard-dashboard-status-sec dashboard-status-sec-EmpoyeeStatus\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Employers</p>\r\n            <h1 className=\"dashboard-status-value\">{EmployeeStatus}</h1>\r\n            {/* <p className=\"dashboard-status-comment dashboard-status-comment-employers\">\r\n              {employeeCommentValue} Employees available\r\n            </p> */}\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={EmployerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n \r\n\r\n        {/* <div className=\"adminDashPanel-dashboard-status-sec dashboard-status-sec-customers\">\r\n          <div className=\"adminDashPanel-dashboard-status-left\">\r\n            <p className=\"dashboard-status-tag\">Customers</p>\r\n\r\n            <h1 className=\"dashboard-status-value\">{customerStatus}</h1>\r\n            <p className=\"dashboard-status-comment dashboard-status-comment-customers\">\r\n              {customerCommentValue} Customer order pending\r\n            </p>\r\n          </div>\r\n          <div className=\"adminDashPanel-dashboard-status-right\">\r\n            <div className=\"dashboard-status-img-sec\">\r\n              <img src={CustomerIcon} alt=\"\" className=\"dashboard-status-img\" />\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n\r\n      <h1 className=\"employeeBoard-right-header\">New Delivery</h1>\r\n\r\n      <div className=\"employeeBoard-right-subsection\">\r\n        <table className=\"employeeBoard-right-table\">\r\n          <thead className=\"employeeBoard-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"employeeBoard-right-table-head-value\">Order ID</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Status</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Total</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Address</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"employeeBoard-right-table-body-sec\">\r\n            {newDeliveries &&\r\n              newDeliveries.map((order, index) => {\r\n                return (\r\n                  order.EorderId.Ostatus !== (\"Delivered\" || \"Cancelled\") && (\r\n                    <tr\r\n                      key={index}\r\n                      className=\"employeeBoard-right-table-body-tr \"\r\n                    >\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId._id}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        <div\r\n                          className={`employeeBoard-right-table-body-div ${order.EorderId.Ostatus}`}\r\n                        >\r\n                          {order.EorderId.Ostatus}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OtotalPrice}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentMode}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentStatus === \"Paid\" ? (\r\n                          order.EorderId.OpaymentStatus\r\n                        ) : (\r\n                          <button\r\n                            className=\"adminDashPanel-right-table-body-value-btn\"\r\n                            onClick={() => handlePaymentStatus(order.EorderId)}\r\n                          >\r\n                            Pending\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderAddress.houseName}\r\n                        <br />\r\n                        {order.EorderAddress.streetName}\r\n                      </td>\r\n                      <td className=\"employeeBoard-right-table-body-value\">\r\n                        <button onClick={() => handlePreview(order)}>\r\n                          <img\r\n                            src={ViewIcon}\r\n                            alt=\"\"\r\n                            className=\"employeeBoard-right-table-icon vie\"\r\n                          />\r\n                        </button>\r\n                        <button onClick={() => handleEdit(order.EorderId)}>\r\n                          <img\r\n                            src={EditIcon}\r\n                            alt=\"\"\r\n                            className=\"employeeBoard-right-table-icon vie\"\r\n                          />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\Deliveries.js",["504","505","506","507"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getAllDeliveries } from \"../user\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Deliveries = () => {\r\n  const [deliveries, setDeliveires] = useState([]);\r\n  const [order, setOrder] = useState({});\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadDelivery = async (userId, token) => {\r\n    try {\r\n      const data = await getAllDeliveries(userId, token, \"all\");\r\n\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeliveires(data.Eorders);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDelivery(user._id, token);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"employeeBoard-section\">\r\n      <h1 className=\"employeeBoard-right-header\">Deliveries</h1>\r\n\r\n      <div className=\"employeeBoard-right-subsection\">\r\n        <table className=\"employeeBoard-right-table\">\r\n          <thead className=\"employeeBoard-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"employeeBoard-right-table-head-value\">Order ID</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Status</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Total</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Address</th>\r\n              <th className=\"employeeBoard-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"employeeBoard-right-table-body-sec\">\r\n            {deliveries &&\r\n              deliveries.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"employeeBoard-right-table-body-tr \"\r\n                  >\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId._id}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <div\r\n                        className={`employeeBoard-right-table-body-div ${order.EorderId.Ostatus}`}\r\n                      >\r\n                        {order.EorderId.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderId.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                        {order.EorderId.OpaymentStatus === \"Paid\" ? (\r\n                          order.EorderId.OpaymentStatus\r\n                        ) : (\r\n                          <button\r\n                            className=\"adminDashPanel-right-table-body-value-btn\"\r\n                            onClick={() => handlePaymentStatus(order.EorderId)}\r\n                          >\r\n                            Pending\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      {order.EorderAddress.houseName}\r\n                      <br />\r\n                      {order.EorderAddress.streetName}\r\n                    </td>\r\n                    <td className=\"employeeBoard-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order.EorderId)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"employeeBoard-right-table-icon vie\"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Deliveries;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EmployeeUpdate.js",["508"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { addEmployeeOrder, getEmployees } from \"../user\";\r\n\r\nconst EmployeeUpdate = ({ order, setOrderEmployeeAssignActive }) => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = async (userId, token) => {\r\n    try {\r\n      const data = await getEmployees(userId, token, \"Available\");\r\n      console.log(data);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setEmployees(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleEmployeeAssign = async (userId, token, orderId, employeeId) => {\r\n    try {\r\n      const data = await addEmployeeOrder(userId, token, orderId, employeeId);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrderEmployeeAssignActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"employeeUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header employeeUpdate-popup-header\">\r\n                Assign Employee\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderEmployeeAssignActive(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Employee Name</label>\r\n                  <select\r\n                    name=\"employeeName\"\r\n                    id=\"employeeName\"\r\n                    value={employeeId}\r\n                    onChange={(e) => setEmployeeId(e.target.value)}\r\n                    className=\"popup-form-value\"\r\n                  >\r\n                    <option value=\"\">Select an Employee</option>\r\n\r\n                    {employees &&\r\n                      employees.map((employee, index) => {\r\n                        return (\r\n                          <option key={index} value={employee._id}>\r\n                            {employee.Euser.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`popup-form-btn ${\r\n                  employeeId === \"\" ? \"button-unclickable\" : \"\"\r\n                }`}\r\n                onClick={() =>\r\n                  handleEmployeeAssign(user._id, token, order._id, employeeId)\r\n                }\r\n              >\r\n                Assign Employee\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EmployeeUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderDetails.js",["509"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { getUser } from \"../user\";\r\n\r\nconst OrderDetails = ({ setOrderActive, order }) => {\r\n  const [userDetails, setUserDetails] = useState();\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadUserDetails = async (userId, token) => {\r\n    try {\r\n      const data = await getUser(userId, token);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setUserDetails(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserDetails(user._id, token);\r\n  }, []);\r\n  return (\r\n    <section className=\"orderDetails-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderDetails-popup-header\">\r\n                Order #{order.EorderId._id}\r\n              </h1>\r\n              <div className=\"cross-sec\" onClick={() => setOrderActive(null)}>\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <table className=\"popup-table\">\r\n              <thead className=\"popup-table-head-sec\">\r\n                <tr>\r\n                  <th className=\"popup-table-head-value\">Products</th>\r\n                  <th className=\"popup-table-head-value\">Category</th>\r\n                  <th className=\"popup-table-head-value\">Quantity</th>\r\n                  <th className=\"popup-table-head-value\">Price</th>\r\n                  <th className=\"popup-table-head-value popup-table-head-value-amount\">\r\n                    Amount\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"popup-table-body-sec\">\r\n                {order.EorderId.Oproducts.map((product, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-name\">\r\n                        {product.pName}\r\n                        <br />\r\n                        <span>{product.pDescription}</span>\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pCategory}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pQuantity} Kg\r\n                      </td>\r\n                      <td className=\"popup-table-body-value\">\r\n                        {product.pPrice}\r\n                      </td>\r\n                      <td className=\"popup-table-body-value popup-table-body-value-amount\">\r\n                        {product.pAmount}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"popup-form-single-group orderDetails-total-sec\">\r\n              <p className=\"popup-form-label\">\r\n                <span> Total :</span> {order.EorderTotal}\r\n              </p>\r\n            </div>\r\n            {userDetails && (\r\n              <div className=\"popup-form-double-group orderDetails-info-sec\">\r\n                <div className=\"orderDetails-info-left\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order ID\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {order.EorderId._id}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Order Status\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ostatus}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Payment Mode\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OpaymentMode}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.OEmployeeName || \"Not Assigned\"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"orderDetails-info-right\">\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Ordered By\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {/* {userDetails.name} */}\r\n                      {order.EorderId.Ouser.name}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.phoneNumber}\r\n                    </p>\r\n\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderId.Ouser.email}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"orderDetails-info-subsec\">\r\n                    <p className=\"popup-form-label orderDetails-info-label\">\r\n                      Delivery Address\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.houseName}\r\n                    </p>\r\n                    <p className=\"orderDetails-info-value\">\r\n                      {\" \"}\r\n                      {order.EorderAddress.streetName}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\employee\\orderUpdate.js",["510"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\OrderUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\employee\\PaymentStatusUpdate.js",["511"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport Cross from \"../icons/cross-black.svg\";\r\nimport { employeeUpdatePaymentStatus } from \"../user\";\r\n\r\nconst PaymentStatusUpdate = ({ setOrderUpdatePayment, order }) => {\r\n  const [status, setStatus] = useState(order.OpaymentStatus);\r\n  \r\n  const {user, token} = isAuthenticated();\r\n\r\nconst handleUpdate = (userId, token, orderId, status) => {\r\n  try {\r\n    const data = employeeUpdatePaymentStatus(userId, token, orderId, status);\r\n    if(data.error){\r\n      return console.log(data.error)\r\n    }else{\r\n      return setOrderUpdatePayment(\"\");\r\n    }\r\n  } catch (error) {\r\n    return console.log(error)\r\n  }\r\n}\r\n  return (\r\n    <section className=\"orderUpdate-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header orderUpdate-popup-header\">\r\n                Update Payment Status\r\n              </h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setOrderUpdatePayment(null)}\r\n              >\r\n                <img src={Cross} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order ID</label>\r\n                  <p className=\"popup-form-value\">{order._id}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Order Status</label>\r\n                  <select\r\n                    name=\"orderStatus\"\r\n                    id=\"orderStatus\"\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                    className= \"popup-form-value\"\r\n                  >\r\n                    <option value=\"Pending\">Pending</option>\r\n                    <option value=\"Paid\">Paid</option>\r\n                    \r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <button className={`popup-form-btn ${\r\n                  status === order.OpaymentStatus ? \"button-unclickable\" : \"\"\r\n                }`} onClick={() =>  handleUpdate(user._id, token, order._id, status)}>\r\n                Update\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PaymentStatusUpdate;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\PaymentStatusUpdate.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\core\\Footer.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\ScrollToTop.js",["512"],[],"import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useLayoutEffect } from \"react\";\r\n\r\nconst ScrollToTop = ({ children }) => {\r\n  const location = useLocation();\r\n  useLayoutEffect(() => {\r\n    document.documentElement.scrollTo(0, 0);\r\n  }, [location.pathname]);\r\n  return children;\r\n};\r\n\r\nexport default ScrollToTop;","F:\\mern\\projects\\greenbeans\\client\\src\\user\\Signup.js",["513","514","515","516"],[],"import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { signup, login, authenticate } from \"../auth\";\r\n\r\nconst Signup = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phoneNumber: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    houseName: \"\",\r\n    streetName: \"\",\r\n    error: \"\",\r\n    loading: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const {\r\n    name,\r\n    email,\r\n    phoneNumber,\r\n    password,\r\n    confirmPassword,\r\n    houseName,\r\n    streetName,\r\n    error,\r\n    loading,\r\n    success,\r\n  } = values;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: \"loading\" });\r\n\r\n    if (\r\n      !(\r\n        name &&\r\n        email &&\r\n        phoneNumber &&\r\n        password &&\r\n        confirmPassword &&\r\n        houseName &&\r\n        streetName\r\n      )\r\n    ) {\r\n      console.log(\"Please fill all the fields\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Fill all the fields\",\r\n      });\r\n    }\r\n\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n      console.log(\"Please enter a valid email address\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid email\",\r\n      });\r\n    }\r\n\r\n    if (phoneNumber.length !== 10) {\r\n      console.log(\"Please enter a valid phone Number\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Enter valid phone Number\",\r\n      });\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      console.log(\"Password must have atleast 6 characters\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"password must be at least 6 characters\",\r\n      });\r\n    }\r\n\r\n    if (!(password === confirmPassword)) {\r\n      console.log(\"Password confirmation does not match\");\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: \"Password confirmation does not match\",\r\n      });\r\n    }\r\n\r\n    const address = {\r\n      houseName,\r\n      streetName,\r\n    };\r\n\r\n    try {\r\n      var data = await signup({ name, email, phoneNumber, password, address });\r\n\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n      data = await login({ email, password });\r\n      if (data.error) {\r\n        console.log(data.error);\r\n        return setValues({\r\n          ...values,\r\n          loading: \"\",\r\n          success: false,\r\n          error: data.error,\r\n        });\r\n      }\r\n      authenticate(data);\r\n      return navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      return setValues({\r\n        ...values,\r\n        loading: \"\",\r\n        success: false,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"errorMessage-sec\">\r\n        <div\r\n          className=\"errorMessage-cross-sec\"\r\n          onClick={() => setValues({ ...values, error: \"\" })}\r\n        >\r\n          <div className=\"errorMessage-cross-one\"></div>\r\n          <div className=\"errorMessage-cross-two\"></div>\r\n        </div>\r\n        <div className=\"errorMessage-msg-sec\">\r\n          <p className=\"errorMessage-msg\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-section\">\r\n      <div className=\"wrap signup-wrap\">\r\n        <div className=\"popup-small-sec signup-popup\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec signup-head-sec\">\r\n              <h1 className=\"popup-header\">Sign Up</h1>\r\n              <p className=\"popup-header-p\">\r\n                Already a member ?{\" \"}\r\n                <Link to=\"/login\" className=\"popup-header-link\">\r\n                  Log In\r\n                </Link>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"popup-form\">\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={name}\r\n                    onChange={handleChange(\"name\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-double-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"popup-form-input\"\r\n                    value={email}\r\n                    onChange={handleChange(\"email\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={phoneNumber}\r\n                    onChange={handleChange(\"phoneNumber\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-double-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"popup-form-input\"\r\n                    value={password}\r\n                    onChange={handleChange(\"password\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"popup-form-input\"\r\n                    value={confirmPassword}\r\n                    onChange={handleChange(\"confirmPassword\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-sec-group\">\r\n                <h3 className=\"popup-form-sec-group-header\">Address</h3>\r\n                <div className=\"popup-form-double-group\">\r\n                  <div className=\"popup-form-group\">\r\n                    <label className=\"popup-form-label\">House Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"popup-form-input\"\r\n                      value={houseName}\r\n                      onChange={handleChange(\"houseName\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"popup-form-group\">\r\n                    <label className=\"popup-form-label\">Street Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"popup-form-input\"\r\n                      value={streetName}\r\n                      onChange={handleChange(\"streetName\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                className=\"popup-form-btn signup-popup-btn\"\r\n                onClick={onSubmit}\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && errorMessage()}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\EditProduct.js",["517"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport {\r\n  getProduct,\r\n  updateProduct,\r\n  updateProductWithImage,\r\n} from \"../core/helper/productDetailHelper\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\n\r\nconst EditProduct = ({ setEditProductActive, product }) => {\r\n  const [values, setValues] = useState({\r\n    pName: \"\",\r\n    pDescription: \"\",\r\n    pStock: \"\",\r\n    pCategory: \"\",\r\n    pPrice: \"\",\r\n  });\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const { pName, pDescription, pStock, pCategory, pPrice } = values;\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n    console.log(\"file\", file);\r\n  };\r\n\r\n  const loadValues = async () => {\r\n    try {\r\n      const data = await getProduct(product._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setValues({\r\n          ...values,\r\n          pName: data.pName,\r\n          pDescription: data.pDescription,\r\n          pStock: data.pStock,\r\n          pCategory: data.pCategory,\r\n          pPrice: data.pPrice,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"pImg\", file);\r\n      formData.append(\"pName\", pName);\r\n      formData.append(\"pDescription\", pDescription);\r\n      formData.append(\"pStock\", pStock);\r\n      formData.append(\"pPrice\", pPrice);\r\n      formData.append(\"pCategory\", pCategory);\r\n      try {\r\n        const data = await updateProductWithImage(\r\n          user._id,\r\n          token,\r\n          product._id,\r\n          formData\r\n        );\r\n        if (data.error) {\r\n          return console.log(data.error);\r\n        } else {\r\n          return setEditProductActive(null);\r\n        }\r\n      } catch (error) {\r\n        return console.log(error);\r\n      }\r\n    } else {\r\n      try {\r\n        const data = await updateProduct(user._id, token, product._id, values);\r\n        if(data.error){\r\n          return console.log(data.error);\r\n        }else{\r\n          return setEditProductActive(null);\r\n        }\r\n      } catch (error) {\r\n        return console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadValues();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"addProduct-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-big-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Edit Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setEditProductActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={pName}\r\n                    onChange={handleChange(\"pName\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">\r\n                    Product Description\r\n                  </label>\r\n                  <textarea\r\n                    className=\"popup-form-input adminDashPanel-addproduct-textArea\"\r\n                    name=\"popup-form-input\"\r\n                    id=\"popup-form-input\"\r\n                    cols=\"30\"\r\n                    rows=\"10\"\r\n                    value={pDescription}\r\n                    onChange={handleChange(\"pDescription\")}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-triple-group adminDashPanel-addProducts-triple-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={pPrice}\r\n                    onChange={handleChange(\"pPrice\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Stock</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"popup-form-input\"\r\n                    value={pStock}\r\n                    onChange={handleChange(\"pStock\")}\r\n                  />\r\n                </div>\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Category</label>\r\n                  <select\r\n                    name=\"category\"\r\n                    id=\"category\"\r\n                    className=\"popup-form-value\"\r\n                    onChange={handleChange(\"pCategory\")}\r\n                  >\r\n                    <option value=\"fruit\">Select Category</option>\r\n                    <option value=\"fruit\">Fruit</option>\r\n                    <option value=\"vegetable\">Vegetable</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <label className=\"popup-form-label\">Product Image</label>\r\n                  <div className=\"popup-form-input-div adminDashPanel-addProducts-input-div\">\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"pImg\"\r\n                      accept=\"image/*\"\r\n                      className=\"popup-form-input\"\r\n                      onChange={handleFileChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className=\"popup-form-btn\" type=\"submit\">\r\n                    Edit Product\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {error && errorMessage()} */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteProduct.js",["518"],[],"import React, { useState } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { deleteProduct } from \"../core/helper/productDetailHelper\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\n\r\nconst DeleteProduct = ({ setDeleteProductActive, product }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const data = await deleteProduct(user._id, token, product._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeleteProductActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"deleteProduct-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Delete Product</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setDeleteProductActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    This action <b>cannot</b> be undone. This will permanently\r\n                    delete the <b>{product.pName}</b> product from your\r\n                    database.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    Please type <b>{product._id}</b>  to confirm.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className={`popup-form-btn ${product._id == value ? \"\" :\" button-unclickable\" }`} type=\"submit\">\r\n                    Delete Product\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeleteProduct;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteEmployee.js",["519"],[],"import React, { useState } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\nimport { deleteEmployee } from \"../user\";\r\n\r\nconst DeleteEmployee = ({ setDeleteEmployeeActive, employee}) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const data = await deleteEmployee(user._id, token, employee._id)\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeleteEmployeeActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"deleteEmployee-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Delete Employee</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setDeleteEmployeeActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    This action <b>cannot</b> be undone. This will permanently\r\n                    delete the <b>{employee.Euser.name}</b> Employee from your\r\n                    database.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    Please type <b>{employee._id}</b> to confirm.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className={`popup-form-btn ${employee._id == value ? \"\" :\" button-unclickable\" }`} type=\"submit\">\r\n                    Delete Employee\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeleteEmployee;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\admin\\DeleteCustomer.js",["520"],[],"import React, { useState } from \"react\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport CrossIcon from \"../icons/cross-black.svg\";\r\nimport { deleteCustomer } from \"../user\";\r\n\r\nconst DeleteCustomer = ({ setDeleteCustomerActive, customer }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      const data = await deleteCustomer(user._id, token, customer._id);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setDeleteCustomerActive(null);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"deleteCustomer-section\">\r\n      <div className=\"black-background\">\r\n        <div className=\"popup-small-sec\">\r\n          <div className=\"popup-group\">\r\n            <div className=\"popup-head-sec\">\r\n              <h1 className=\"popup-header\">Delete Customer</h1>\r\n              <div\r\n                className=\"cross-sec\"\r\n                onClick={() => setDeleteCustomerActive(null)}\r\n              >\r\n                <img src={CrossIcon} alt=\"\" className=\"cross-img\" />\r\n              </div>\r\n            </div>\r\n            <form className=\"popup-form\" onSubmit={onSubmit}>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    This action <b>cannot</b> be undone. This will permanently\r\n                    delete the <b>{customer.name}</b> customer from your\r\n                    database.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <p className=\"popup-form-p-light\">\r\n                    Please type <b>{customer._id}</b>  to confirm.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"popup-form-input\"\r\n                    value={value}\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"popup-form-single-group\">\r\n                <div className=\"popup-form-group\">\r\n                  <button className={`popup-form-btn ${customer._id == value ? \"\" :\" button-unclickable\" }`} type=\"submit\">\r\n                    Delete Customer\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DeleteCustomer;\r\n","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\BarChart.js",["521"],[],"import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {Chart} from 'chart.js/auto';\r\n\r\nconst BarChart = ({chartData}) => {\r\n  return <Bar data={chartData} />\r\n}\r\n\r\nexport default BarChart","F:\\mern\\projects\\greenbeans\\client\\src\\core\\data.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\LineChart.js",["522"],[],"import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {Chart} from 'chart.js/auto';\r\n\r\nconst LineChart = ({chartData}) => {\r\n  return <Line data={chartData} />\r\n}\r\n\r\nexport default LineChart","F:\\mern\\projects\\greenbeans\\client\\src\\Charts\\PieChart.js",["523"],[],"import React from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\nimport {Chart} from 'chart.js/auto';\r\n\r\nconst PieChart = ({chartData}) => {\r\n  return <Pie data={chartData} />\r\n}\r\n\r\nexport default PieChart","F:\\mern\\projects\\greenbeans\\client\\src\\core\\Loading.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\store.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\reducers\\index.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\reducers\\productReducer.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\constants\\action-types.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductDetail.js",["524","525"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductListing.js",["526"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\container\\ProductComponent.js",[],[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\actions\\productActions.js",["527","528"],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\reducers\\cartReducer.js",[],[],"F:\\mern\\projects\\greenbeans\\client\\src\\Redux\\actions\\cartActions.js",["529"],[],"import { isAuthenticated } from \"../../auth\";\r\nimport { ActionTypes } from \"../constants/action-types\";\r\nimport { API } from \"../../backend\";\r\nconst { user, token } = isAuthenticated();\r\nconsole.log(\"user\", user);\r\n\r\nexport const fetchCart = () => async (dispatch) => {\r\n  const response = await fetch(`${API}/user/cart/${user._id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n\r\n  console.log(\"cartAction\", response.cart);\r\n\r\n  dispatch({ type: ActionTypes.FETCH_CART, payload: response.cart });\r\n};\r\n\r\nexport const deleteFromCart = (id) => async (dispatch) => {\r\n  try {\r\n    const result = fetch(`${API}/user/deletecart/${user._id}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ id }),\r\n    }).then((res) => res.json());\r\n\r\n    // return result;\r\n    fetchCart(dispatch());\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n",{"ruleId":"530","severity":1,"message":"531","line":1,"column":27,"nodeType":"532","messageId":"533","endLine":1,"endColumn":37},{"ruleId":"530","severity":1,"message":"534","line":4,"column":10,"nodeType":"532","messageId":"533","endLine":4,"endColumn":21},{"ruleId":"530","severity":1,"message":"535","line":5,"column":8,"nodeType":"532","messageId":"533","endLine":5,"endColumn":16},{"ruleId":"530","severity":1,"message":"536","line":24,"column":17,"nodeType":"532","messageId":"533","endLine":24,"endColumn":22},{"ruleId":"537","severity":1,"message":"538","line":69,"column":6,"nodeType":"539","endLine":69,"endColumn":8,"suggestions":"540"},{"ruleId":"530","severity":1,"message":"541","line":8,"column":8,"nodeType":"532","messageId":"533","endLine":8,"endColumn":17},{"ruleId":"530","severity":1,"message":"542","line":17,"column":10,"nodeType":"532","messageId":"533","endLine":17,"endColumn":20},{"ruleId":"530","severity":1,"message":"543","line":17,"column":22,"nodeType":"532","messageId":"533","endLine":17,"endColumn":35},{"ruleId":"544","severity":1,"message":"545","line":22,"column":33,"nodeType":"546","messageId":"547","endLine":22,"endColumn":34},{"ruleId":"530","severity":1,"message":"548","line":1,"column":9,"nodeType":"532","messageId":"533","endLine":1,"endColumn":12},{"ruleId":"530","severity":1,"message":"549","line":2,"column":7,"nodeType":"532","messageId":"533","endLine":2,"endColumn":12},{"ruleId":"530","severity":1,"message":"531","line":1,"column":38,"nodeType":"532","messageId":"533","endLine":1,"endColumn":48},{"ruleId":"530","severity":1,"message":"534","line":7,"column":10,"nodeType":"532","messageId":"533","endLine":7,"endColumn":21},{"ruleId":"530","severity":1,"message":"550","line":8,"column":10,"nodeType":"532","messageId":"533","endLine":8,"endColumn":21},{"ruleId":"537","severity":1,"message":"551","line":82,"column":6,"nodeType":"539","endLine":82,"endColumn":15,"suggestions":"552"},{"ruleId":"530","severity":1,"message":"553","line":14,"column":35,"nodeType":"532","messageId":"533","endLine":14,"endColumn":42},{"ruleId":"530","severity":1,"message":"554","line":14,"column":44,"nodeType":"532","messageId":"533","endLine":14,"endColumn":51},{"ruleId":"555","severity":1,"message":"556","line":37,"column":17,"nodeType":"557","messageId":"558","endLine":37,"endColumn":18,"suggestions":"559"},{"ruleId":"555","severity":1,"message":"556","line":37,"column":33,"nodeType":"557","messageId":"558","endLine":37,"endColumn":34,"suggestions":"560"},{"ruleId":"530","severity":1,"message":"561","line":1,"column":8,"nodeType":"532","messageId":"533","endLine":1,"endColumn":13},{"ruleId":"530","severity":1,"message":"561","line":1,"column":8,"nodeType":"532","messageId":"533","endLine":1,"endColumn":13},{"ruleId":"530","severity":1,"message":"562","line":11,"column":11,"nodeType":"532","messageId":"533","endLine":11,"endColumn":21},{"ruleId":"530","severity":1,"message":"563","line":11,"column":23,"nodeType":"532","messageId":"533","endLine":11,"endColumn":36},{"ruleId":"530","severity":1,"message":"561","line":1,"column":8,"nodeType":"532","messageId":"533","endLine":1,"endColumn":13},{"ruleId":"537","severity":1,"message":"564","line":44,"column":6,"nodeType":"539","endLine":44,"endColumn":18,"suggestions":"565"},{"ruleId":"530","severity":1,"message":"566","line":24,"column":11,"nodeType":"532","messageId":"533","endLine":24,"endColumn":15},{"ruleId":"537","severity":1,"message":"564","line":45,"column":6,"nodeType":"539","endLine":45,"endColumn":22,"suggestions":"567"},{"ruleId":"530","severity":1,"message":"566","line":16,"column":11,"nodeType":"532","messageId":"533","endLine":16,"endColumn":15},{"ruleId":"537","severity":1,"message":"568","line":31,"column":6,"nodeType":"539","endLine":31,"endColumn":8,"suggestions":"569"},{"ruleId":"544","severity":1,"message":"545","line":34,"column":42,"nodeType":"546","messageId":"547","endLine":34,"endColumn":43},{"ruleId":"530","severity":1,"message":"566","line":9,"column":11,"nodeType":"532","messageId":"533","endLine":9,"endColumn":15},{"ruleId":"530","severity":1,"message":"553","line":22,"column":61,"nodeType":"532","messageId":"533","endLine":22,"endColumn":68},{"ruleId":"530","severity":1,"message":"553","line":27,"column":44,"nodeType":"532","messageId":"533","endLine":27,"endColumn":51},{"ruleId":"530","severity":1,"message":"554","line":27,"column":53,"nodeType":"532","messageId":"533","endLine":27,"endColumn":60},{"ruleId":"530","severity":1,"message":"566","line":29,"column":11,"nodeType":"532","messageId":"533","endLine":29,"endColumn":15},{"ruleId":"537","severity":1,"message":"564","line":53,"column":6,"nodeType":"539","endLine":53,"endColumn":8,"suggestions":"570"},{"ruleId":"530","severity":1,"message":"553","line":27,"column":48,"nodeType":"532","messageId":"533","endLine":27,"endColumn":55},{"ruleId":"530","severity":1,"message":"554","line":27,"column":57,"nodeType":"532","messageId":"533","endLine":27,"endColumn":64},{"ruleId":"530","severity":1,"message":"566","line":29,"column":11,"nodeType":"532","messageId":"533","endLine":29,"endColumn":15},{"ruleId":"537","severity":1,"message":"564","line":53,"column":6,"nodeType":"539","endLine":53,"endColumn":8,"suggestions":"571"},{"ruleId":"530","severity":1,"message":"531","line":1,"column":38,"nodeType":"532","messageId":"533","endLine":1,"endColumn":48},{"ruleId":"530","severity":1,"message":"534","line":4,"column":10,"nodeType":"532","messageId":"533","endLine":4,"endColumn":21},{"ruleId":"530","severity":1,"message":"572","line":8,"column":3,"nodeType":"532","messageId":"533","endLine":8,"endColumn":14},{"ruleId":"530","severity":1,"message":"573","line":31,"column":10,"nodeType":"532","messageId":"533","endLine":31,"endColumn":24},{"ruleId":"530","severity":1,"message":"574","line":31,"column":26,"nodeType":"532","messageId":"533","endLine":31,"endColumn":43},{"ruleId":"530","severity":1,"message":"566","line":35,"column":11,"nodeType":"532","messageId":"533","endLine":35,"endColumn":15},{"ruleId":"537","severity":1,"message":"538","line":59,"column":6,"nodeType":"539","endLine":59,"endColumn":8,"suggestions":"575"},{"ruleId":"537","severity":1,"message":"576","line":63,"column":6,"nodeType":"539","endLine":63,"endColumn":8,"suggestions":"577"},{"ruleId":"537","severity":1,"message":"578","line":76,"column":6,"nodeType":"539","endLine":76,"endColumn":12,"suggestions":"579"},{"ruleId":"537","severity":1,"message":"580","line":49,"column":6,"nodeType":"539","endLine":49,"endColumn":12,"suggestions":"581"},{"ruleId":"537","severity":1,"message":"582","line":53,"column":6,"nodeType":"539","endLine":53,"endColumn":16,"suggestions":"583"},{"ruleId":"537","severity":1,"message":"564","line":45,"column":6,"nodeType":"539","endLine":45,"endColumn":18,"suggestions":"584"},{"ruleId":"537","severity":1,"message":"564","line":43,"column":6,"nodeType":"539","endLine":43,"endColumn":18,"suggestions":"585"},{"ruleId":"530","severity":1,"message":"566","line":30,"column":11,"nodeType":"532","messageId":"533","endLine":30,"endColumn":15},{"ruleId":"537","severity":1,"message":"586","line":155,"column":6,"nodeType":"539","endLine":155,"endColumn":8,"suggestions":"587"},{"ruleId":"537","severity":1,"message":"588","line":159,"column":6,"nodeType":"539","endLine":159,"endColumn":8,"suggestions":"589"},{"ruleId":"537","severity":1,"message":"590","line":25,"column":6,"nodeType":"539","endLine":25,"endColumn":8,"suggestions":"591"},{"ruleId":"530","severity":1,"message":"592","line":24,"column":10,"nodeType":"532","messageId":"533","endLine":24,"endColumn":14},{"ruleId":"537","severity":1,"message":"568","line":44,"column":6,"nodeType":"539","endLine":44,"endColumn":18,"suggestions":"593"},{"ruleId":"544","severity":1,"message":"545","line":59,"column":42,"nodeType":"546","messageId":"547","endLine":59,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":63,"column":53,"nodeType":"546","messageId":"547","endLine":63,"endColumn":54},{"ruleId":"544","severity":1,"message":"545","line":73,"column":55,"nodeType":"546","messageId":"547","endLine":73,"endColumn":56},{"ruleId":"537","severity":1,"message":"590","line":122,"column":6,"nodeType":"539","endLine":122,"endColumn":73,"suggestions":"594"},{"ruleId":"537","severity":1,"message":"595","line":126,"column":6,"nodeType":"539","endLine":126,"endColumn":73,"suggestions":"596"},{"ruleId":"530","severity":1,"message":"597","line":16,"column":3,"nodeType":"532","messageId":"533","endLine":16,"endColumn":15},{"ruleId":"530","severity":1,"message":"598","line":23,"column":8,"nodeType":"532","messageId":"533","endLine":23,"endColumn":16},{"ruleId":"530","severity":1,"message":"599","line":25,"column":8,"nodeType":"532","messageId":"533","endLine":25,"endColumn":17},{"ruleId":"530","severity":1,"message":"600","line":26,"column":8,"nodeType":"532","messageId":"533","endLine":26,"endColumn":16},{"ruleId":"530","severity":1,"message":"601","line":50,"column":10,"nodeType":"532","messageId":"533","endLine":50,"endColumn":18},{"ruleId":"530","severity":1,"message":"602","line":50,"column":20,"nodeType":"532","messageId":"533","endLine":50,"endColumn":31},{"ruleId":"544","severity":1,"message":"545","line":166,"column":42,"nodeType":"546","messageId":"547","endLine":166,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":170,"column":53,"nodeType":"546","messageId":"547","endLine":170,"endColumn":54},{"ruleId":"544","severity":1,"message":"545","line":184,"column":55,"nodeType":"546","messageId":"547","endLine":184,"endColumn":56},{"ruleId":"537","severity":1,"message":"603","line":189,"column":6,"nodeType":"539","endLine":189,"endColumn":65,"suggestions":"604"},{"ruleId":"537","severity":1,"message":"605","line":193,"column":6,"nodeType":"539","endLine":193,"endColumn":65,"suggestions":"606"},{"ruleId":"537","severity":1,"message":"590","line":197,"column":6,"nodeType":"539","endLine":197,"endColumn":65,"suggestions":"607"},{"ruleId":"530","severity":1,"message":"608","line":13,"column":8,"nodeType":"532","messageId":"533","endLine":13,"endColumn":13},{"ruleId":"530","severity":1,"message":"566","line":29,"column":11,"nodeType":"532","messageId":"533","endLine":29,"endColumn":15},{"ruleId":"530","severity":1,"message":"536","line":29,"column":17,"nodeType":"532","messageId":"533","endLine":29,"endColumn":22},{"ruleId":"544","severity":1,"message":"545","line":87,"column":45,"nodeType":"546","messageId":"547","endLine":87,"endColumn":46},{"ruleId":"544","severity":1,"message":"545","line":90,"column":47,"nodeType":"546","messageId":"547","endLine":90,"endColumn":48},{"ruleId":"544","severity":1,"message":"545","line":93,"column":51,"nodeType":"546","messageId":"547","endLine":93,"endColumn":52},{"ruleId":"537","severity":1,"message":"609","line":102,"column":6,"nodeType":"539","endLine":102,"endColumn":53,"suggestions":"610"},{"ruleId":"530","severity":1,"message":"611","line":3,"column":10,"nodeType":"532","messageId":"533","endLine":3,"endColumn":24},{"ruleId":"544","severity":1,"message":"545","line":32,"column":47,"nodeType":"546","messageId":"547","endLine":32,"endColumn":48},{"ruleId":"544","severity":1,"message":"545","line":36,"column":53,"nodeType":"546","messageId":"547","endLine":36,"endColumn":54},{"ruleId":"537","severity":1,"message":"590","line":41,"column":6,"nodeType":"539","endLine":41,"endColumn":8,"suggestions":"612"},{"ruleId":"530","severity":1,"message":"613","line":1,"column":27,"nodeType":"532","messageId":"533","endLine":1,"endColumn":36},{"ruleId":"530","severity":1,"message":"614","line":6,"column":10,"nodeType":"532","messageId":"533","endLine":6,"endColumn":24},{"ruleId":"544","severity":1,"message":"545","line":84,"column":47,"nodeType":"546","messageId":"547","endLine":84,"endColumn":48},{"ruleId":"544","severity":1,"message":"545","line":88,"column":53,"nodeType":"546","messageId":"547","endLine":88,"endColumn":54},{"ruleId":"537","severity":1,"message":"590","line":93,"column":6,"nodeType":"539","endLine":93,"endColumn":33,"suggestions":"615"},{"ruleId":"537","severity":1,"message":"595","line":97,"column":6,"nodeType":"539","endLine":97,"endColumn":33,"suggestions":"616"},{"ruleId":"530","severity":1,"message":"613","line":1,"column":27,"nodeType":"532","messageId":"533","endLine":1,"endColumn":36},{"ruleId":"544","severity":1,"message":"545","line":74,"column":42,"nodeType":"546","messageId":"547","endLine":74,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":78,"column":53,"nodeType":"546","messageId":"547","endLine":78,"endColumn":54},{"ruleId":"544","severity":1,"message":"545","line":82,"column":55,"nodeType":"546","messageId":"547","endLine":82,"endColumn":56},{"ruleId":"537","severity":1,"message":"590","line":87,"column":6,"nodeType":"539","endLine":87,"endColumn":45,"suggestions":"617"},{"ruleId":"537","severity":1,"message":"603","line":91,"column":6,"nodeType":"539","endLine":91,"endColumn":45,"suggestions":"618"},{"ruleId":"544","severity":1,"message":"545","line":34,"column":42,"nodeType":"546","messageId":"547","endLine":34,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":38,"column":53,"nodeType":"546","messageId":"547","endLine":38,"endColumn":54},{"ruleId":"544","severity":1,"message":"545","line":42,"column":55,"nodeType":"546","messageId":"547","endLine":42,"endColumn":56},{"ruleId":"537","severity":1,"message":"590","line":47,"column":6,"nodeType":"539","endLine":47,"endColumn":8,"suggestions":"619"},{"ruleId":"537","severity":1,"message":"590","line":41,"column":6,"nodeType":"539","endLine":41,"endColumn":8,"suggestions":"620"},{"ruleId":"537","severity":1,"message":"590","line":25,"column":6,"nodeType":"539","endLine":25,"endColumn":8,"suggestions":"621"},{"ruleId":"530","severity":1,"message":"613","line":1,"column":27,"nodeType":"532","messageId":"533","endLine":1,"endColumn":36},{"ruleId":"530","severity":1,"message":"613","line":1,"column":27,"nodeType":"532","messageId":"533","endLine":1,"endColumn":36},{"ruleId":"530","severity":1,"message":"561","line":1,"column":8,"nodeType":"532","messageId":"533","endLine":1,"endColumn":13},{"ruleId":"530","severity":1,"message":"553","line":28,"column":5,"nodeType":"532","messageId":"533","endLine":28,"endColumn":12},{"ruleId":"530","severity":1,"message":"554","line":29,"column":5,"nodeType":"532","messageId":"533","endLine":29,"endColumn":12},{"ruleId":"555","severity":1,"message":"556","line":62,"column":17,"nodeType":"557","messageId":"558","endLine":62,"endColumn":18,"suggestions":"622"},{"ruleId":"555","severity":1,"message":"556","line":62,"column":33,"nodeType":"557","messageId":"558","endLine":62,"endColumn":34,"suggestions":"623"},{"ruleId":"537","severity":1,"message":"624","line":97,"column":6,"nodeType":"539","endLine":97,"endColumn":8,"suggestions":"625"},{"ruleId":"626","severity":1,"message":"627","line":66,"column":68,"nodeType":"628","messageId":"629","endLine":66,"endColumn":70},{"ruleId":"626","severity":1,"message":"627","line":66,"column":69,"nodeType":"628","messageId":"629","endLine":66,"endColumn":71},{"ruleId":"626","severity":1,"message":"627","line":66,"column":69,"nodeType":"628","messageId":"629","endLine":66,"endColumn":71},{"ruleId":"530","severity":1,"message":"630","line":3,"column":9,"nodeType":"532","messageId":"533","endLine":3,"endColumn":14},{"ruleId":"530","severity":1,"message":"630","line":3,"column":9,"nodeType":"532","messageId":"533","endLine":3,"endColumn":14},{"ruleId":"530","severity":1,"message":"630","line":3,"column":9,"nodeType":"532","messageId":"533","endLine":3,"endColumn":14},{"ruleId":"530","severity":1,"message":"631","line":11,"column":22,"nodeType":"532","messageId":"533","endLine":11,"endColumn":27},{"ruleId":"537","severity":1,"message":"538","line":38,"column":6,"nodeType":"539","endLine":38,"endColumn":17,"suggestions":"632"},{"ruleId":"537","severity":1,"message":"538","line":25,"column":6,"nodeType":"539","endLine":25,"endColumn":8,"suggestions":"633"},{"ruleId":"530","severity":1,"message":"634","line":1,"column":10,"nodeType":"532","messageId":"533","endLine":1,"endColumn":25},{"ruleId":"530","severity":1,"message":"548","line":3,"column":9,"nodeType":"532","messageId":"533","endLine":3,"endColumn":12},{"ruleId":"530","severity":1,"message":"635","line":23,"column":11,"nodeType":"532","messageId":"533","endLine":23,"endColumn":17},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'CartContext' is defined but never used.","'CartIcon' is defined but never used.","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["636"],"'ArrowIcon' is defined but never used.","'searchView' is assigned a value but never used.","'setSearchView' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'API' is defined but never used.","'axios' is assigned a value but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'loadProducts' and 'productId'. Either include them or remove the dependency array.",["637"],"'loading' is assigned a value but never used.","'success' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["638","639"],["640","641"],"'React' is defined but never used.","'authActive' is assigned a value but never used.","'setAuthActive' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'preLoad', 'token', and 'userId'. Either include them or remove the dependency array.",["642"],"'user' is assigned a value but never used.",["643"],"React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["644"],["645"],["646"],"'getUserCart' is defined but never used.","'productDetails' is assigned a value but never used.","'setProductDetails' is assigned a value but never used.",["647"],"React Hook useEffect has missing dependencies: 'preLoadShippingAddress', 'token', and 'userId'. Either include them or remove the dependency array.",["648"],"React Hook useEffect has a missing dependency: 'loadSubTotal_value'. Either include it or remove the dependency array.",["649"],"React Hook useEffect has missing dependencies: 'cartItemProductId' and 'getProductDetails'. Either include them or remove the dependency array.",["650"],"React Hook useEffect has missing dependencies: 'product._id' and 'updateQuantity'. Either include them or remove the dependency array. If 'updateQuantity' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["651"],["652"],["653"],"React Hook useEffect has missing dependencies: 'preLoadCart', 'token', and 'userId'. Either include them or remove the dependency array.",["654"],"React Hook useEffect has missing dependencies: 'preLoadUser', 'token', and 'userId'. Either include them or remove the dependency array.",["655"],"React Hook useEffect has missing dependencies: 'token' and 'user._id'. Either include them or remove the dependency array.",["656"],"'name' is assigned a value but never used.",["657"],["658"],"React Hook useEffect has missing dependencies: 'loadCountValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["659"],"'getCustomers' is defined but never used.","'BarChart' is defined but never used.","'LineChart' is defined but never used.","'PieChart' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadStatusValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["660"],"React Hook useEffect has missing dependencies: 'loadCommentValues', 'token', and 'user._id'. Either include them or remove the dependency array.",["661"],["662"],"'Cross' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCountValues'. Either include it or remove the dependency array.",["663"],"'deleteCustomer' is defined but never used.",["664"],"'useEffect' is defined but never used.","'deleteEmployee' is defined but never used.",["665"],["666"],["667"],["668"],["669"],["670"],["671"],["672","673"],["674","675"],"React Hook useEffect has a missing dependency: 'loadValues'. Either include it or remove the dependency array.",["676"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Chart' is defined but never used.","'title' is assigned a value but never used.",["677"],["678"],"'isAuthenticated' is defined but never used.","'result' is assigned a value but never used.",{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"messageId":"683","fix":"684","desc":"685"},{"messageId":"686","fix":"687","desc":"688"},{"messageId":"683","fix":"689","desc":"685"},{"messageId":"686","fix":"690","desc":"688"},{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},{"desc":"697","fix":"699"},{"desc":"679","fix":"700"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"691","fix":"709"},{"desc":"691","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"715","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"715","fix":"740"},{"desc":"715","fix":"741"},{"desc":"715","fix":"742"},{"messageId":"683","fix":"743","desc":"685"},{"messageId":"686","fix":"744","desc":"688"},{"messageId":"683","fix":"745","desc":"685"},{"messageId":"686","fix":"746","desc":"688"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"679","fix":"751"},"Update the dependencies array to be: [dispatch]",{"range":"752","text":"753"},"Update the dependencies array to be: [loadProducts, product, productId]",{"range":"754","text":"755"},"removeEscape",{"range":"756","text":"757"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"758","text":"759"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"760","text":"757"},{"range":"761","text":"759"},"Update the dependencies array to be: [currentTab, preLoad, token, userId]",{"range":"762","text":"763"},"Update the dependencies array to be: [accountsActive, preLoad, token, userId]",{"range":"764","text":"765"},"Update the dependencies array to be: [token, userId]",{"range":"766","text":"767"},"Update the dependencies array to be: [preLoad, token, userId]",{"range":"768","text":"769"},{"range":"770","text":"769"},{"range":"771","text":"753"},"Update the dependencies array to be: [preLoadShippingAddress, token, userId]",{"range":"772","text":"773"},"Update the dependencies array to be: [cart, loadSubTotal_value]",{"range":"774","text":"775"},"Update the dependencies array to be: [cart, cartItemProductId, getProductDetails]",{"range":"776","text":"777"},"Update the dependencies array to be: [product._id, quantity, updateQuantity]",{"range":"778","text":"779"},{"range":"780","text":"763"},{"range":"781","text":"763"},"Update the dependencies array to be: [preLoadCart, token, userId]",{"range":"782","text":"783"},"Update the dependencies array to be: [preLoadUser, token, userId]",{"range":"784","text":"785"},"Update the dependencies array to be: [token, user._id]",{"range":"786","text":"787"},"Update the dependencies array to be: [currentTab, token, userId]",{"range":"788","text":"789"},"Update the dependencies array to be: [orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",{"range":"790","text":"791"},"Update the dependencies array to be: [orderActive, orderUpdateActive, status, orderEmployeeAssignActive, loadCountValues, user._id, token]",{"range":"792","text":"793"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",{"range":"794","text":"795"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, loadCommentValues, user._id, token]",{"range":"796","text":"797"},"Update the dependencies array to be: [orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",{"range":"798","text":"799"},"Update the dependencies array to be: [category, addProductActive, editProductActive, loadCountValues]",{"range":"800","text":"801"},{"range":"802","text":"787"},"Update the dependencies array to be: [status, addEmployeeActive, user._id, token]",{"range":"803","text":"804"},"Update the dependencies array to be: [status, addEmployeeActive, loadCountValues, user._id, token]",{"range":"805","text":"806"},"Update the dependencies array to be: [orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"807","text":"808"},"Update the dependencies array to be: [loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",{"range":"809","text":"810"},{"range":"811","text":"787"},{"range":"812","text":"787"},{"range":"813","text":"787"},{"range":"814","text":"757"},{"range":"815","text":"759"},{"range":"816","text":"757"},{"range":"817","text":"759"},"Update the dependencies array to be: [loadValues]",{"range":"818","text":"819"},"Update the dependencies array to be: [dispatch, productId]",{"range":"820","text":"821"},{"range":"822","text":"753"},[1924,1926],"[dispatch]",[2272,2281],"[loadProducts, product, productId]",[902,903],"",[902,902],"\\",[918,919],[918,918],[1232,1244],"[currentTab, preLoad, token, userId]",[1292,1308],"[accountsActive, preLoad, token, userId]",[913,915],"[token, userId]",[1327,1329],"[preLoad, token, userId]",[1372,1374],[1855,1857],[1933,1935],"[preLoadShippingAddress, token, userId]",[2222,2228],"[cart, loadSubTotal_value]",[1225,1231],"[cart, cartItemProductId, getProductDetails]",[1307,1317],"[product._id, quantity, updateQuantity]",[1298,1310],[1197,1209],[3947,3949],"[preLoadCart, token, userId]",[4014,4016],"[preLoadUser, token, userId]",[719,721],"[token, user._id]",[1573,1585],"[currentTab, token, userId]",[3668,3735],"[orderActive, orderUpdateActive, status, orderEmployeeAssignActive, user._id, token]",[3806,3873],"[orderActive, orderUpdateActive, status, orderEmployeeAssignActive, loadCountValues, user._id, token]",[6060,6119],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, loadStatusValues, user._id, token]",[6192,6251],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, loadCommentValues, user._id, token]",[6324,6383],"[orderActive, orderUpdateActive, orderEmployeeAssignActive, user._id, token]",[3101,3148],"[category, addProductActive, editProductActive, loadCountValues]",[1313,1315],[2851,2878],"[status, addEmployeeActive, user._id, token]",[2949,2976],"[status, addEmployeeActive, loadCountValues, user._id, token]",[2732,2771],"[orderUpdateActive, orderUpdatePayment, token, user._id]",[2843,2882],"[loadStatusValues, orderUpdateActive, orderUpdatePayment, token, user._id]",[1487,1489],[1223,1225],[719,721],[1281,1282],[1281,1281],[1297,1298],[1297,1297],[2522,2524],"[loadValues]",[1127,1138],"[dispatch, productId]",[767,769]]