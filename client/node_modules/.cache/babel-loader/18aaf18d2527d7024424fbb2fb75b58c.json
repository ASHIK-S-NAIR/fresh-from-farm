{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/Context\";\nimport { isAuthenticated } from \"./index\";\n\nconst CustomerRoutes = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    authActive,\n    setAuthActive\n  } = useContext(AuthContext);\n\n  if (!(isAuthenticated() && isAuthenticated().user.role === 0)) {\n    // return <Navigate to={-1} />\n    return navigate(\"/\", {\n      state: {\n        login: \"login\"\n      }\n    });\n  }\n\n  return children;\n};\n\n_s(CustomerRoutes, \"p6RwFHc07M9rVuAa9xherQACYz0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CustomerRoutes;\nexport default CustomerRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerRoutes\");","map":{"version":3,"sources":["F:/mern/projects/greenbeans/client/src/auth/CustomerRoutes.js"],"names":["React","useContext","useNavigate","Navigate","AuthContext","isAuthenticated","CustomerRoutes","children","navigate","authActive","setAuthActive","user","role","state","login"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,kBAApC;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAAQC,eAAR,QAA8B,SAA9B;;AAEA,MAAMC,cAAc,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEnC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEF,QAAM;AAAEO,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCT,UAAU,CAACG,WAAD,CAAhD;;AAEA,MAAG,EAAEC,eAAe,MAAMA,eAAe,GAAGM,IAAlB,CAAuBC,IAAvB,KAAgC,CAAvD,CAAH,EAA6D;AAC3D;AACA,WAAOJ,QAAQ,CAAC,GAAD,EAAM;AACnBK,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AADF;AADY,KAAN,CAAf;AAKD;;AAED,SAAOP,QAAP;AACD,CAhBD;;GAAMD,c;UAEeJ,W;;;KAFfI,c;AAkBN,eAAeA,cAAf","sourcesContent":["import React, {useContext} from \"react\";\r\nimport {useNavigate, Navigate} from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/Context\";\r\nimport {isAuthenticated} from \"./index\";\r\n\r\nconst CustomerRoutes = ({children}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n  const { authActive, setAuthActive } = useContext(AuthContext);\r\n\r\n  if(!(isAuthenticated() && isAuthenticated().user.role === 0)){\r\n    // return <Navigate to={-1} />\r\n    return navigate(\"/\", {\r\n      state: {\r\n        login: \"login\"\r\n      }\r\n    })\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default CustomerRoutes"]},"metadata":{},"sourceType":"module"}