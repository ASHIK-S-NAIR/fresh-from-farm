{"ast":null,"code":"var _jsxFileName = \"F:\\\\mern\\\\projects\\\\greenbeans\\\\client\\\\src\\\\core\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { isAuthenticated } from \"../auth\";\nimport { getUserCart, updateQuantity } from \"../user\";\nimport CartItem from \"./CartItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = () => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n  const [subTotal_items, setSubTotal_items] = useState(0);\n  const [subTotal_value, setSubTotal_value] = useState(0);\n  const {\n    userId\n  } = useParams();\n  const {\n    user,\n    token\n  } = isAuthenticated();\n\n  const preLoad = async (userId, token) => {\n    try {\n      const response = await getUserCart(userId, token);\n      return setCart(response.cart);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    preLoad(userId, token);\n  }, []);\n  useEffect(() => {\n    var total = 0;\n    cart.map(cartItem => total = total + cartItem.product.pPrice * cartItem.quantity);\n    setSubTotal_value(total);\n  }, [cart]);\n  useEffect(() => {\n    setSubTotal_items(cart.length);\n  }); // const onQuantityChange = async (productId, quantity) => {\n  //   try {\n  //     const data = await updateQuantity(userId, token, productId, quantity);\n  //     if(data.error){\n  //       console.log(data.error);\n  //     }else{\n  //       preLoad();\n  //     }\n  //   } catch (error) {\n  //     console.log(error)\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cart-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap cart-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-header-sec\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"cart-header\",\n          children: \"My Cart \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-subsection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cartDetail-sec\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cartDetail-sec-hr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), cart && cart.map((cartItem, index) => {\n            return /*#__PURE__*/_jsxDEV(CartItem, {\n              cartItem: cartItem\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 24\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cart-subTotal-sec\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"cart-subTotal-h2\",\n              children: [`Subtotal (${subTotal_items} items)`, \" :\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cart-subTotal-price\",\n                children: `${subTotal_value}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-placeOrder-sec\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"QnXEYIQ+eNzgV9QLWGqTEt/eXmQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["F:/mern/projects/greenbeans/client/src/core/Cart.js"],"names":["React","useState","useEffect","useParams","isAuthenticated","getUserCart","updateQuantity","CartItem","Cart","cart","setCart","subTotal_items","setSubTotal_items","subTotal_value","setSubTotal_value","userId","user","token","preLoad","response","error","console","log","total","map","cartItem","product","pPrice","quantity","length","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { getUserCart, updateQuantity } from \"../user\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst Cart = () => {\r\n  const [cart, setCart] = useState([]);\r\n  const [subTotal_items, setSubTotal_items] = useState(0);\r\n  const [subTotal_value, setSubTotal_value] = useState(0);\r\n\r\n  const { userId } = useParams();\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preLoad = async (userId, token) => {\r\n    try {\r\n      const response = await getUserCart(userId, token);\r\n      return setCart(response.cart);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoad(userId, token);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    var total = 0;\r\n    cart.map(\r\n      (cartItem) =>\r\n        (total = total + cartItem.product.pPrice * cartItem.quantity)\r\n    );\r\n    setSubTotal_value(total);\r\n  }, [cart]);\r\n\r\n  useEffect(() => {\r\n    setSubTotal_items(cart.length);\r\n  })\r\n\r\n  // const onQuantityChange = async (productId, quantity) => {\r\n  //   try {\r\n  //     const data = await updateQuantity(userId, token, productId, quantity);\r\n  //     if(data.error){\r\n  //       console.log(data.error);\r\n  //     }else{\r\n  //       preLoad();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.log(error)\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <section className=\"cart-section\">\r\n      <div className=\"wrap cart-wrap\">\r\n        <div className=\"cart-header-sec\">\r\n          <h1 className=\"cart-header\">My Cart </h1>\r\n        </div>\r\n        <div className=\"cart-subsection\">\r\n          <div className=\"cartDetail-sec\">\r\n            <div className=\"cartDetail-sec-hr\"></div>\r\n            {cart &&\r\n              cart.map((cartItem, index) => {\r\n                return <CartItem cartItem={cartItem} key={index} />;\r\n              })}\r\n            <div className=\"cart-subTotal-sec\">\r\n              <h2 className=\"cart-subTotal-h2\">\r\n                {`Subtotal (${subTotal_items} items)`} :{\" \"}\r\n                <span className=\"cart-subTotal-price\">{`${subTotal_value}`}</span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"cart-placeOrder-sec\"></div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}