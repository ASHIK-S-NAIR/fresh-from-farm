{"ast":null,"code":"import { isAuthenticated } from \"../../auth\";\nimport { ActionTypes } from \"../constants/action-types\";\nimport { API } from \"../../backend\";\nexport const fetchProducts = () => async dispatch => {\n  const response = await fetch(\"https://fakestoreapi.com/products\", {\n    method: \"GET\"\n  }).then(res => res.json());\n  dispatch({\n    type: ActionTypes.FETCH_PRODUCTS,\n    payload: response\n  });\n};\nexport const setProducts = products => {\n  return {\n    type: ActionTypes.SET_PRODUCTS,\n    payload: products\n  };\n};\nexport const selectedProduct = product => {\n  return {\n    type: ActionTypes.SELECTED_PRODUCT,\n    payload: product\n  };\n};\nexport const fetchProduct = id => async dispatch => {\n  const response = await fetch(`https://fakestoreapi.com/products/${id}`, {\n    method: \"GET\"\n  }).then(res => res.json());\n  dispatch({\n    type: ActionTypes.FETCH_CART,\n    payload: response\n  });\n};\nexport const removeSelectedProduct = () => {\n  return {\n    type: ActionTypes.SELECTED_PRODUCT\n  };\n}; /////////////////////////////////////////////////////\n\nconst {\n  user,\n  token\n} = isAuthenticated();\nexport const fetchCart = async () => {\n  const result = await fetch(`${API}/user/cart/${user.id}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json());\n};","map":{"version":3,"sources":["F:/mern/projects/greenbeans/client/src/Redux/actions/productActions.js"],"names":["isAuthenticated","ActionTypes","API","fetchProducts","dispatch","response","fetch","method","then","res","json","type","FETCH_PRODUCTS","payload","setProducts","products","SET_PRODUCTS","selectedProduct","product","SELECTED_PRODUCT","fetchProduct","id","FETCH_CART","removeSelectedProduct","user","token","fetchCart","result","headers","Accept","Authorization"],"mappings":"AAAA,SAASA,eAAT,QAAgC,YAAhC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAChEC,IAAAA,MAAM,EAAE;AADwD,GAAtC,CAAL,CAEpBC,IAFoB,CAEdC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFM,CAAvB;AAIAN,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEV,WAAW,CAACW,cAApB;AAAoCC,IAAAA,OAAO,EAAER;AAA7C,GAAD,CAAR;AACD,CANM;AAQP,OAAO,MAAMS,WAAW,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLJ,IAAAA,IAAI,EAAEV,WAAW,CAACe,YADb;AAELH,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,eAAe,GAAIC,OAAD,IAAa;AAC1C,SAAO;AACLP,IAAAA,IAAI,EAAEV,WAAW,CAACkB,gBADb;AAELN,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,YAAY,GAAIC,EAAD,IAAQ,MAAOjB,QAAP,IAAoB;AACtD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCe,EAAG,EAAzC,EAA4C;AACtEd,IAAAA,MAAM,EAAE;AAD8D,GAA5C,CAAL,CAEpBC,IAFoB,CAEdC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFM,CAAvB;AAIAN,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEV,WAAW,CAACqB,UAApB;AAAgCT,IAAAA,OAAO,EAAER;AAAzC,GAAD,CAAR;AACD,CANM;AAQP,OAAO,MAAMkB,qBAAqB,GAAG,MAAM;AACzC,SAAO;AACLZ,IAAAA,IAAI,EAAEV,WAAW,CAACkB;AADb,GAAP;AAGD,CAJM,C,CAMP;;AAEA,MAAM;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAkBzB,eAAe,EAAvC;AAEA,OAAO,MAAM0B,SAAS,GAAG,YAAY;AACnC,QAAMC,MAAM,GAAG,MAAMrB,KAAK,CAAE,GAAEJ,GAAI,cAAasB,IAAI,CAACH,EAAG,EAA7B,EAAgC;AACxDd,IAAAA,MAAM,EAAE,KADgD;AAExDqB,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEPC,MAAAA,aAAa,EAAG,UAASL,KAAM;AAFxB;AAF+C,GAAhC,CAAL,CAMlBjB,IANkB,CAMZC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANI,CAArB;AAOD,CARM","sourcesContent":["import { isAuthenticated } from \"../../auth\";\r\nimport { ActionTypes } from \"../constants/action-types\";\r\nimport { API } from \"../../backend\";\r\n\r\nexport const fetchProducts = () => async (dispatch) => {\r\n  const response = await fetch(\"https://fakestoreapi.com/products\", {\r\n    method: \"GET\",\r\n  }).then((res) => res.json());\r\n\r\n  dispatch({ type: ActionTypes.FETCH_PRODUCTS, payload: response });\r\n};\r\n\r\nexport const setProducts = (products) => {\r\n  return {\r\n    type: ActionTypes.SET_PRODUCTS,\r\n    payload: products,\r\n  };\r\n};\r\n\r\nexport const selectedProduct = (product) => {\r\n  return {\r\n    type: ActionTypes.SELECTED_PRODUCT,\r\n    payload: product,\r\n  };\r\n};\r\n\r\nexport const fetchProduct = (id) => async (dispatch) => {\r\n  const response = await fetch(`https://fakestoreapi.com/products/${id}`, {\r\n    method: \"GET\",\r\n  }).then((res) => res.json());\r\n\r\n  dispatch({ type: ActionTypes.FETCH_CART, payload: response });\r\n};\r\n\r\nexport const removeSelectedProduct = () => {\r\n  return {\r\n    type: ActionTypes.SELECTED_PRODUCT,\r\n  };\r\n};\r\n\r\n/////////////////////////////////////////////////////\r\n\r\nconst { user, token } = isAuthenticated();\r\n\r\nexport const fetchCart = async () => {\r\n  const result = await fetch(`${API}/user/cart/${user.id}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n"]},"metadata":{},"sourceType":"module"}