{"ast":null,"code":"var _jsxFileName = \"F:\\\\mern\\\\projects\\\\greenbeans\\\\client\\\\src\\\\admin\\\\Order.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { getAllOrders } from \"../user\";\nimport { isAuthenticated } from \"../auth\";\nimport ViewIcon from \"../icons/view.svg\";\nimport EditIcon from \"../icons/Edit.svg\";\nimport OrderDetails from \"../user/OrderDetails\";\nimport OrderUpdate from \"./OrderUpdate\";\nimport EmployeeUpdate from \"./EmployeeUpdate\";\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Order = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [orderActive, setOrderActive] = useState(\"\");\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\n  const [order, setOrder] = useState({});\n  const [status, setStatus] = useState(\"all\");\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] = useState(\"\");\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\n  const [countValues, setCountValues] = useState({\n    all: 0,\n    NotConfirmed: 0,\n    Ordered: 0,\n    Processing: 0,\n    PickingUp: 0,\n    OutForDelivery: 0,\n    Delivered: 0,\n    Cancelled: 0\n  });\n  const {\n    user,\n    token\n  } = isAuthenticated();\n  const {\n    all,\n    NotConfirmed,\n    Ordered,\n    Processing,\n    PickingUp,\n    OutForDelivery,\n    Delivered,\n    Cancelled\n  } = countValues;\n\n  const loadOrders = async (userId, token, status) => {\n    try {\n      const data = await getAllOrders(userId, token, status);\n\n      if (data.error) {\n        return console.log(data.error);\n      } else {\n        return setOrders(data);\n      }\n    } catch (error) {\n      return console.log(error);\n    }\n  };\n\n  const handlePreview = async order => {\n    return setOrderActive(\"orderDetails\"), setOrder(order);\n  };\n\n  const handleEdit = async order => {\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\n  };\n\n  const handleEmployeeAssign = async order => {\n    return setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order);\n  };\n\n  const handlePaymentStatus = order => {\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\n  };\n\n  const filterBtn = (statusState, statusValue, statusBtnValue) => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `orders-filter-btn ${status === statusState ? \"active\" : \"\"}`,\n      onClick: () => setStatus(statusState),\n      children: [statusBtnValue, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"filter-btn-value\",\n        children: statusValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  };\n\n  const loadCountValues = async (userId, token) => {\n    var orders = [];\n\n    try {\n      const data = await getAllOrders(userId, token, \"all\");\n\n      if (data.error) {\n        return console.log(data.error);\n      } else {\n        orders = data;\n      }\n    } catch (error) {\n      return console.log(error);\n    }\n\n    setCountValues({ ...countValues,\n      all: orders.length,\n      NotConfirmed: orders.filter(order => order.Ostatus === \"Not-Confirmed\").length,\n      Ordered: orders.filter(order => order.Ostatus === \"Ordered\").length,\n      Processing: orders.filter(order => order.Ostatus === \"Processing\").length,\n      PickingUp: orders.filter(order => order.Ostatus === \"Picking-Up\").length,\n      OutForDelivery: orders.filter(order => order.Ostatus === \"Out-For-Delivery\").length,\n      Delivered: orders.filter(order => order.Ostatus === \"Delivered\").length,\n      Cancelled: orders.filter(order => order.Ostatus === \"Cancelled\").length\n    });\n  };\n\n  useEffect(() => {\n    loadOrders(user._id, token, status);\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\n  useEffect(() => {\n    loadCountValues(user._id, token);\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"adminDashPanel-right-section order-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"adminDashPanel-right-header\",\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminDashPanel-right-subsection orders-filter-subSection\",\n      children: [filterBtn(\"all\", all, \"All\"), filterBtn(\"Not-Confirmed\", NotConfirmed, \"Not-Confirmed\"), filterBtn(\"Ordered\", Ordered, \"Ordered\"), filterBtn(\"Processing\", Processing, \"Processing\"), filterBtn(\"Picking-Up\", PickingUp, \"Picking-Up\"), filterBtn(\"Out-For-Delivery\", OutForDelivery, \"Out-For-Delivery\"), filterBtn(\"Delivered\", Delivered, \"Delivered\"), filterBtn(\"Cancelled\", Cancelled, \"Cancelled\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminDashPanel-right-subsection\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"adminDashPanel-right-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"adminDashPanel-right-table-head-sec\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"adminDashPanel-right-table-head-value\",\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"adminDashPanel-right-table-head-value\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"adminDashPanel-right-table-head-value\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"adminDashPanel-right-table-head-value\",\n              children: \"Ordered On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"adminDashPanel-right-table-head-value\",\n              children: \"Payment Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"adminDashPanel-right-table-head-value\",\n              children: \"Payment Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"adminDashPanel-right-table-head-value\",\n              children: \"Delivery Boy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"adminDashPanel-right-table-head-value\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"adminDashPanel-right-table-body-sec\",\n          children: orders && orders.map((order, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"adminDashPanel-right-table-body-tr\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"adminDashPanel-right-table-body-value\",\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"adminDashPanel-right-table-body-value\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `adminDashPanel-right-table-body-div ${order.Ostatus}`,\n                  children: order.Ostatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"adminDashPanel-right-table-body-value\",\n                children: order.OtotalPrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"adminDashPanel-right-table-body-value\",\n                children: moment(order.createdAt).format(\"DD-MMM-yyyy\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"adminDashPanel-right-table-body-value\",\n                children: order.OpaymentMode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"adminDashPanel-right-table-body-value\",\n                children: order.OpaymentStatus === \"Paid\" ? order.OpaymentStatus : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"adminDashPanel-right-table-body-value-btn\",\n                  onClick: () => handlePaymentStatus(order),\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"adminDashPanel-right-table-body-value\",\n                children: order.OemployeeName ? order.OemployeeName : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"adminDashPanel-right-table-body-value-btn\",\n                  onClick: () => handleEmployeeAssign(order),\n                  children: \"Not Assigned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"adminDashPanel-right-table-body-value\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handlePreview(order),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: ViewIcon,\n                    alt: \"\",\n                    className: \"adminDashPanel-right-table-icon \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(order),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: EditIcon,\n                    alt: \"\",\n                    className: \"adminDashPanel-right-table-icon \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), orderActive === \"orderDetails\" && /*#__PURE__*/_jsxDEV(OrderDetails, {\n      setOrderActive: setOrderActive,\n      order: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this), orderUpdateActive === \"orderUpdateActive\" && /*#__PURE__*/_jsxDEV(OrderUpdate, {\n      setOrderUpdateActive: setOrderUpdateActive,\n      order: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this), orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && /*#__PURE__*/_jsxDEV(EmployeeUpdate, {\n      setOrderEmployeeAssignActive: setOrderEmployeeAssignActive,\n      order: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this), orderUpdatePayment === \"orderUpdatePayment\" && /*#__PURE__*/_jsxDEV(PaymentStatusUpdate, {\n      setOrderUpdatePayment: setOrderUpdatePayment,\n      order: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Order, \"wZU/6t6U9rxPHwuTlYklLTD2l4c=\");\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["F:/mern/projects/greenbeans/client/src/admin/Order.js"],"names":["React","useState","useEffect","moment","getAllOrders","isAuthenticated","ViewIcon","EditIcon","OrderDetails","OrderUpdate","EmployeeUpdate","PaymentStatusUpdate","Order","orders","setOrders","orderActive","setOrderActive","orderUpdateActive","setOrderUpdateActive","order","setOrder","status","setStatus","orderEmployeeAssignActive","setOrderEmployeeAssignActive","orderUpdatePayment","setOrderUpdatePayment","countValues","setCountValues","all","NotConfirmed","Ordered","Processing","PickingUp","OutForDelivery","Delivered","Cancelled","user","token","loadOrders","userId","data","error","console","log","handlePreview","handleEdit","handleEmployeeAssign","handlePaymentStatus","filterBtn","statusState","statusValue","statusBtnValue","loadCountValues","length","filter","Ostatus","_id","map","index","OtotalPrice","createdAt","format","OpaymentMode","OpaymentStatus","OemployeeName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { getAllOrders } from \"../user\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport ViewIcon from \"../icons/view.svg\";\r\nimport EditIcon from \"../icons/Edit.svg\";\r\nimport OrderDetails from \"../user/OrderDetails\";\r\nimport OrderUpdate from \"./OrderUpdate\";\r\nimport EmployeeUpdate from \"./EmployeeUpdate\";\r\nimport PaymentStatusUpdate from \"./PaymentStatusUpdate\";\r\n\r\nconst Order = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderActive, setOrderActive] = useState(\"\");\r\n  const [orderUpdateActive, setOrderUpdateActive] = useState(\"\");\r\n  const [order, setOrder] = useState({});\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [orderEmployeeAssignActive, setOrderEmployeeAssignActive] =\r\n    useState(\"\");\r\n  const [orderUpdatePayment, setOrderUpdatePayment] = useState(\"\");\r\n  const [countValues, setCountValues] = useState({\r\n    all: 0,\r\n    NotConfirmed: 0,\r\n    Ordered: 0,\r\n    Processing: 0,\r\n    PickingUp: 0,\r\n    OutForDelivery: 0,\r\n    Delivered: 0,\r\n    Cancelled: 0,\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const {\r\n    all,\r\n    NotConfirmed,\r\n    Ordered,\r\n    Processing,\r\n    PickingUp,\r\n    OutForDelivery,\r\n    Delivered,\r\n    Cancelled,\r\n  } = countValues;\r\n\r\n  const loadOrders = async (userId, token, status) => {\r\n    try {\r\n      const data = await getAllOrders(userId, token, status);\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        return setOrders(data);\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n  };\r\n\r\n  const handlePreview = async (order) => {\r\n    return setOrderActive(\"orderDetails\"), setOrder(order);\r\n  };\r\n\r\n  const handleEdit = async (order) => {\r\n    return setOrderUpdateActive(\"orderUpdateActive\"), setOrder(order);\r\n  };\r\n\r\n  const handleEmployeeAssign = async (order) => {\r\n    return (\r\n      setOrderEmployeeAssignActive(\"orderEmployeeAssignActive\"), setOrder(order)\r\n    );\r\n  };\r\n\r\n  const handlePaymentStatus = (order) => {\r\n    return setOrderUpdatePayment(\"orderUpdatePayment\"), setOrder(order);\r\n  };\r\n\r\n  const filterBtn = (statusState, statusValue, statusBtnValue) => {\r\n    return (\r\n      <button\r\n        className={`orders-filter-btn ${\r\n          status === statusState ? \"active\" : \"\"\r\n        }`}\r\n        onClick={() => setStatus(statusState)}\r\n      >\r\n        {statusBtnValue} <span className=\"filter-btn-value\">{statusValue}</span>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const loadCountValues = async (userId, token) => {\r\n    var orders = [];\r\n    try {\r\n      const data = await getAllOrders(userId, token, \"all\");\r\n      if (data.error) {\r\n        return console.log(data.error);\r\n      } else {\r\n        orders = data;\r\n      }\r\n    } catch (error) {\r\n      return console.log(error);\r\n    }\r\n\r\n    setCountValues({\r\n      ...countValues,\r\n      all: orders.length,\r\n      NotConfirmed: orders.filter((order) => order.Ostatus === \"Not-Confirmed\")\r\n        .length,\r\n      Ordered: orders.filter((order) => order.Ostatus === \"Ordered\").length,\r\n      Processing: orders.filter((order) => order.Ostatus === \"Processing\")\r\n        .length,\r\n      PickingUp: orders.filter((order) => order.Ostatus === \"Picking-Up\")\r\n        .length,\r\n      OutForDelivery: orders.filter(\r\n        (order) => order.Ostatus === \"Out-For-Delivery\"\r\n      ).length,\r\n      Delivered: orders.filter((order) => order.Ostatus === \"Delivered\").length,\r\n      Cancelled: orders.filter((order) => order.Ostatus === \"Cancelled\").length,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadOrders(user._id, token, status);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  useEffect(() => {\r\n    loadCountValues(user._id, token);\r\n  }, [orderActive, orderUpdateActive, status, orderEmployeeAssignActive]);\r\n\r\n  return (\r\n    <section className=\"adminDashPanel-right-section order-section\">\r\n      <h1 className=\"adminDashPanel-right-header\">Orders</h1>\r\n      <div className=\"adminDashPanel-right-subsection orders-filter-subSection\">\r\n        {/* <button\r\n          className={`orders-filter-btn ${status === \"all\" ? \"active\" : \"\"}`}\r\n          onClick={() => setStatus(\"all\")}\r\n        >\r\n          All <span className=\"filter-btn-value\">{all}</span>\r\n        </button> */}\r\n        {filterBtn(\"all\", all, \"All\")}\r\n        {filterBtn(\"Not-Confirmed\", NotConfirmed, \"Not-Confirmed\")}\r\n        {filterBtn(\"Ordered\", Ordered, \"Ordered\")}\r\n        {filterBtn(\"Processing\", Processing, \"Processing\")}\r\n        {filterBtn(\"Picking-Up\", PickingUp, \"Picking-Up\")}\r\n        {filterBtn(\"Out-For-Delivery\", OutForDelivery, \"Out-For-Delivery\")}\r\n        {filterBtn(\"Delivered\", Delivered, \"Delivered\")}\r\n        {filterBtn(\"Cancelled\", Cancelled, \"Cancelled\")}\r\n        {/* <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Not-Confirmed\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Not-Confirmed\")}\r\n        >\r\n          Not-Confirmed<span className=\"filter-btn-value\">{NotConfirmed}</span>\r\n        </button> */}\r\n        {/* <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Ordered\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Ordered\")}\r\n        >\r\n          Ordered<span className=\"filter-btn-value\">{Ordered}</span>\r\n        </button> */}\r\n        {/* <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Processing\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Processing\")}\r\n        >\r\n          Processing<span className=\"filter-btn-value\">{Processing}</span>\r\n        </button> */}\r\n        {/* <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Picking-Up\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Picking-Up\")}\r\n        >\r\n          Picking-Up<span className=\"filter-btn-value\">{PickingUp}</span>\r\n        </button> */}\r\n        {/* <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Out-For-Delivery\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Out-For-Delivery\")}\r\n        >\r\n          Out-For-Delivery\r\n          <span className=\"filter-btn-value\">{OutForDelivery}</span>\r\n        </button> */}\r\n        {/* <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Delivered\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Delivered\")}\r\n        >\r\n          Delivered<span className=\"filter-btn-value\">{Delivered}</span>\r\n        </button> */}\r\n        {/* <button\r\n          className={`orders-filter-btn ${\r\n            status === \"Cancelled\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => setStatus(\"Cancelled\")}\r\n        >\r\n          Cancelled<span className=\"filter-btn-value\">{Cancelled}</span>\r\n        </button> */}\r\n      </div>\r\n      <div className=\"adminDashPanel-right-subsection\">\r\n        <table className=\"adminDashPanel-right-table\">\r\n          <thead className=\"adminDashPanel-right-table-head-sec\">\r\n            <tr>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Order ID\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Status</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Total</th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Ordered On\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Mode\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Payment Status\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">\r\n                Delivery Boy\r\n              </th>\r\n              <th className=\"adminDashPanel-right-table-head-value\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"adminDashPanel-right-table-body-sec\">\r\n            {orders &&\r\n              orders.map((order, index) => {\r\n                return (\r\n                  <tr\r\n                    key={index}\r\n                    className=\"adminDashPanel-right-table-body-tr\"\r\n                  >\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order._id}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <div\r\n                        className={`adminDashPanel-right-table-body-div ${order.Ostatus}`}\r\n                      >\r\n                        {order.Ostatus}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OtotalPrice}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {moment(order.createdAt).format(\"DD-MMM-yyyy\")}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentMode}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OpaymentStatus === \"Paid\" ? (\r\n                        order.OpaymentStatus\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handlePaymentStatus(order)}\r\n                        >\r\n                          Pending\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      {order.OemployeeName ? (\r\n                        order.OemployeeName\r\n                      ) : (\r\n                        <button\r\n                          className=\"adminDashPanel-right-table-body-value-btn\"\r\n                          onClick={() => handleEmployeeAssign(order)}\r\n                        >\r\n                          Not Assigned\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td className=\"adminDashPanel-right-table-body-value\">\r\n                      <button onClick={() => handlePreview(order)}>\r\n                        <img\r\n                          src={ViewIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                      <button onClick={() => handleEdit(order)}>\r\n                        <img\r\n                          src={EditIcon}\r\n                          alt=\"\"\r\n                          className=\"adminDashPanel-right-table-icon \"\r\n                        />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {orderActive === \"orderDetails\" && (\r\n        <OrderDetails setOrderActive={setOrderActive} order={order} />\r\n      )}\r\n      {orderUpdateActive === \"orderUpdateActive\" && (\r\n        <OrderUpdate\r\n          setOrderUpdateActive={setOrderUpdateActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderEmployeeAssignActive === \"orderEmployeeAssignActive\" && (\r\n        <EmployeeUpdate\r\n          setOrderEmployeeAssignActive={setOrderEmployeeAssignActive}\r\n          order={order}\r\n        />\r\n      )}\r\n      {orderUpdatePayment === \"orderUpdatePayment\" && (\r\n        <PaymentStatusUpdate\r\n          setOrderUpdatePayment={setOrderUpdatePayment}\r\n          order={order}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"]},"metadata":{},"sourceType":"module"}