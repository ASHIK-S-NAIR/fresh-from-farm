{"ast":null,"code":"import { API } from \"../backend\";\nexport const getUser = async (userId, token) => {\n  try {\n    const result = await fetch(`${API}/user/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateUser = async (body, userId, token) => {\n  try {\n    const result = await fetch(`${API}/user/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\nexport const changePassword = async (userId, token, body) => {\n  // console.log(\"index oldPassword : \" ,oldPassword);\n  // console.log(\"index newPassword : \" ,newPassword);\n  try {\n    const result = await fetch(`${API}/user/password/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\nexport const getUserCart = async (userId, token) => {\n  try {\n    const result = await fetch(`${API}/user/cart/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()); // console.log(\"result: \", result);\n\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\nexport const addToUserCart = (userId, token, body) => {\n  try {\n    const result = fetch(`${API}/user/addtocart/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\nexport const updateFromUserCart = (userId, token, _ref) => {\n  let {\n    productId,\n    quantity\n  } = _ref;\n\n  try {\n    const result = fetch(`${API}/user/updatecart/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        productId,\n        quantity\n      })\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\nexport const deleteFromCart = (userId, token, productId) => {\n  try {\n    const result = fetch(`${API}/user/deletecart/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        productId\n      })\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\nexport const createOrder = (userId, token, _ref2) => {\n  let {\n    shippingAddress,\n    paymentMode\n  } = _ref2;\n  console.log(\"Index shippingAddress\", shippingAddress);\n\n  try {\n    const result = fetch(`${API}/order/create/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        shippingAddress,\n        paymentMode\n      })\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const razorPayOrder = async body => {\n  try {\n    const result = await fetch(`${API}/order/razorpayorder`, {\n      method: \"POST\",\n      // mode: \"no-cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const paymentVerify = async body => {\n  try {\n    const result = await fetch(`${API}/order/verify`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateOrderConfirmation = async (userId, token, orderId, body) => {\n  try {\n    // const result = await fetch(`${API}/order/${orderId}/${userId}`, {\n    const result = await fetch(`${API}/order/orderconfirmation/${orderId}/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getUserOrders = async (userId, token) => {\n  try {\n    const result = await fetch(`${API}/user/orders/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // countOrders\n\nexport const getCountOrders = async (userId, token) => {\n  try {\n    const result = await fetch(`${API}/order/orders/countorders/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // countProducts\n\nexport const getCountProducts = async (userId, token) => {\n  try {\n    const result = await fetch(`${API}/products/countproducts/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // countEmployers\n\nexport const getCountEmployers = async (userId, token) => {\n  try {\n    const result = await fetch(`${API}/employers/countemployers/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // countCustomers\n\nexport const getCountCustomers = async (userId, token) => {\n  try {\n    const result = await fetch(`${API}/users/countcustomers/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // getAllOrders\n\nexport const getAllOrders = async (userId, token, status) => {\n  try {\n    const result = await fetch(`${API}/orders/${status}/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // updateOrder\n\nexport const updateOrderStatus = async (userId, token, orderId, status) => {\n  try {\n    const result = await fetch(`${API}/order/updatestatus/${orderId}/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        status: status\n      })\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // createProducts\n\nexport const createProduct = async (userId, token, value) => {\n  try {\n    const result = await fetch(`${API}/product/create/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(value)\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    return error;\n  }\n}; // getEmployees\n\nexport const getEmployees = async (userId, token, status) => {\n  try {\n    const result = await fetch(`${API}/employees/${status}/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // createEmployee\n\nexport const createEmployee = async (userId, token, email) => {\n  try {\n    const result = await fetch(`${API}/employee/create/${email}/${userId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(\"error\", error.message);\n    return error;\n  }\n}; // deleteEmployee\n\nexport const deleteEmployee = async (userId, token, employeeId) => {\n  try {\n    const result = await fetch(`${API}/employee/${employeeId}/${userId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(\"error\", error.message);\n    return error;\n  }\n}; // getCustomers\n\nexport const getCustomers = async (userId, token) => {\n  try {\n    const result = await fetch(`${API}/user/customers/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(\"error\", error.message);\n    return error;\n  }\n}; // deleteCustomer\n\nexport const deleteCustomer = async (userId, token, customerId) => {\n  try {\n    const result = await fetch(`${API}/user/${customerId}/${userId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(\"error\", error.message);\n    return error;\n  }\n};","map":{"version":3,"sources":["F:/mern/projects/greenbeans/client/src/user/index.js"],"names":["API","getUser","userId","token","result","fetch","method","headers","Accept","Authorization","then","res","json","error","console","log","updateUser","body","JSON","stringify","changePassword","getUserCart","addToUserCart","updateFromUserCart","productId","quantity","deleteFromCart","createOrder","shippingAddress","paymentMode","razorPayOrder","paymentVerify","updateOrderConfirmation","orderId","getUserOrders","getCountOrders","getCountProducts","getCountEmployers","getCountCustomers","getAllOrders","status","updateOrderStatus","createProduct","value","getEmployees","createEmployee","email","message","deleteEmployee","employeeId","getCustomers","deleteCustomer","customerId"],"mappings":"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","sourcesContent":["import { API } from \"../backend\";\r\n\r\nexport const getUser = async (userId, token) => {\r\n  try {\r\n    const result = await fetch(`${API}/user/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateUser = async (body, userId, token) => {\r\n  try {\r\n    const result = await fetch(`${API}/user/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const changePassword = async (userId, token, body) => {\r\n  // console.log(\"index oldPassword : \" ,oldPassword);\r\n  // console.log(\"index newPassword : \" ,newPassword);\r\n  try {\r\n    const result = await fetch(`${API}/user/password/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getUserCart = async (userId, token) => {\r\n  try {\r\n    const result = await fetch(`${API}/user/cart/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n    // console.log(\"result: \", result);\r\n\r\n    return result;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const addToUserCart = (userId, token, body) => {\r\n  try {\r\n    const result = fetch(`${API}/user/addtocart/${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(body),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const updateFromUserCart = (userId, token, { productId, quantity }) => {\r\n  try {\r\n    const result = fetch(`${API}/user/updatecart/${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ productId, quantity }),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const deleteFromCart = (userId, token, productId) => {\r\n  try {\r\n    const result = fetch(`${API}/user/deletecart/${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ productId }),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const createOrder = (\r\n  userId,\r\n  token,\r\n  { shippingAddress, paymentMode }\r\n) => {\r\n  console.log(\"Index shippingAddress\", shippingAddress);\r\n  try {\r\n    const result = fetch(`${API}/order/create/${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ shippingAddress, paymentMode }),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const razorPayOrder = async (body) => {\r\n  try {\r\n    const result = await fetch(`${API}/order/razorpayorder`, {\r\n      method: \"POST\",\r\n      // mode: \"no-cors\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const paymentVerify = async (body) => {\r\n  try {\r\n    const result = await fetch(`${API}/order/verify`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateOrderConfirmation = async (userId, token, orderId, body) => {\r\n  try {\r\n    // const result = await fetch(`${API}/order/${orderId}/${userId}`, {\r\n    const result = await fetch(\r\n      `${API}/order/orderconfirmation/${orderId}/${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(body),\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getUserOrders = async (userId, token) => {\r\n  try {\r\n    const result = await fetch(`${API}/user/orders/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// countOrders\r\nexport const getCountOrders = async (userId, token) => {\r\n  try {\r\n    const result = await fetch(`${API}/order/orders/countorders/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// countProducts\r\nexport const getCountProducts = async (userId, token) => {\r\n  try {\r\n    const result = await fetch(`${API}/products/countproducts/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// countEmployers\r\nexport const getCountEmployers = async (userId, token) => {\r\n  try {\r\n    const result = await fetch(`${API}/employers/countemployers/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// countCustomers\r\nexport const getCountCustomers = async (userId, token) => {\r\n  try {\r\n    const result = await fetch(`${API}/users/countcustomers/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// getAllOrders\r\nexport const getAllOrders = async (userId, token, status) => {\r\n  try {\r\n    const result = await fetch(`${API}/orders/${status}/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// updateOrder\r\nexport const updateOrderStatus = async (userId, token, orderId, status) => {\r\n  try {\r\n    const result = await fetch(\r\n      `${API}/order/updatestatus/${orderId}/${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({ status: status }),\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// createProducts\r\nexport const createProduct = async (userId, token, value) => {\r\n  try {\r\n    const result = await fetch(`${API}/product/create/${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(value),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// getEmployees\r\nexport const getEmployees = async (userId, token, status) => {\r\n  try {\r\n    const result = await fetch(`${API}/employees/${status}/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// createEmployee\r\nexport const createEmployee = async (userId, token, email) => {\r\n  try {\r\n    const result = await fetch(`${API}/employee/create/${email}/${userId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(\"error\", error.message);\r\n    return error;\r\n  }\r\n};\r\n\r\n// deleteEmployee\r\nexport const deleteEmployee = async (userId, token, employeeId) => {\r\n  try {\r\n    const result = await fetch(`${API}/employee/${employeeId}/${userId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(\"error\", error.message);\r\n    return error;\r\n  }\r\n};\r\n\r\n// getCustomers\r\nexport const getCustomers = async (userId, token) => {\r\n  try {\r\n    const result = await fetch(`${API}/user/customers/${userId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(\"error\", error.message);\r\n    return error;\r\n  }\r\n};\r\n\r\n// deleteCustomer\r\nexport const deleteCustomer = async(userId, token, customerId) => {\r\n  try {\r\n    const result = await fetch(`${API}/user/${customerId}/${userId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    }).then(res => res.json())\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(\"error\", error.message);\r\n    return error;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}