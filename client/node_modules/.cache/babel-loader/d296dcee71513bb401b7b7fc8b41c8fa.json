{"ast":null,"code":"import { API } from \"../../backend\"; // getProduct\n\nexport const getProduct = async productId => {\n  try {\n    const result = await fetch(`${API}/product/${productId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n}; // getAllProducts\n\nexport const getAllProducts = async category => {\n  try {\n    const result = await fetch(`${API}/products/${category}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // updateProduct\n\nexport const updateProduct = async (userId, token, productId, values) => {\n  try {\n    const result = await fetch(`${API}/product/${productId}/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        values\n      })\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n}; // updateProductWithImage\n\nexport const updateProductWithImage = async (userId, token, productId, formData) => {\n  console.log(\"formData type\", typeof formData);\n\n  try {\n    const result = await fetch(`${API}/product/updateproductwithimage/${productId}/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: formData\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(\"error\", error.message);\n    return error;\n  }\n}; // deleteProduct\n\nexport const deleteProduct = async (userId, token, productId) => {\n  try {\n    const result = await fetch(`${API}/product/${productId}/${userId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json());\n    return result;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};","map":{"version":3,"sources":["F:/mern/projects/greenbeans/client/src/core/helper/productDetailHelper.js"],"names":["API","getProduct","productId","result","fetch","method","headers","Accept","then","res","json","error","console","log","getAllProducts","category","updateProduct","userId","token","values","Authorization","body","JSON","stringify","updateProductWithImage","formData","message","deleteProduct"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\r\n\r\n// getProduct\r\nexport const getProduct = async (productId) => {\r\n  try {\r\n    const result = await fetch(`${API}/product/${productId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    }).then((res) => res.json());\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// getAllProducts\r\nexport const getAllProducts = async (category) => {\r\n  try {\r\n    const result = await fetch(`${API}/products/${category}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// updateProduct\r\nexport const updateProduct = async (userId, token, productId, values) => {\r\n  try {\r\n    const result = await fetch(`${API}/product/${productId}/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify({values}),\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n\r\n// updateProductWithImage\r\nexport const updateProductWithImage = async (\r\n  userId,\r\n  token,\r\n  productId,\r\n  formData\r\n) => {\r\n  console.log(\"formData type\", typeof formData);\r\n  try {\r\n    const result = await fetch(\r\n      `${API}/product/updateproductwithimage/${productId}/${userId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: formData,\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(\"error\", error.message);\r\n    return error;\r\n  }\r\n};\r\n\r\n// deleteProduct\r\nexport const deleteProduct = async (userId, token, productId) => {\r\n  try {\r\n    const result = await fetch(`${API}/product/${productId}/${userId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then((res) => res.json());\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return error;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}