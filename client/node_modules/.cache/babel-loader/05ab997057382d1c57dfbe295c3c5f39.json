{"ast":null,"code":"import { API } from '../backend';\nexport const login = async _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n\n  try {\n    const result = await fetch(`${API}/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return result.json();\n  } catch (error) {\n    console.log(error); // return error;\n  }\n};\nexport const logout = async () => {\n  try {\n    if (typeof window !== \"undefined\") {\n      localStorage.removeItem(\"jwt\");\n    }\n\n    next();\n    const result = await fetch(`${API}/logout`, {\n      method: \"GET\"\n    });\n    console.log(result);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const authenticate = data => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["F:/mern/projects/greenbeans/client/src/auth/index.js"],"names":["API","login","email","password","result","fetch","method","body","JSON","stringify","headers","json","error","console","log","logout","window","localStorage","removeItem","next","authenticate","data","setItem","isAuthenticated","getItem","parse"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,YAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,cAA6B;AAAA,MAAtB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAsB;;AAC9C,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEL,GAAI,QAAR,EAAiB;AACvCM,MAAAA,MAAM,EAAG,MAD8B;AAEvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAf,CAFiC;AAGvCO,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAH8B,KAAjB,CAA1B;AAQA,WAAON,MAAM,CAACO,IAAP,EAAP;AACH,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADY,CAEZ;AACH;AACJ,CAfM;AAiBP,OAAO,MAAMG,MAAM,GAAG,YAAY;AAC9B,MAAI;AACA,QAAG,OAAOC,MAAP,KAAkB,WAArB,EAAiC;AAC7BC,MAAAA,YAAY,CAACC,UAAb,CAAwB,KAAxB;AACH;;AACDC,IAAAA,IAAI;AAEJ,UAAMf,MAAM,GAAG,MAAMC,KAAK,CAAE,GAAEL,GAAI,SAAR,EAAkB;AACxCM,MAAAA,MAAM,EAAE;AADgC,KAAlB,CAA1B;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACH,GAXD,CAWE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAfM;AAiBP,OAAO,MAAMQ,YAAY,GAAIC,IAAD,IAAU;AAClC,MAAG,OAAOL,MAAP,KAAkB,WAArB,EAAiC;AAC7BC,IAAAA,YAAY,CAACK,OAAb,CAAqB,KAArB,EAA4Bd,IAAI,CAACC,SAAL,CAAeY,IAAf,CAA5B;AACH;AACJ,CAJM;AAMP,OAAO,MAAME,eAAe,GAAG,MAAM;AACjC,MAAG,OAAOP,MAAP,IAAiB,WAApB,EAAgC;AAC5B,WAAO,KAAP;AACH;;AAED,MAAGC,YAAY,CAACO,OAAb,CAAqB,KAArB,CAAH,EAA+B;AAC3B,WAAOhB,IAAI,CAACiB,KAAL,CAAWR,YAAY,CAACO,OAAb,CAAqB,KAArB,CAAX,CAAP;AACH,GAFD,MAEK;AACD,WAAO,KAAP;AACH;AACJ,CAVM","sourcesContent":["import {API} from '../backend';\r\n\r\nexport const login = async ({email, password}) => {\r\n    try {\r\n        const result = await fetch(`${API}/login`, {\r\n            method : \"POST\",\r\n            body: JSON.stringify({email, password}),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }  \r\n        })\r\n\r\n        return result.json();\r\n    } catch (error) {\r\n        console.log(error);\r\n        // return error;\r\n    }\r\n}\r\n\r\nexport const logout = async () => {\r\n    try {\r\n        if(typeof window !== \"undefined\"){\r\n            localStorage.removeItem(\"jwt\");\r\n        }\r\n        next();\r\n    \r\n        const result = await fetch(`${API}/logout`, {\r\n            method: \"GET\",\r\n        })\r\n    \r\n        console.log(result);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const authenticate = (data) => {\r\n    if(typeof window !== \"undefined\"){\r\n        localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    if(typeof window == \"undefined\"){\r\n        return false;\r\n    }\r\n\r\n    if(localStorage.getItem(\"jwt\")){\r\n        return JSON.parse(localStorage.getItem(\"jwt\"));\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}